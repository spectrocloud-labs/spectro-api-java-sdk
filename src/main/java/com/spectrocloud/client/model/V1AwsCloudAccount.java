/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1AwsCloudAccountCredentialType;
import com.spectrocloud.client.model.V1AwsStsCredentials;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AWS cloud account which includes access key and secret key in case of &#x27;secret&#x27; credentials type. It includes policyARNS, ARN and externalId in case of sts. Partition is a group of AWS Region and Service objects
 */
@Schema(description = "AWS cloud account which includes access key and secret key in case of 'secret' credentials type. It includes policyARNS, ARN and externalId in case of sts. Partition is a group of AWS Region and Service objects")


public class V1AwsCloudAccount {
  @SerializedName("accessKey")
  private String accessKey = null;

  @SerializedName("credentialType")
  private V1AwsCloudAccountCredentialType credentialType = null;

  /**
   * AWS accounts are scoped to a single partition. Allowed values [aws, aws-us-gov], Default values
   */
  @JsonAdapter(PartitionEnum.Adapter.class)
  public enum PartitionEnum {
    AWS("aws"),
    AWS_US_GOV("aws-us-gov");

    private String value;

    PartitionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PartitionEnum fromValue(String input) {
      for (PartitionEnum b : PartitionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PartitionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PartitionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PartitionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PartitionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("partition")
  private PartitionEnum partition = PartitionEnum.AWS;

  @SerializedName("policyARNs")
  private List<String> policyARNs = null;

  @SerializedName("secretKey")
  private String secretKey = null;

  @SerializedName("sts")
  private V1AwsStsCredentials sts = null;

  public V1AwsCloudAccount accessKey(String accessKey) {
    this.accessKey = accessKey;
    return this;
  }

   /**
   * AWS account access key
   * @return accessKey
  **/
  @Schema(description = "AWS account access key")
  public String getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }

  public V1AwsCloudAccount credentialType(V1AwsCloudAccountCredentialType credentialType) {
    this.credentialType = credentialType;
    return this;
  }

   /**
   * Get credentialType
   * @return credentialType
  **/
  @Schema(description = "")
  public V1AwsCloudAccountCredentialType getCredentialType() {
    return credentialType;
  }

  public void setCredentialType(V1AwsCloudAccountCredentialType credentialType) {
    this.credentialType = credentialType;
  }

  public V1AwsCloudAccount partition(PartitionEnum partition) {
    this.partition = partition;
    return this;
  }

   /**
   * AWS accounts are scoped to a single partition. Allowed values [aws, aws-us-gov], Default values
   * @return partition
  **/
  @Schema(description = "AWS accounts are scoped to a single partition. Allowed values [aws, aws-us-gov], Default values")
  public PartitionEnum getPartition() {
    return partition;
  }

  public void setPartition(PartitionEnum partition) {
    this.partition = partition;
  }

  public V1AwsCloudAccount policyARNs(List<String> policyARNs) {
    this.policyARNs = policyARNs;
    return this;
  }

  public V1AwsCloudAccount addPolicyARNsItem(String policyARNsItem) {
    if (this.policyARNs == null) {
      this.policyARNs = new ArrayList<String>();
    }
    this.policyARNs.add(policyARNsItem);
    return this;
  }

   /**
   * List of policy ARNs required in case of credentialType sts.
   * @return policyARNs
  **/
  @Schema(description = "List of policy ARNs required in case of credentialType sts.")
  public List<String> getPolicyARNs() {
    return policyARNs;
  }

  public void setPolicyARNs(List<String> policyARNs) {
    this.policyARNs = policyARNs;
  }

  public V1AwsCloudAccount secretKey(String secretKey) {
    this.secretKey = secretKey;
    return this;
  }

   /**
   * AWS account secret key
   * @return secretKey
  **/
  @Schema(description = "AWS account secret key")
  public String getSecretKey() {
    return secretKey;
  }

  public void setSecretKey(String secretKey) {
    this.secretKey = secretKey;
  }

  public V1AwsCloudAccount sts(V1AwsStsCredentials sts) {
    this.sts = sts;
    return this;
  }

   /**
   * Get sts
   * @return sts
  **/
  @Schema(description = "")
  public V1AwsStsCredentials getSts() {
    return sts;
  }

  public void setSts(V1AwsStsCredentials sts) {
    this.sts = sts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1AwsCloudAccount v1AwsCloudAccount = (V1AwsCloudAccount) o;
    return Objects.equals(this.accessKey, v1AwsCloudAccount.accessKey) &&
        Objects.equals(this.credentialType, v1AwsCloudAccount.credentialType) &&
        Objects.equals(this.partition, v1AwsCloudAccount.partition) &&
        Objects.equals(this.policyARNs, v1AwsCloudAccount.policyARNs) &&
        Objects.equals(this.secretKey, v1AwsCloudAccount.secretKey) &&
        Objects.equals(this.sts, v1AwsCloudAccount.sts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, credentialType, partition, policyARNs, secretKey, sts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1AwsCloudAccount {\n");
    
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    credentialType: ").append(toIndentedString(credentialType)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    policyARNs: ").append(toIndentedString(policyARNs)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("    sts: ").append(toIndentedString(sts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
