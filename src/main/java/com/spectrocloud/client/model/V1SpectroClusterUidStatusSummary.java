/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1APIEndpoint;
import com.spectrocloud.client.model.V1ClusterCondition;
import com.spectrocloud.client.model.V1ClusterImport;
import com.spectrocloud.client.model.V1ClusterMetaSpecLocation;
import com.spectrocloud.client.model.V1ClusterPackStatus;
import com.spectrocloud.client.model.V1KubeMeta;
import com.spectrocloud.client.model.V1LoadBalancerService;
import com.spectrocloud.client.model.V1ResourceCost;
import com.spectrocloud.client.model.V1ResourceReference;
import com.spectrocloud.client.model.V1SpcApply;
import com.spectrocloud.client.model.V1SpectroClusterAddOnServiceSummary;
import com.spectrocloud.client.model.V1SpectroClusterHealthStatus;
import com.spectrocloud.client.model.V1SpectroClusterMetrics;
import com.spectrocloud.client.model.V1SpectroClusterNotifications;
import com.spectrocloud.client.model.V1Upgrades;
import com.spectrocloud.client.model.V1Virtual;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Spectro cluster status summary
 */
@Schema(description = "Spectro cluster status summary")


public class V1SpectroClusterUidStatusSummary {
  @SerializedName("abortTimestamp")
  private OffsetDateTime abortTimestamp = null;

  @SerializedName("addOnServices")
  private List<V1SpectroClusterAddOnServiceSummary> addOnServices = null;

  @SerializedName("apiEndpoints")
  private List<V1APIEndpoint> apiEndpoints = null;

  @SerializedName("clusterImport")
  private V1ClusterImport clusterImport = null;

  @SerializedName("conditions")
  private List<V1ClusterCondition> conditions = null;

  @SerializedName("cost")
  private V1ResourceCost cost = null;

  @SerializedName("health")
  private V1SpectroClusterHealthStatus health = null;

  @SerializedName("hourlyRate")
  private V1ResourceCost hourlyRate = null;

  @SerializedName("kubeMeta")
  private V1KubeMeta kubeMeta = null;

  @SerializedName("location")
  private V1ClusterMetaSpecLocation location = null;

  @SerializedName("metrics")
  private V1SpectroClusterMetrics metrics = null;

  @SerializedName("nested")
  private V1Virtual nested = null;

  @SerializedName("notifications")
  private V1SpectroClusterNotifications notifications = null;

  @SerializedName("packs")
  private List<V1ClusterPackStatus> packs = null;

  @SerializedName("services")
  private List<V1LoadBalancerService> services = null;

  @SerializedName("spcApply")
  private V1SpcApply spcApply = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("upgrades")
  private List<V1Upgrades> upgrades = null;

  @SerializedName("virtual")
  private V1Virtual virtual = null;

  @SerializedName("workspaces")
  private List<V1ResourceReference> workspaces = null;

  public V1SpectroClusterUidStatusSummary abortTimestamp(OffsetDateTime abortTimestamp) {
    this.abortTimestamp = abortTimestamp;
    return this;
  }

   /**
   * Get abortTimestamp
   * @return abortTimestamp
  **/
  @Schema(description = "")
  public OffsetDateTime getAbortTimestamp() {
    return abortTimestamp;
  }

  public void setAbortTimestamp(OffsetDateTime abortTimestamp) {
    this.abortTimestamp = abortTimestamp;
  }

  public V1SpectroClusterUidStatusSummary addOnServices(List<V1SpectroClusterAddOnServiceSummary> addOnServices) {
    this.addOnServices = addOnServices;
    return this;
  }

  public V1SpectroClusterUidStatusSummary addAddOnServicesItem(V1SpectroClusterAddOnServiceSummary addOnServicesItem) {
    if (this.addOnServices == null) {
      this.addOnServices = new ArrayList<V1SpectroClusterAddOnServiceSummary>();
    }
    this.addOnServices.add(addOnServicesItem);
    return this;
  }

   /**
   * Get addOnServices
   * @return addOnServices
  **/
  @Schema(description = "")
  public List<V1SpectroClusterAddOnServiceSummary> getAddOnServices() {
    return addOnServices;
  }

  public void setAddOnServices(List<V1SpectroClusterAddOnServiceSummary> addOnServices) {
    this.addOnServices = addOnServices;
  }

  public V1SpectroClusterUidStatusSummary apiEndpoints(List<V1APIEndpoint> apiEndpoints) {
    this.apiEndpoints = apiEndpoints;
    return this;
  }

  public V1SpectroClusterUidStatusSummary addApiEndpointsItem(V1APIEndpoint apiEndpointsItem) {
    if (this.apiEndpoints == null) {
      this.apiEndpoints = new ArrayList<V1APIEndpoint>();
    }
    this.apiEndpoints.add(apiEndpointsItem);
    return this;
  }

   /**
   * Get apiEndpoints
   * @return apiEndpoints
  **/
  @Schema(description = "")
  public List<V1APIEndpoint> getApiEndpoints() {
    return apiEndpoints;
  }

  public void setApiEndpoints(List<V1APIEndpoint> apiEndpoints) {
    this.apiEndpoints = apiEndpoints;
  }

  public V1SpectroClusterUidStatusSummary clusterImport(V1ClusterImport clusterImport) {
    this.clusterImport = clusterImport;
    return this;
  }

   /**
   * Get clusterImport
   * @return clusterImport
  **/
  @Schema(description = "")
  public V1ClusterImport getClusterImport() {
    return clusterImport;
  }

  public void setClusterImport(V1ClusterImport clusterImport) {
    this.clusterImport = clusterImport;
  }

  public V1SpectroClusterUidStatusSummary conditions(List<V1ClusterCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public V1SpectroClusterUidStatusSummary addConditionsItem(V1ClusterCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<V1ClusterCondition>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Get conditions
   * @return conditions
  **/
  @Schema(description = "")
  public List<V1ClusterCondition> getConditions() {
    return conditions;
  }

  public void setConditions(List<V1ClusterCondition> conditions) {
    this.conditions = conditions;
  }

  public V1SpectroClusterUidStatusSummary cost(V1ResourceCost cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @Schema(description = "")
  public V1ResourceCost getCost() {
    return cost;
  }

  public void setCost(V1ResourceCost cost) {
    this.cost = cost;
  }

  public V1SpectroClusterUidStatusSummary health(V1SpectroClusterHealthStatus health) {
    this.health = health;
    return this;
  }

   /**
   * Get health
   * @return health
  **/
  @Schema(description = "")
  public V1SpectroClusterHealthStatus getHealth() {
    return health;
  }

  public void setHealth(V1SpectroClusterHealthStatus health) {
    this.health = health;
  }

  public V1SpectroClusterUidStatusSummary hourlyRate(V1ResourceCost hourlyRate) {
    this.hourlyRate = hourlyRate;
    return this;
  }

   /**
   * Get hourlyRate
   * @return hourlyRate
  **/
  @Schema(description = "")
  public V1ResourceCost getHourlyRate() {
    return hourlyRate;
  }

  public void setHourlyRate(V1ResourceCost hourlyRate) {
    this.hourlyRate = hourlyRate;
  }

  public V1SpectroClusterUidStatusSummary kubeMeta(V1KubeMeta kubeMeta) {
    this.kubeMeta = kubeMeta;
    return this;
  }

   /**
   * Get kubeMeta
   * @return kubeMeta
  **/
  @Schema(description = "")
  public V1KubeMeta getKubeMeta() {
    return kubeMeta;
  }

  public void setKubeMeta(V1KubeMeta kubeMeta) {
    this.kubeMeta = kubeMeta;
  }

  public V1SpectroClusterUidStatusSummary location(V1ClusterMetaSpecLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public V1ClusterMetaSpecLocation getLocation() {
    return location;
  }

  public void setLocation(V1ClusterMetaSpecLocation location) {
    this.location = location;
  }

  public V1SpectroClusterUidStatusSummary metrics(V1SpectroClusterMetrics metrics) {
    this.metrics = metrics;
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @Schema(description = "")
  public V1SpectroClusterMetrics getMetrics() {
    return metrics;
  }

  public void setMetrics(V1SpectroClusterMetrics metrics) {
    this.metrics = metrics;
  }

  public V1SpectroClusterUidStatusSummary nested(V1Virtual nested) {
    this.nested = nested;
    return this;
  }

   /**
   * Get nested
   * @return nested
  **/
  @Schema(description = "")
  public V1Virtual getNested() {
    return nested;
  }

  public void setNested(V1Virtual nested) {
    this.nested = nested;
  }

  public V1SpectroClusterUidStatusSummary notifications(V1SpectroClusterNotifications notifications) {
    this.notifications = notifications;
    return this;
  }

   /**
   * Get notifications
   * @return notifications
  **/
  @Schema(description = "")
  public V1SpectroClusterNotifications getNotifications() {
    return notifications;
  }

  public void setNotifications(V1SpectroClusterNotifications notifications) {
    this.notifications = notifications;
  }

  public V1SpectroClusterUidStatusSummary packs(List<V1ClusterPackStatus> packs) {
    this.packs = packs;
    return this;
  }

  public V1SpectroClusterUidStatusSummary addPacksItem(V1ClusterPackStatus packsItem) {
    if (this.packs == null) {
      this.packs = new ArrayList<V1ClusterPackStatus>();
    }
    this.packs.add(packsItem);
    return this;
  }

   /**
   * Get packs
   * @return packs
  **/
  @Schema(description = "")
  public List<V1ClusterPackStatus> getPacks() {
    return packs;
  }

  public void setPacks(List<V1ClusterPackStatus> packs) {
    this.packs = packs;
  }

  public V1SpectroClusterUidStatusSummary services(List<V1LoadBalancerService> services) {
    this.services = services;
    return this;
  }

  public V1SpectroClusterUidStatusSummary addServicesItem(V1LoadBalancerService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<V1LoadBalancerService>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @Schema(description = "")
  public List<V1LoadBalancerService> getServices() {
    return services;
  }

  public void setServices(List<V1LoadBalancerService> services) {
    this.services = services;
  }

  public V1SpectroClusterUidStatusSummary spcApply(V1SpcApply spcApply) {
    this.spcApply = spcApply;
    return this;
  }

   /**
   * Get spcApply
   * @return spcApply
  **/
  @Schema(description = "")
  public V1SpcApply getSpcApply() {
    return spcApply;
  }

  public void setSpcApply(V1SpcApply spcApply) {
    this.spcApply = spcApply;
  }

  public V1SpectroClusterUidStatusSummary state(String state) {
    this.state = state;
    return this;
  }

   /**
   * current operational state
   * @return state
  **/
  @Schema(description = "current operational state")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public V1SpectroClusterUidStatusSummary upgrades(List<V1Upgrades> upgrades) {
    this.upgrades = upgrades;
    return this;
  }

  public V1SpectroClusterUidStatusSummary addUpgradesItem(V1Upgrades upgradesItem) {
    if (this.upgrades == null) {
      this.upgrades = new ArrayList<V1Upgrades>();
    }
    this.upgrades.add(upgradesItem);
    return this;
  }

   /**
   * Get upgrades
   * @return upgrades
  **/
  @Schema(description = "")
  public List<V1Upgrades> getUpgrades() {
    return upgrades;
  }

  public void setUpgrades(List<V1Upgrades> upgrades) {
    this.upgrades = upgrades;
  }

  public V1SpectroClusterUidStatusSummary virtual(V1Virtual virtual) {
    this.virtual = virtual;
    return this;
  }

   /**
   * Get virtual
   * @return virtual
  **/
  @Schema(description = "")
  public V1Virtual getVirtual() {
    return virtual;
  }

  public void setVirtual(V1Virtual virtual) {
    this.virtual = virtual;
  }

  public V1SpectroClusterUidStatusSummary workspaces(List<V1ResourceReference> workspaces) {
    this.workspaces = workspaces;
    return this;
  }

  public V1SpectroClusterUidStatusSummary addWorkspacesItem(V1ResourceReference workspacesItem) {
    if (this.workspaces == null) {
      this.workspaces = new ArrayList<V1ResourceReference>();
    }
    this.workspaces.add(workspacesItem);
    return this;
  }

   /**
   * Get workspaces
   * @return workspaces
  **/
  @Schema(description = "")
  public List<V1ResourceReference> getWorkspaces() {
    return workspaces;
  }

  public void setWorkspaces(List<V1ResourceReference> workspaces) {
    this.workspaces = workspaces;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpectroClusterUidStatusSummary v1SpectroClusterUidStatusSummary = (V1SpectroClusterUidStatusSummary) o;
    return Objects.equals(this.abortTimestamp, v1SpectroClusterUidStatusSummary.abortTimestamp) &&
        Objects.equals(this.addOnServices, v1SpectroClusterUidStatusSummary.addOnServices) &&
        Objects.equals(this.apiEndpoints, v1SpectroClusterUidStatusSummary.apiEndpoints) &&
        Objects.equals(this.clusterImport, v1SpectroClusterUidStatusSummary.clusterImport) &&
        Objects.equals(this.conditions, v1SpectroClusterUidStatusSummary.conditions) &&
        Objects.equals(this.cost, v1SpectroClusterUidStatusSummary.cost) &&
        Objects.equals(this.health, v1SpectroClusterUidStatusSummary.health) &&
        Objects.equals(this.hourlyRate, v1SpectroClusterUidStatusSummary.hourlyRate) &&
        Objects.equals(this.kubeMeta, v1SpectroClusterUidStatusSummary.kubeMeta) &&
        Objects.equals(this.location, v1SpectroClusterUidStatusSummary.location) &&
        Objects.equals(this.metrics, v1SpectroClusterUidStatusSummary.metrics) &&
        Objects.equals(this.nested, v1SpectroClusterUidStatusSummary.nested) &&
        Objects.equals(this.notifications, v1SpectroClusterUidStatusSummary.notifications) &&
        Objects.equals(this.packs, v1SpectroClusterUidStatusSummary.packs) &&
        Objects.equals(this.services, v1SpectroClusterUidStatusSummary.services) &&
        Objects.equals(this.spcApply, v1SpectroClusterUidStatusSummary.spcApply) &&
        Objects.equals(this.state, v1SpectroClusterUidStatusSummary.state) &&
        Objects.equals(this.upgrades, v1SpectroClusterUidStatusSummary.upgrades) &&
        Objects.equals(this.virtual, v1SpectroClusterUidStatusSummary.virtual) &&
        Objects.equals(this.workspaces, v1SpectroClusterUidStatusSummary.workspaces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abortTimestamp, addOnServices, apiEndpoints, clusterImport, conditions, cost, health, hourlyRate, kubeMeta, location, metrics, nested, notifications, packs, services, spcApply, state, upgrades, virtual, workspaces);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpectroClusterUidStatusSummary {\n");
    
    sb.append("    abortTimestamp: ").append(toIndentedString(abortTimestamp)).append("\n");
    sb.append("    addOnServices: ").append(toIndentedString(addOnServices)).append("\n");
    sb.append("    apiEndpoints: ").append(toIndentedString(apiEndpoints)).append("\n");
    sb.append("    clusterImport: ").append(toIndentedString(clusterImport)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    hourlyRate: ").append(toIndentedString(hourlyRate)).append("\n");
    sb.append("    kubeMeta: ").append(toIndentedString(kubeMeta)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    nested: ").append(toIndentedString(nested)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    packs: ").append(toIndentedString(packs)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    spcApply: ").append(toIndentedString(spcApply)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    upgrades: ").append(toIndentedString(upgrades)).append("\n");
    sb.append("    virtual: ").append(toIndentedString(virtual)).append("\n");
    sb.append("    workspaces: ").append(toIndentedString(workspaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
