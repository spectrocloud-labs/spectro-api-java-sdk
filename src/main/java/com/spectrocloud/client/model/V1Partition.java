/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * V1Partition
 */



public class V1Partition {
  @SerializedName("fileSystemType")
  private String fileSystemType = null;

  @SerializedName("freeSpace")
  private Integer freeSpace = null;

  @SerializedName("mountPoint")
  private String mountPoint = null;

  @SerializedName("totalSpace")
  private Integer totalSpace = null;

  @SerializedName("usedSpace")
  private Integer usedSpace = null;

  public V1Partition fileSystemType(String fileSystemType) {
    this.fileSystemType = fileSystemType;
    return this;
  }

   /**
   * Get fileSystemType
   * @return fileSystemType
  **/
  @Schema(description = "")
  public String getFileSystemType() {
    return fileSystemType;
  }

  public void setFileSystemType(String fileSystemType) {
    this.fileSystemType = fileSystemType;
  }

  public V1Partition freeSpace(Integer freeSpace) {
    this.freeSpace = freeSpace;
    return this;
  }

   /**
   * Get freeSpace
   * @return freeSpace
  **/
  @Schema(description = "")
  public Integer getFreeSpace() {
    return freeSpace;
  }

  public void setFreeSpace(Integer freeSpace) {
    this.freeSpace = freeSpace;
  }

  public V1Partition mountPoint(String mountPoint) {
    this.mountPoint = mountPoint;
    return this;
  }

   /**
   * Get mountPoint
   * @return mountPoint
  **/
  @Schema(description = "")
  public String getMountPoint() {
    return mountPoint;
  }

  public void setMountPoint(String mountPoint) {
    this.mountPoint = mountPoint;
  }

  public V1Partition totalSpace(Integer totalSpace) {
    this.totalSpace = totalSpace;
    return this;
  }

   /**
   * Get totalSpace
   * @return totalSpace
  **/
  @Schema(description = "")
  public Integer getTotalSpace() {
    return totalSpace;
  }

  public void setTotalSpace(Integer totalSpace) {
    this.totalSpace = totalSpace;
  }

  public V1Partition usedSpace(Integer usedSpace) {
    this.usedSpace = usedSpace;
    return this;
  }

   /**
   * Get usedSpace
   * @return usedSpace
  **/
  @Schema(description = "")
  public Integer getUsedSpace() {
    return usedSpace;
  }

  public void setUsedSpace(Integer usedSpace) {
    this.usedSpace = usedSpace;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Partition v1Partition = (V1Partition) o;
    return Objects.equals(this.fileSystemType, v1Partition.fileSystemType) &&
        Objects.equals(this.freeSpace, v1Partition.freeSpace) &&
        Objects.equals(this.mountPoint, v1Partition.mountPoint) &&
        Objects.equals(this.totalSpace, v1Partition.totalSpace) &&
        Objects.equals(this.usedSpace, v1Partition.usedSpace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileSystemType, freeSpace, mountPoint, totalSpace, usedSpace);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Partition {\n");
    
    sb.append("    fileSystemType: ").append(toIndentedString(fileSystemType)).append("\n");
    sb.append("    freeSpace: ").append(toIndentedString(freeSpace)).append("\n");
    sb.append("    mountPoint: ").append(toIndentedString(mountPoint)).append("\n");
    sb.append("    totalSpace: ").append(toIndentedString(totalSpace)).append("\n");
    sb.append("    usedSpace: ").append(toIndentedString(usedSpace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
