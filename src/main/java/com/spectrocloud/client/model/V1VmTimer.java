/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1VmHPETTimer;
import com.spectrocloud.client.model.V1VmHypervTimer;
import com.spectrocloud.client.model.V1VmKVmTimer;
import com.spectrocloud.client.model.V1VmPITTimer;
import com.spectrocloud.client.model.V1VmRTCTimer;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents all available timers in a vmi.
 */
@Schema(description = "Represents all available timers in a vmi.")


public class V1VmTimer {
  @SerializedName("hpet")
  private V1VmHPETTimer hpet = null;

  @SerializedName("hyperv")
  private V1VmHypervTimer hyperv = null;

  @SerializedName("kvm")
  private V1VmKVmTimer kvm = null;

  @SerializedName("pit")
  private V1VmPITTimer pit = null;

  @SerializedName("rtc")
  private V1VmRTCTimer rtc = null;

  public V1VmTimer hpet(V1VmHPETTimer hpet) {
    this.hpet = hpet;
    return this;
  }

   /**
   * Get hpet
   * @return hpet
  **/
  @Schema(description = "")
  public V1VmHPETTimer getHpet() {
    return hpet;
  }

  public void setHpet(V1VmHPETTimer hpet) {
    this.hpet = hpet;
  }

  public V1VmTimer hyperv(V1VmHypervTimer hyperv) {
    this.hyperv = hyperv;
    return this;
  }

   /**
   * Get hyperv
   * @return hyperv
  **/
  @Schema(description = "")
  public V1VmHypervTimer getHyperv() {
    return hyperv;
  }

  public void setHyperv(V1VmHypervTimer hyperv) {
    this.hyperv = hyperv;
  }

  public V1VmTimer kvm(V1VmKVmTimer kvm) {
    this.kvm = kvm;
    return this;
  }

   /**
   * Get kvm
   * @return kvm
  **/
  @Schema(description = "")
  public V1VmKVmTimer getKvm() {
    return kvm;
  }

  public void setKvm(V1VmKVmTimer kvm) {
    this.kvm = kvm;
  }

  public V1VmTimer pit(V1VmPITTimer pit) {
    this.pit = pit;
    return this;
  }

   /**
   * Get pit
   * @return pit
  **/
  @Schema(description = "")
  public V1VmPITTimer getPit() {
    return pit;
  }

  public void setPit(V1VmPITTimer pit) {
    this.pit = pit;
  }

  public V1VmTimer rtc(V1VmRTCTimer rtc) {
    this.rtc = rtc;
    return this;
  }

   /**
   * Get rtc
   * @return rtc
  **/
  @Schema(description = "")
  public V1VmRTCTimer getRtc() {
    return rtc;
  }

  public void setRtc(V1VmRTCTimer rtc) {
    this.rtc = rtc;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1VmTimer v1VmTimer = (V1VmTimer) o;
    return Objects.equals(this.hpet, v1VmTimer.hpet) &&
        Objects.equals(this.hyperv, v1VmTimer.hyperv) &&
        Objects.equals(this.kvm, v1VmTimer.kvm) &&
        Objects.equals(this.pit, v1VmTimer.pit) &&
        Objects.equals(this.rtc, v1VmTimer.rtc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hpet, hyperv, kvm, pit, rtc);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1VmTimer {\n");
    
    sb.append("    hpet: ").append(toIndentedString(hpet)).append("\n");
    sb.append("    hyperv: ").append(toIndentedString(hyperv)).append("\n");
    sb.append("    kvm: ").append(toIndentedString(kvm)).append("\n");
    sb.append("    pit: ").append(toIndentedString(pit)).append("\n");
    sb.append("    rtc: ").append(toIndentedString(rtc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
