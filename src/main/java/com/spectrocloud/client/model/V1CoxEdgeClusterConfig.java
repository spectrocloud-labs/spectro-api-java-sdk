/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1CoxEdgeLoadBalancerConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Cluster level configuration for coxedge cloud and applicable for all the machine pools
 */
@Schema(description = "Cluster level configuration for coxedge cloud and applicable for all the machine pools")


public class V1CoxEdgeClusterConfig {
  @SerializedName("coxEdgeLoadBalancerConfig")
  private V1CoxEdgeLoadBalancerConfig coxEdgeLoadBalancerConfig = null;

  @SerializedName("coxEdgeWorkerLoadBalancerConfig")
  private V1CoxEdgeLoadBalancerConfig coxEdgeWorkerLoadBalancerConfig = null;

  @SerializedName("environment")
  private String environment = null;

  @SerializedName("organizationId")
  private String organizationId = null;

  @SerializedName("sshAuthorizedKeys")
  private List<String> sshAuthorizedKeys = new ArrayList<String>();

  public V1CoxEdgeClusterConfig coxEdgeLoadBalancerConfig(V1CoxEdgeLoadBalancerConfig coxEdgeLoadBalancerConfig) {
    this.coxEdgeLoadBalancerConfig = coxEdgeLoadBalancerConfig;
    return this;
  }

   /**
   * Get coxEdgeLoadBalancerConfig
   * @return coxEdgeLoadBalancerConfig
  **/
  @Schema(required = true, description = "")
  public V1CoxEdgeLoadBalancerConfig getCoxEdgeLoadBalancerConfig() {
    return coxEdgeLoadBalancerConfig;
  }

  public void setCoxEdgeLoadBalancerConfig(V1CoxEdgeLoadBalancerConfig coxEdgeLoadBalancerConfig) {
    this.coxEdgeLoadBalancerConfig = coxEdgeLoadBalancerConfig;
  }

  public V1CoxEdgeClusterConfig coxEdgeWorkerLoadBalancerConfig(V1CoxEdgeLoadBalancerConfig coxEdgeWorkerLoadBalancerConfig) {
    this.coxEdgeWorkerLoadBalancerConfig = coxEdgeWorkerLoadBalancerConfig;
    return this;
  }

   /**
   * Get coxEdgeWorkerLoadBalancerConfig
   * @return coxEdgeWorkerLoadBalancerConfig
  **/
  @Schema(description = "")
  public V1CoxEdgeLoadBalancerConfig getCoxEdgeWorkerLoadBalancerConfig() {
    return coxEdgeWorkerLoadBalancerConfig;
  }

  public void setCoxEdgeWorkerLoadBalancerConfig(V1CoxEdgeLoadBalancerConfig coxEdgeWorkerLoadBalancerConfig) {
    this.coxEdgeWorkerLoadBalancerConfig = coxEdgeWorkerLoadBalancerConfig;
  }

  public V1CoxEdgeClusterConfig environment(String environment) {
    this.environment = environment;
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @Schema(description = "")
  public String getEnvironment() {
    return environment;
  }

  public void setEnvironment(String environment) {
    this.environment = environment;
  }

  public V1CoxEdgeClusterConfig organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @Schema(description = "")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public V1CoxEdgeClusterConfig sshAuthorizedKeys(List<String> sshAuthorizedKeys) {
    this.sshAuthorizedKeys = sshAuthorizedKeys;
    return this;
  }

  public V1CoxEdgeClusterConfig addSshAuthorizedKeysItem(String sshAuthorizedKeysItem) {
    this.sshAuthorizedKeys.add(sshAuthorizedKeysItem);
    return this;
  }

   /**
   * CoxEdge ssh authorized keys
   * @return sshAuthorizedKeys
  **/
  @Schema(required = true, description = "CoxEdge ssh authorized keys")
  public List<String> getSshAuthorizedKeys() {
    return sshAuthorizedKeys;
  }

  public void setSshAuthorizedKeys(List<String> sshAuthorizedKeys) {
    this.sshAuthorizedKeys = sshAuthorizedKeys;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1CoxEdgeClusterConfig v1CoxEdgeClusterConfig = (V1CoxEdgeClusterConfig) o;
    return Objects.equals(this.coxEdgeLoadBalancerConfig, v1CoxEdgeClusterConfig.coxEdgeLoadBalancerConfig) &&
        Objects.equals(this.coxEdgeWorkerLoadBalancerConfig, v1CoxEdgeClusterConfig.coxEdgeWorkerLoadBalancerConfig) &&
        Objects.equals(this.environment, v1CoxEdgeClusterConfig.environment) &&
        Objects.equals(this.organizationId, v1CoxEdgeClusterConfig.organizationId) &&
        Objects.equals(this.sshAuthorizedKeys, v1CoxEdgeClusterConfig.sshAuthorizedKeys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coxEdgeLoadBalancerConfig, coxEdgeWorkerLoadBalancerConfig, environment, organizationId, sshAuthorizedKeys);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1CoxEdgeClusterConfig {\n");
    
    sb.append("    coxEdgeLoadBalancerConfig: ").append(toIndentedString(coxEdgeLoadBalancerConfig)).append("\n");
    sb.append("    coxEdgeWorkerLoadBalancerConfig: ").append(toIndentedString(coxEdgeWorkerLoadBalancerConfig)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    sshAuthorizedKeys: ").append(toIndentedString(sshAuthorizedKeys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
