/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1SearchFilterSchemaSpecEnumValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * V1SearchFilterSchemaSpecProperty
 */



public class V1SearchFilterSchemaSpecProperty {
  @SerializedName("default")
  private String _default = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("enum")
  private List<String> _enum = null;

  @SerializedName("enumValues")
  private List<V1SearchFilterSchemaSpecEnumValue> enumValues = null;

  @SerializedName("maxFloatVal")
  private BigDecimal maxFloatVal = null;

  @SerializedName("maxIntVal")
  private Integer maxIntVal = null;

  @SerializedName("minFloatVal")
  private BigDecimal minFloatVal = null;

  @SerializedName("minIntVal")
  private Integer minIntVal = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("type")
  private String type = null;

  public V1SearchFilterSchemaSpecProperty _default(String _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @Schema(description = "")
  public String getDefault() {
    return _default;
  }

  public void setDefault(String _default) {
    this._default = _default;
  }

  public V1SearchFilterSchemaSpecProperty displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @Schema(description = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public V1SearchFilterSchemaSpecProperty _enum(List<String> _enum) {
    this._enum = _enum;
    return this;
  }

  public V1SearchFilterSchemaSpecProperty addEnumItem(String _enumItem) {
    if (this._enum == null) {
      this._enum = new ArrayList<String>();
    }
    this._enum.add(_enumItem);
    return this;
  }

   /**
   * Get _enum
   * @return _enum
  **/
  @Schema(description = "")
  public List<String> getEnum() {
    return _enum;
  }

  public void setEnum(List<String> _enum) {
    this._enum = _enum;
  }

  public V1SearchFilterSchemaSpecProperty enumValues(List<V1SearchFilterSchemaSpecEnumValue> enumValues) {
    this.enumValues = enumValues;
    return this;
  }

  public V1SearchFilterSchemaSpecProperty addEnumValuesItem(V1SearchFilterSchemaSpecEnumValue enumValuesItem) {
    if (this.enumValues == null) {
      this.enumValues = new ArrayList<V1SearchFilterSchemaSpecEnumValue>();
    }
    this.enumValues.add(enumValuesItem);
    return this;
  }

   /**
   * Get enumValues
   * @return enumValues
  **/
  @Schema(description = "")
  public List<V1SearchFilterSchemaSpecEnumValue> getEnumValues() {
    return enumValues;
  }

  public void setEnumValues(List<V1SearchFilterSchemaSpecEnumValue> enumValues) {
    this.enumValues = enumValues;
  }

  public V1SearchFilterSchemaSpecProperty maxFloatVal(BigDecimal maxFloatVal) {
    this.maxFloatVal = maxFloatVal;
    return this;
  }

   /**
   * Get maxFloatVal
   * @return maxFloatVal
  **/
  @Schema(description = "")
  public BigDecimal getMaxFloatVal() {
    return maxFloatVal;
  }

  public void setMaxFloatVal(BigDecimal maxFloatVal) {
    this.maxFloatVal = maxFloatVal;
  }

  public V1SearchFilterSchemaSpecProperty maxIntVal(Integer maxIntVal) {
    this.maxIntVal = maxIntVal;
    return this;
  }

   /**
   * Get maxIntVal
   * @return maxIntVal
  **/
  @Schema(description = "")
  public Integer getMaxIntVal() {
    return maxIntVal;
  }

  public void setMaxIntVal(Integer maxIntVal) {
    this.maxIntVal = maxIntVal;
  }

  public V1SearchFilterSchemaSpecProperty minFloatVal(BigDecimal minFloatVal) {
    this.minFloatVal = minFloatVal;
    return this;
  }

   /**
   * Get minFloatVal
   * @return minFloatVal
  **/
  @Schema(description = "")
  public BigDecimal getMinFloatVal() {
    return minFloatVal;
  }

  public void setMinFloatVal(BigDecimal minFloatVal) {
    this.minFloatVal = minFloatVal;
  }

  public V1SearchFilterSchemaSpecProperty minIntVal(Integer minIntVal) {
    this.minIntVal = minIntVal;
    return this;
  }

   /**
   * Get minIntVal
   * @return minIntVal
  **/
  @Schema(description = "")
  public Integer getMinIntVal() {
    return minIntVal;
  }

  public void setMinIntVal(Integer minIntVal) {
    this.minIntVal = minIntVal;
  }

  public V1SearchFilterSchemaSpecProperty name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1SearchFilterSchemaSpecProperty type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SearchFilterSchemaSpecProperty v1SearchFilterSchemaSpecProperty = (V1SearchFilterSchemaSpecProperty) o;
    return Objects.equals(this._default, v1SearchFilterSchemaSpecProperty._default) &&
        Objects.equals(this.displayName, v1SearchFilterSchemaSpecProperty.displayName) &&
        Objects.equals(this._enum, v1SearchFilterSchemaSpecProperty._enum) &&
        Objects.equals(this.enumValues, v1SearchFilterSchemaSpecProperty.enumValues) &&
        Objects.equals(this.maxFloatVal, v1SearchFilterSchemaSpecProperty.maxFloatVal) &&
        Objects.equals(this.maxIntVal, v1SearchFilterSchemaSpecProperty.maxIntVal) &&
        Objects.equals(this.minFloatVal, v1SearchFilterSchemaSpecProperty.minFloatVal) &&
        Objects.equals(this.minIntVal, v1SearchFilterSchemaSpecProperty.minIntVal) &&
        Objects.equals(this.name, v1SearchFilterSchemaSpecProperty.name) &&
        Objects.equals(this.type, v1SearchFilterSchemaSpecProperty.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_default, displayName, _enum, enumValues, maxFloatVal, maxIntVal, minFloatVal, minIntVal, name, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SearchFilterSchemaSpecProperty {\n");
    
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    _enum: ").append(toIndentedString(_enum)).append("\n");
    sb.append("    enumValues: ").append(toIndentedString(enumValues)).append("\n");
    sb.append("    maxFloatVal: ").append(toIndentedString(maxFloatVal)).append("\n");
    sb.append("    maxIntVal: ").append(toIndentedString(maxIntVal)).append("\n");
    sb.append("    minFloatVal: ").append(toIndentedString(minFloatVal)).append("\n");
    sb.append("    minIntVal: ").append(toIndentedString(minIntVal)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
