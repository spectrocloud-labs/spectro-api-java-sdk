/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * cluster preference
 */
@Schema(description = "cluster preference")


public class V1ClusterPreference {
  @SerializedName("archivalIntervalInHour")
  private Integer archivalIntervalInHour = null;

  @SerializedName("deletePeriodInHour")
  private Integer deletePeriodInHour = null;

  @SerializedName("healthPollIntervalInMinutes")
  private Integer healthPollIntervalInMinutes = null;

  @SerializedName("monitorIntervalInMinutes")
  private Integer monitorIntervalInMinutes = null;

  public V1ClusterPreference archivalIntervalInHour(Integer archivalIntervalInHour) {
    this.archivalIntervalInHour = archivalIntervalInHour;
    return this;
  }

   /**
   * clusters cleanup interval post deletion
   * @return archivalIntervalInHour
  **/
  @Schema(description = "clusters cleanup interval post deletion")
  public Integer getArchivalIntervalInHour() {
    return archivalIntervalInHour;
  }

  public void setArchivalIntervalInHour(Integer archivalIntervalInHour) {
    this.archivalIntervalInHour = archivalIntervalInHour;
  }

  public V1ClusterPreference deletePeriodInHour(Integer deletePeriodInHour) {
    this.deletePeriodInHour = deletePeriodInHour;
    return this;
  }

   /**
   * clusters deleted before delete period are eligible for cleanup
   * @return deletePeriodInHour
  **/
  @Schema(description = "clusters deleted before delete period are eligible for cleanup")
  public Integer getDeletePeriodInHour() {
    return deletePeriodInHour;
  }

  public void setDeletePeriodInHour(Integer deletePeriodInHour) {
    this.deletePeriodInHour = deletePeriodInHour;
  }

  public V1ClusterPreference healthPollIntervalInMinutes(Integer healthPollIntervalInMinutes) {
    this.healthPollIntervalInMinutes = healthPollIntervalInMinutes;
    return this;
  }

   /**
   * clusters health poll interval
   * minimum: 3
   * maximum: 60
   * @return healthPollIntervalInMinutes
  **/
  @Schema(description = "clusters health poll interval")
  public Integer getHealthPollIntervalInMinutes() {
    return healthPollIntervalInMinutes;
  }

  public void setHealthPollIntervalInMinutes(Integer healthPollIntervalInMinutes) {
    this.healthPollIntervalInMinutes = healthPollIntervalInMinutes;
  }

  public V1ClusterPreference monitorIntervalInMinutes(Integer monitorIntervalInMinutes) {
    this.monitorIntervalInMinutes = monitorIntervalInMinutes;
    return this;
  }

   /**
   * clusters state and consistency monitor
   * @return monitorIntervalInMinutes
  **/
  @Schema(description = "clusters state and consistency monitor")
  public Integer getMonitorIntervalInMinutes() {
    return monitorIntervalInMinutes;
  }

  public void setMonitorIntervalInMinutes(Integer monitorIntervalInMinutes) {
    this.monitorIntervalInMinutes = monitorIntervalInMinutes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ClusterPreference v1ClusterPreference = (V1ClusterPreference) o;
    return Objects.equals(this.archivalIntervalInHour, v1ClusterPreference.archivalIntervalInHour) &&
        Objects.equals(this.deletePeriodInHour, v1ClusterPreference.deletePeriodInHour) &&
        Objects.equals(this.healthPollIntervalInMinutes, v1ClusterPreference.healthPollIntervalInMinutes) &&
        Objects.equals(this.monitorIntervalInMinutes, v1ClusterPreference.monitorIntervalInMinutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(archivalIntervalInHour, deletePeriodInHour, healthPollIntervalInMinutes, monitorIntervalInMinutes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ClusterPreference {\n");
    
    sb.append("    archivalIntervalInHour: ").append(toIndentedString(archivalIntervalInHour)).append("\n");
    sb.append("    deletePeriodInHour: ").append(toIndentedString(deletePeriodInHour)).append("\n");
    sb.append("    healthPollIntervalInMinutes: ").append(toIndentedString(healthPollIntervalInMinutes)).append("\n");
    sb.append("    monitorIntervalInMinutes: ").append(toIndentedString(monitorIntervalInMinutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
