/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PackSchema defines the schema definition, hints for the pack values
 */
@Schema(description = "PackSchema defines the schema definition, hints for the pack values")


public class V1PackSchema {
  @SerializedName("format")
  private String format = null;

  @SerializedName("hints")
  private List<String> hints = null;

  @SerializedName("listOptions")
  private List<String> listOptions = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("readonly")
  private Boolean readonly = null;

  @SerializedName("regex")
  private String regex = null;

  @SerializedName("required")
  private Boolean required = null;

  @SerializedName("type")
  private String type = null;

  public V1PackSchema format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @Schema(description = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public V1PackSchema hints(List<String> hints) {
    this.hints = hints;
    return this;
  }

  public V1PackSchema addHintsItem(String hintsItem) {
    if (this.hints == null) {
      this.hints = new ArrayList<String>();
    }
    this.hints.add(hintsItem);
    return this;
  }

   /**
   * Get hints
   * @return hints
  **/
  @Schema(description = "")
  public List<String> getHints() {
    return hints;
  }

  public void setHints(List<String> hints) {
    this.hints = hints;
  }

  public V1PackSchema listOptions(List<String> listOptions) {
    this.listOptions = listOptions;
    return this;
  }

  public V1PackSchema addListOptionsItem(String listOptionsItem) {
    if (this.listOptions == null) {
      this.listOptions = new ArrayList<String>();
    }
    this.listOptions.add(listOptionsItem);
    return this;
  }

   /**
   * Get listOptions
   * @return listOptions
  **/
  @Schema(description = "")
  public List<String> getListOptions() {
    return listOptions;
  }

  public void setListOptions(List<String> listOptions) {
    this.listOptions = listOptions;
  }

  public V1PackSchema name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1PackSchema readonly(Boolean readonly) {
    this.readonly = readonly;
    return this;
  }

   /**
   * Get readonly
   * @return readonly
  **/
  @Schema(description = "")
  public Boolean isReadonly() {
    return readonly;
  }

  public void setReadonly(Boolean readonly) {
    this.readonly = readonly;
  }

  public V1PackSchema regex(String regex) {
    this.regex = regex;
    return this;
  }

   /**
   * Get regex
   * @return regex
  **/
  @Schema(description = "")
  public String getRegex() {
    return regex;
  }

  public void setRegex(String regex) {
    this.regex = regex;
  }

  public V1PackSchema required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @Schema(description = "")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public V1PackSchema type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1PackSchema v1PackSchema = (V1PackSchema) o;
    return Objects.equals(this.format, v1PackSchema.format) &&
        Objects.equals(this.hints, v1PackSchema.hints) &&
        Objects.equals(this.listOptions, v1PackSchema.listOptions) &&
        Objects.equals(this.name, v1PackSchema.name) &&
        Objects.equals(this.readonly, v1PackSchema.readonly) &&
        Objects.equals(this.regex, v1PackSchema.regex) &&
        Objects.equals(this.required, v1PackSchema.required) &&
        Objects.equals(this.type, v1PackSchema.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, hints, listOptions, name, readonly, regex, required, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1PackSchema {\n");
    
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    hints: ").append(toIndentedString(hints)).append("\n");
    sb.append("    listOptions: ").append(toIndentedString(listOptions)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    readonly: ").append(toIndentedString(readonly)).append("\n");
    sb.append("    regex: ").append(toIndentedString(regex)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
