/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1TeamRoleMap;
import com.spectrocloud.client.model.V1UserRoleMap;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Project specifications
 */
@Schema(description = "Project specifications")


public class V1ProjectEntitySpec {
  @SerializedName("logoUid")
  private String logoUid = null;

  @SerializedName("teams")
  private List<V1TeamRoleMap> teams = null;

  @SerializedName("users")
  private List<V1UserRoleMap> users = null;

  public V1ProjectEntitySpec logoUid(String logoUid) {
    this.logoUid = logoUid;
    return this;
  }

   /**
   * Get logoUid
   * @return logoUid
  **/
  @Schema(description = "")
  public String getLogoUid() {
    return logoUid;
  }

  public void setLogoUid(String logoUid) {
    this.logoUid = logoUid;
  }

  public V1ProjectEntitySpec teams(List<V1TeamRoleMap> teams) {
    this.teams = teams;
    return this;
  }

  public V1ProjectEntitySpec addTeamsItem(V1TeamRoleMap teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<V1TeamRoleMap>();
    }
    this.teams.add(teamsItem);
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @Schema(description = "")
  public List<V1TeamRoleMap> getTeams() {
    return teams;
  }

  public void setTeams(List<V1TeamRoleMap> teams) {
    this.teams = teams;
  }

  public V1ProjectEntitySpec users(List<V1UserRoleMap> users) {
    this.users = users;
    return this;
  }

  public V1ProjectEntitySpec addUsersItem(V1UserRoleMap usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<V1UserRoleMap>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @Schema(description = "")
  public List<V1UserRoleMap> getUsers() {
    return users;
  }

  public void setUsers(List<V1UserRoleMap> users) {
    this.users = users;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ProjectEntitySpec v1ProjectEntitySpec = (V1ProjectEntitySpec) o;
    return Objects.equals(this.logoUid, v1ProjectEntitySpec.logoUid) &&
        Objects.equals(this.teams, v1ProjectEntitySpec.teams) &&
        Objects.equals(this.users, v1ProjectEntitySpec.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logoUid, teams, users);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ProjectEntitySpec {\n");
    
    sb.append("    logoUid: ").append(toIndentedString(logoUid)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
