/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ClusterWorkloadCronJob;
import com.spectrocloud.client.model.V1ClusterWorkloadDaemonSet;
import com.spectrocloud.client.model.V1ClusterWorkloadDeployment;
import com.spectrocloud.client.model.V1ClusterWorkloadJob;
import com.spectrocloud.client.model.V1ClusterWorkloadPod;
import com.spectrocloud.client.model.V1ClusterWorkloadRoleBinding;
import com.spectrocloud.client.model.V1ClusterWorkloadStatefulSet;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Cluster workload spec
 */
@Schema(description = "Cluster workload spec")


public class V1ClusterWorkloadSpec {
  @SerializedName("clusterroleBindings")
  private List<V1ClusterWorkloadRoleBinding> clusterroleBindings = null;

  @SerializedName("cronJobs")
  private List<V1ClusterWorkloadCronJob> cronJobs = null;

  @SerializedName("daemonSets")
  private List<V1ClusterWorkloadDaemonSet> daemonSets = null;

  @SerializedName("deployments")
  private List<V1ClusterWorkloadDeployment> deployments = null;

  @SerializedName("jobs")
  private List<V1ClusterWorkloadJob> jobs = null;

  @SerializedName("pods")
  private List<V1ClusterWorkloadPod> pods = null;

  @SerializedName("roleBindings")
  private List<V1ClusterWorkloadRoleBinding> roleBindings = null;

  @SerializedName("statefulSets")
  private List<V1ClusterWorkloadStatefulSet> statefulSets = null;

  public V1ClusterWorkloadSpec clusterroleBindings(List<V1ClusterWorkloadRoleBinding> clusterroleBindings) {
    this.clusterroleBindings = clusterroleBindings;
    return this;
  }

  public V1ClusterWorkloadSpec addClusterroleBindingsItem(V1ClusterWorkloadRoleBinding clusterroleBindingsItem) {
    if (this.clusterroleBindings == null) {
      this.clusterroleBindings = new ArrayList<V1ClusterWorkloadRoleBinding>();
    }
    this.clusterroleBindings.add(clusterroleBindingsItem);
    return this;
  }

   /**
   * Get clusterroleBindings
   * @return clusterroleBindings
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadRoleBinding> getClusterroleBindings() {
    return clusterroleBindings;
  }

  public void setClusterroleBindings(List<V1ClusterWorkloadRoleBinding> clusterroleBindings) {
    this.clusterroleBindings = clusterroleBindings;
  }

  public V1ClusterWorkloadSpec cronJobs(List<V1ClusterWorkloadCronJob> cronJobs) {
    this.cronJobs = cronJobs;
    return this;
  }

  public V1ClusterWorkloadSpec addCronJobsItem(V1ClusterWorkloadCronJob cronJobsItem) {
    if (this.cronJobs == null) {
      this.cronJobs = new ArrayList<V1ClusterWorkloadCronJob>();
    }
    this.cronJobs.add(cronJobsItem);
    return this;
  }

   /**
   * Get cronJobs
   * @return cronJobs
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadCronJob> getCronJobs() {
    return cronJobs;
  }

  public void setCronJobs(List<V1ClusterWorkloadCronJob> cronJobs) {
    this.cronJobs = cronJobs;
  }

  public V1ClusterWorkloadSpec daemonSets(List<V1ClusterWorkloadDaemonSet> daemonSets) {
    this.daemonSets = daemonSets;
    return this;
  }

  public V1ClusterWorkloadSpec addDaemonSetsItem(V1ClusterWorkloadDaemonSet daemonSetsItem) {
    if (this.daemonSets == null) {
      this.daemonSets = new ArrayList<V1ClusterWorkloadDaemonSet>();
    }
    this.daemonSets.add(daemonSetsItem);
    return this;
  }

   /**
   * Get daemonSets
   * @return daemonSets
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadDaemonSet> getDaemonSets() {
    return daemonSets;
  }

  public void setDaemonSets(List<V1ClusterWorkloadDaemonSet> daemonSets) {
    this.daemonSets = daemonSets;
  }

  public V1ClusterWorkloadSpec deployments(List<V1ClusterWorkloadDeployment> deployments) {
    this.deployments = deployments;
    return this;
  }

  public V1ClusterWorkloadSpec addDeploymentsItem(V1ClusterWorkloadDeployment deploymentsItem) {
    if (this.deployments == null) {
      this.deployments = new ArrayList<V1ClusterWorkloadDeployment>();
    }
    this.deployments.add(deploymentsItem);
    return this;
  }

   /**
   * Get deployments
   * @return deployments
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadDeployment> getDeployments() {
    return deployments;
  }

  public void setDeployments(List<V1ClusterWorkloadDeployment> deployments) {
    this.deployments = deployments;
  }

  public V1ClusterWorkloadSpec jobs(List<V1ClusterWorkloadJob> jobs) {
    this.jobs = jobs;
    return this;
  }

  public V1ClusterWorkloadSpec addJobsItem(V1ClusterWorkloadJob jobsItem) {
    if (this.jobs == null) {
      this.jobs = new ArrayList<V1ClusterWorkloadJob>();
    }
    this.jobs.add(jobsItem);
    return this;
  }

   /**
   * Get jobs
   * @return jobs
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadJob> getJobs() {
    return jobs;
  }

  public void setJobs(List<V1ClusterWorkloadJob> jobs) {
    this.jobs = jobs;
  }

  public V1ClusterWorkloadSpec pods(List<V1ClusterWorkloadPod> pods) {
    this.pods = pods;
    return this;
  }

  public V1ClusterWorkloadSpec addPodsItem(V1ClusterWorkloadPod podsItem) {
    if (this.pods == null) {
      this.pods = new ArrayList<V1ClusterWorkloadPod>();
    }
    this.pods.add(podsItem);
    return this;
  }

   /**
   * Get pods
   * @return pods
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadPod> getPods() {
    return pods;
  }

  public void setPods(List<V1ClusterWorkloadPod> pods) {
    this.pods = pods;
  }

  public V1ClusterWorkloadSpec roleBindings(List<V1ClusterWorkloadRoleBinding> roleBindings) {
    this.roleBindings = roleBindings;
    return this;
  }

  public V1ClusterWorkloadSpec addRoleBindingsItem(V1ClusterWorkloadRoleBinding roleBindingsItem) {
    if (this.roleBindings == null) {
      this.roleBindings = new ArrayList<V1ClusterWorkloadRoleBinding>();
    }
    this.roleBindings.add(roleBindingsItem);
    return this;
  }

   /**
   * Get roleBindings
   * @return roleBindings
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadRoleBinding> getRoleBindings() {
    return roleBindings;
  }

  public void setRoleBindings(List<V1ClusterWorkloadRoleBinding> roleBindings) {
    this.roleBindings = roleBindings;
  }

  public V1ClusterWorkloadSpec statefulSets(List<V1ClusterWorkloadStatefulSet> statefulSets) {
    this.statefulSets = statefulSets;
    return this;
  }

  public V1ClusterWorkloadSpec addStatefulSetsItem(V1ClusterWorkloadStatefulSet statefulSetsItem) {
    if (this.statefulSets == null) {
      this.statefulSets = new ArrayList<V1ClusterWorkloadStatefulSet>();
    }
    this.statefulSets.add(statefulSetsItem);
    return this;
  }

   /**
   * Get statefulSets
   * @return statefulSets
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadStatefulSet> getStatefulSets() {
    return statefulSets;
  }

  public void setStatefulSets(List<V1ClusterWorkloadStatefulSet> statefulSets) {
    this.statefulSets = statefulSets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ClusterWorkloadSpec v1ClusterWorkloadSpec = (V1ClusterWorkloadSpec) o;
    return Objects.equals(this.clusterroleBindings, v1ClusterWorkloadSpec.clusterroleBindings) &&
        Objects.equals(this.cronJobs, v1ClusterWorkloadSpec.cronJobs) &&
        Objects.equals(this.daemonSets, v1ClusterWorkloadSpec.daemonSets) &&
        Objects.equals(this.deployments, v1ClusterWorkloadSpec.deployments) &&
        Objects.equals(this.jobs, v1ClusterWorkloadSpec.jobs) &&
        Objects.equals(this.pods, v1ClusterWorkloadSpec.pods) &&
        Objects.equals(this.roleBindings, v1ClusterWorkloadSpec.roleBindings) &&
        Objects.equals(this.statefulSets, v1ClusterWorkloadSpec.statefulSets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterroleBindings, cronJobs, daemonSets, deployments, jobs, pods, roleBindings, statefulSets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ClusterWorkloadSpec {\n");
    
    sb.append("    clusterroleBindings: ").append(toIndentedString(clusterroleBindings)).append("\n");
    sb.append("    cronJobs: ").append(toIndentedString(cronJobs)).append("\n");
    sb.append("    daemonSets: ").append(toIndentedString(daemonSets)).append("\n");
    sb.append("    deployments: ").append(toIndentedString(deployments)).append("\n");
    sb.append("    jobs: ").append(toIndentedString(jobs)).append("\n");
    sb.append("    pods: ").append(toIndentedString(pods)).append("\n");
    sb.append("    roleBindings: ").append(toIndentedString(roleBindings)).append("\n");
    sb.append("    statefulSets: ").append(toIndentedString(statefulSets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
