/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1EdgeHostIdentity;
import com.spectrocloud.client.model.V1ObjectEntity;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * EdgeHost is the underlying appliance
 */
@Schema(description = "EdgeHost is the underlying appliance")


public class V1EdgeHost {
  @SerializedName("hostAddress")
  private String hostAddress = null;

  @SerializedName("hostAuthToken")
  private String hostAuthToken = null;

  @SerializedName("hostChecksum")
  private String hostChecksum = null;

  @SerializedName("hostIdentity")
  private V1EdgeHostIdentity hostIdentity = null;

  @SerializedName("hostPairingKey")
  private String hostPairingKey = null;

  @SerializedName("hostUid")
  private String hostUid = null;

  @SerializedName("macAddress")
  private String macAddress = null;

  @SerializedName("project")
  private V1ObjectEntity project = null;

  public V1EdgeHost hostAddress(String hostAddress) {
    this.hostAddress = hostAddress;
    return this;
  }

   /**
   * HostAddress is a FQDN or IP address of the Host
   * @return hostAddress
  **/
  @Schema(required = true, description = "HostAddress is a FQDN or IP address of the Host")
  public String getHostAddress() {
    return hostAddress;
  }

  public void setHostAddress(String hostAddress) {
    this.hostAddress = hostAddress;
  }

  public V1EdgeHost hostAuthToken(String hostAuthToken) {
    this.hostAuthToken = hostAuthToken;
    return this;
  }

   /**
   * HostAuthToken to authorize auto registration
   * @return hostAuthToken
  **/
  @Schema(description = "HostAuthToken to authorize auto registration")
  public String getHostAuthToken() {
    return hostAuthToken;
  }

  public void setHostAuthToken(String hostAuthToken) {
    this.hostAuthToken = hostAuthToken;
  }

  public V1EdgeHost hostChecksum(String hostChecksum) {
    this.hostChecksum = hostChecksum;
    return this;
  }

   /**
   * HostChecksum is the checksum provided by the edge host, to be persisted in SaaS
   * @return hostChecksum
  **/
  @Schema(description = "HostChecksum is the checksum provided by the edge host, to be persisted in SaaS")
  public String getHostChecksum() {
    return hostChecksum;
  }

  public void setHostChecksum(String hostChecksum) {
    this.hostChecksum = hostChecksum;
  }

  public V1EdgeHost hostIdentity(V1EdgeHostIdentity hostIdentity) {
    this.hostIdentity = hostIdentity;
    return this;
  }

   /**
   * Get hostIdentity
   * @return hostIdentity
  **/
  @Schema(description = "")
  public V1EdgeHostIdentity getHostIdentity() {
    return hostIdentity;
  }

  public void setHostIdentity(V1EdgeHostIdentity hostIdentity) {
    this.hostIdentity = hostIdentity;
  }

  public V1EdgeHost hostPairingKey(String hostPairingKey) {
    this.hostPairingKey = hostPairingKey;
    return this;
  }

   /**
   * HostPairingKey is the one-time pairing key to pair the edge host with the device registered in SaaS
   * @return hostPairingKey
  **/
  @Schema(description = "HostPairingKey is the one-time pairing key to pair the edge host with the device registered in SaaS")
  public String getHostPairingKey() {
    return hostPairingKey;
  }

  public void setHostPairingKey(String hostPairingKey) {
    this.hostPairingKey = hostPairingKey;
  }

  public V1EdgeHost hostUid(String hostUid) {
    this.hostUid = hostUid;
    return this;
  }

   /**
   * HostUid is the ID of the EdgeHost
   * @return hostUid
  **/
  @Schema(required = true, description = "HostUid is the ID of the EdgeHost")
  public String getHostUid() {
    return hostUid;
  }

  public void setHostUid(String hostUid) {
    this.hostUid = hostUid;
  }

  public V1EdgeHost macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

   /**
   * Mac address of edgehost
   * @return macAddress
  **/
  @Schema(description = "Mac address of edgehost")
  public String getMacAddress() {
    return macAddress;
  }

  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }

  public V1EdgeHost project(V1ObjectEntity project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @Schema(description = "")
  public V1ObjectEntity getProject() {
    return project;
  }

  public void setProject(V1ObjectEntity project) {
    this.project = project;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1EdgeHost v1EdgeHost = (V1EdgeHost) o;
    return Objects.equals(this.hostAddress, v1EdgeHost.hostAddress) &&
        Objects.equals(this.hostAuthToken, v1EdgeHost.hostAuthToken) &&
        Objects.equals(this.hostChecksum, v1EdgeHost.hostChecksum) &&
        Objects.equals(this.hostIdentity, v1EdgeHost.hostIdentity) &&
        Objects.equals(this.hostPairingKey, v1EdgeHost.hostPairingKey) &&
        Objects.equals(this.hostUid, v1EdgeHost.hostUid) &&
        Objects.equals(this.macAddress, v1EdgeHost.macAddress) &&
        Objects.equals(this.project, v1EdgeHost.project);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostAddress, hostAuthToken, hostChecksum, hostIdentity, hostPairingKey, hostUid, macAddress, project);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1EdgeHost {\n");
    
    sb.append("    hostAddress: ").append(toIndentedString(hostAddress)).append("\n");
    sb.append("    hostAuthToken: ").append(toIndentedString(hostAuthToken)).append("\n");
    sb.append("    hostChecksum: ").append(toIndentedString(hostChecksum)).append("\n");
    sb.append("    hostIdentity: ").append(toIndentedString(hostIdentity)).append("\n");
    sb.append("    hostPairingKey: ").append(toIndentedString(hostPairingKey)).append("\n");
    sb.append("    hostUid: ").append(toIndentedString(hostUid)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
