/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * auth-url,project,username,password,domain,cacert etc
 */
@Schema(description = "auth-url,project,username,password,domain,cacert etc")


public class V1OpenStackCloudAccount {
  @SerializedName("caCert")
  private String caCert = null;

  @SerializedName("defaultDomain")
  private String defaultDomain = null;

  @SerializedName("defaultProject")
  private String defaultProject = null;

  @SerializedName("identityEndpoint")
  private String identityEndpoint = null;

  @SerializedName("insecure")
  private Boolean insecure = null;

  @SerializedName("parentRegion")
  private String parentRegion = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("username")
  private String username = null;

  public V1OpenStackCloudAccount caCert(String caCert) {
    this.caCert = caCert;
    return this;
  }

   /**
   * Ca cert for OpenStack
   * @return caCert
  **/
  @Schema(description = "Ca cert for OpenStack")
  public String getCaCert() {
    return caCert;
  }

  public void setCaCert(String caCert) {
    this.caCert = caCert;
  }

  public V1OpenStackCloudAccount defaultDomain(String defaultDomain) {
    this.defaultDomain = defaultDomain;
    return this;
  }

   /**
   * Default Domain name
   * @return defaultDomain
  **/
  @Schema(description = "Default Domain name")
  public String getDefaultDomain() {
    return defaultDomain;
  }

  public void setDefaultDomain(String defaultDomain) {
    this.defaultDomain = defaultDomain;
  }

  public V1OpenStackCloudAccount defaultProject(String defaultProject) {
    this.defaultProject = defaultProject;
    return this;
  }

   /**
   * Default Project name
   * @return defaultProject
  **/
  @Schema(description = "Default Project name")
  public String getDefaultProject() {
    return defaultProject;
  }

  public void setDefaultProject(String defaultProject) {
    this.defaultProject = defaultProject;
  }

  public V1OpenStackCloudAccount identityEndpoint(String identityEndpoint) {
    this.identityEndpoint = identityEndpoint;
    return this;
  }

   /**
   * Identity endpoint for OpenStack
   * @return identityEndpoint
  **/
  @Schema(required = true, description = "Identity endpoint for OpenStack")
  public String getIdentityEndpoint() {
    return identityEndpoint;
  }

  public void setIdentityEndpoint(String identityEndpoint) {
    this.identityEndpoint = identityEndpoint;
  }

  public V1OpenStackCloudAccount insecure(Boolean insecure) {
    this.insecure = insecure;
    return this;
  }

   /**
   * For self signed certs in IdentityEndpoint
   * @return insecure
  **/
  @Schema(description = "For self signed certs in IdentityEndpoint")
  public Boolean isInsecure() {
    return insecure;
  }

  public void setInsecure(Boolean insecure) {
    this.insecure = insecure;
  }

  public V1OpenStackCloudAccount parentRegion(String parentRegion) {
    this.parentRegion = parentRegion;
    return this;
  }

   /**
   * Parent region of OpenStack
   * @return parentRegion
  **/
  @Schema(description = "Parent region of OpenStack")
  public String getParentRegion() {
    return parentRegion;
  }

  public void setParentRegion(String parentRegion) {
    this.parentRegion = parentRegion;
  }

  public V1OpenStackCloudAccount password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password of OpenStack account
   * @return password
  **/
  @Schema(required = true, description = "Password of OpenStack account")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public V1OpenStackCloudAccount username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Username of OpenStack account
   * @return username
  **/
  @Schema(required = true, description = "Username of OpenStack account")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1OpenStackCloudAccount v1OpenStackCloudAccount = (V1OpenStackCloudAccount) o;
    return Objects.equals(this.caCert, v1OpenStackCloudAccount.caCert) &&
        Objects.equals(this.defaultDomain, v1OpenStackCloudAccount.defaultDomain) &&
        Objects.equals(this.defaultProject, v1OpenStackCloudAccount.defaultProject) &&
        Objects.equals(this.identityEndpoint, v1OpenStackCloudAccount.identityEndpoint) &&
        Objects.equals(this.insecure, v1OpenStackCloudAccount.insecure) &&
        Objects.equals(this.parentRegion, v1OpenStackCloudAccount.parentRegion) &&
        Objects.equals(this.password, v1OpenStackCloudAccount.password) &&
        Objects.equals(this.username, v1OpenStackCloudAccount.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caCert, defaultDomain, defaultProject, identityEndpoint, insecure, parentRegion, password, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1OpenStackCloudAccount {\n");
    
    sb.append("    caCert: ").append(toIndentedString(caCert)).append("\n");
    sb.append("    defaultDomain: ").append(toIndentedString(defaultDomain)).append("\n");
    sb.append("    defaultProject: ").append(toIndentedString(defaultProject)).append("\n");
    sb.append("    identityEndpoint: ").append(toIndentedString(identityEndpoint)).append("\n");
    sb.append("    insecure: ").append(toIndentedString(insecure)).append("\n");
    sb.append("    parentRegion: ").append(toIndentedString(parentRegion)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
