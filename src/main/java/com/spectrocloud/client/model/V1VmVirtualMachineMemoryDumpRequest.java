/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * VirtualMachineMemoryDumpRequest represent the memory dump request phase and info
 */
@Schema(description = "VirtualMachineMemoryDumpRequest represent the memory dump request phase and info")


public class V1VmVirtualMachineMemoryDumpRequest {
  @SerializedName("claimName")
  private String claimName = null;

  @SerializedName("endTimestamp")
  private OffsetDateTime endTimestamp = null;

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("phase")
  private String phase = null;

  @SerializedName("remove")
  private Boolean remove = null;

  @SerializedName("startTimestamp")
  private OffsetDateTime startTimestamp = null;

  public V1VmVirtualMachineMemoryDumpRequest claimName(String claimName) {
    this.claimName = claimName;
    return this;
  }

   /**
   * ClaimName is the name of the pvc that will contain the memory dump
   * @return claimName
  **/
  @Schema(required = true, description = "ClaimName is the name of the pvc that will contain the memory dump")
  public String getClaimName() {
    return claimName;
  }

  public void setClaimName(String claimName) {
    this.claimName = claimName;
  }

  public V1VmVirtualMachineMemoryDumpRequest endTimestamp(OffsetDateTime endTimestamp) {
    this.endTimestamp = endTimestamp;
    return this;
  }

   /**
   * Get endTimestamp
   * @return endTimestamp
  **/
  @Schema(description = "")
  public OffsetDateTime getEndTimestamp() {
    return endTimestamp;
  }

  public void setEndTimestamp(OffsetDateTime endTimestamp) {
    this.endTimestamp = endTimestamp;
  }

  public V1VmVirtualMachineMemoryDumpRequest fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * FileName represents the name of the output file
   * @return fileName
  **/
  @Schema(description = "FileName represents the name of the output file")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public V1VmVirtualMachineMemoryDumpRequest message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Message is a detailed message about failure of the memory dump
   * @return message
  **/
  @Schema(description = "Message is a detailed message about failure of the memory dump")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public V1VmVirtualMachineMemoryDumpRequest phase(String phase) {
    this.phase = phase;
    return this;
  }

   /**
   * Phase represents the memory dump phase
   * @return phase
  **/
  @Schema(required = true, description = "Phase represents the memory dump phase")
  public String getPhase() {
    return phase;
  }

  public void setPhase(String phase) {
    this.phase = phase;
  }

  public V1VmVirtualMachineMemoryDumpRequest remove(Boolean remove) {
    this.remove = remove;
    return this;
  }

   /**
   * Remove represents request of dissociating the memory dump pvc
   * @return remove
  **/
  @Schema(description = "Remove represents request of dissociating the memory dump pvc")
  public Boolean isRemove() {
    return remove;
  }

  public void setRemove(Boolean remove) {
    this.remove = remove;
  }

  public V1VmVirtualMachineMemoryDumpRequest startTimestamp(OffsetDateTime startTimestamp) {
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * Get startTimestamp
   * @return startTimestamp
  **/
  @Schema(description = "")
  public OffsetDateTime getStartTimestamp() {
    return startTimestamp;
  }

  public void setStartTimestamp(OffsetDateTime startTimestamp) {
    this.startTimestamp = startTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1VmVirtualMachineMemoryDumpRequest v1VmVirtualMachineMemoryDumpRequest = (V1VmVirtualMachineMemoryDumpRequest) o;
    return Objects.equals(this.claimName, v1VmVirtualMachineMemoryDumpRequest.claimName) &&
        Objects.equals(this.endTimestamp, v1VmVirtualMachineMemoryDumpRequest.endTimestamp) &&
        Objects.equals(this.fileName, v1VmVirtualMachineMemoryDumpRequest.fileName) &&
        Objects.equals(this.message, v1VmVirtualMachineMemoryDumpRequest.message) &&
        Objects.equals(this.phase, v1VmVirtualMachineMemoryDumpRequest.phase) &&
        Objects.equals(this.remove, v1VmVirtualMachineMemoryDumpRequest.remove) &&
        Objects.equals(this.startTimestamp, v1VmVirtualMachineMemoryDumpRequest.startTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(claimName, endTimestamp, fileName, message, phase, remove, startTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1VmVirtualMachineMemoryDumpRequest {\n");
    
    sb.append("    claimName: ").append(toIndentedString(claimName)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    remove: ").append(toIndentedString(remove)).append("\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
