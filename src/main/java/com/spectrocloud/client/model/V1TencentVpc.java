/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1TencentSubnet;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Tencent VPC entity
 */
@Schema(description = "Tencent VPC entity")


public class V1TencentVpc {
  @SerializedName("cidrBlock")
  private String cidrBlock = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("subnets")
  private List<V1TencentSubnet> subnets = null;

  @SerializedName("vpcId")
  private String vpcId = null;

  public V1TencentVpc cidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
    return this;
  }

   /**
   * Tencent VPC CIDR. The CIDR notation consists of an IP address, a slash character (&#x27;/&#x27;) and a decimal number from 0 to 32
   * @return cidrBlock
  **/
  @Schema(description = "Tencent VPC CIDR. The CIDR notation consists of an IP address, a slash character ('/') and a decimal number from 0 to 32")
  public String getCidrBlock() {
    return cidrBlock;
  }

  public void setCidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
  }

  public V1TencentVpc name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Tencent VPC name
   * @return name
  **/
  @Schema(description = "Tencent VPC name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1TencentVpc subnets(List<V1TencentSubnet> subnets) {
    this.subnets = subnets;
    return this;
  }

  public V1TencentVpc addSubnetsItem(V1TencentSubnet subnetsItem) {
    if (this.subnets == null) {
      this.subnets = new ArrayList<V1TencentSubnet>();
    }
    this.subnets.add(subnetsItem);
    return this;
  }

   /**
   * Get subnets
   * @return subnets
  **/
  @Schema(description = "")
  public List<V1TencentSubnet> getSubnets() {
    return subnets;
  }

  public void setSubnets(List<V1TencentSubnet> subnets) {
    this.subnets = subnets;
  }

  public V1TencentVpc vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Tencent VPC id
   * @return vpcId
  **/
  @Schema(required = true, description = "Tencent VPC id")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1TencentVpc v1TencentVpc = (V1TencentVpc) o;
    return Objects.equals(this.cidrBlock, v1TencentVpc.cidrBlock) &&
        Objects.equals(this.name, v1TencentVpc.name) &&
        Objects.equals(this.subnets, v1TencentVpc.subnets) &&
        Objects.equals(this.vpcId, v1TencentVpc.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cidrBlock, name, subnets, vpcId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1TencentVpc {\n");
    
    sb.append("    cidrBlock: ").append(toIndentedString(cidrBlock)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subnets: ").append(toIndentedString(subnets)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
