/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1PackManifestImportEntity;
import com.spectrocloud.client.model.V1PackRegistryImportEntity;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Pack import request payload
 */
@Schema(description = "Pack import request payload")


public class V1PackImportEntity {
  @SerializedName("layer")
  private String layer = null;

  @SerializedName("manifests")
  private List<V1PackManifestImportEntity> manifests = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("registry")
  private V1PackRegistryImportEntity registry = null;

  @SerializedName("tag")
  private String tag = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("values")
  private String values = null;

  @SerializedName("version")
  private String version = null;

  public V1PackImportEntity layer(String layer) {
    this.layer = layer;
    return this;
  }

   /**
   * Pack layer [ \&quot;os\&quot;, \&quot;k8s\&quot;, \&quot;cni\&quot;, \&quot;csi\&quot;, \&quot;addon\&quot; ]
   * @return layer
  **/
  @Schema(description = "Pack layer [ \"os\", \"k8s\", \"cni\", \"csi\", \"addon\" ]")
  public String getLayer() {
    return layer;
  }

  public void setLayer(String layer) {
    this.layer = layer;
  }

  public V1PackImportEntity manifests(List<V1PackManifestImportEntity> manifests) {
    this.manifests = manifests;
    return this;
  }

  public V1PackImportEntity addManifestsItem(V1PackManifestImportEntity manifestsItem) {
    if (this.manifests == null) {
      this.manifests = new ArrayList<V1PackManifestImportEntity>();
    }
    this.manifests.add(manifestsItem);
    return this;
  }

   /**
   * Pack manifests array
   * @return manifests
  **/
  @Schema(description = "Pack manifests array")
  public List<V1PackManifestImportEntity> getManifests() {
    return manifests;
  }

  public void setManifests(List<V1PackManifestImportEntity> manifests) {
    this.manifests = manifests;
  }

  public V1PackImportEntity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Pack name
   * @return name
  **/
  @Schema(description = "Pack name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1PackImportEntity registry(V1PackRegistryImportEntity registry) {
    this.registry = registry;
    return this;
  }

   /**
   * Get registry
   * @return registry
  **/
  @Schema(description = "")
  public V1PackRegistryImportEntity getRegistry() {
    return registry;
  }

  public void setRegistry(V1PackRegistryImportEntity registry) {
    this.registry = registry;
  }

  public V1PackImportEntity tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Pack version tag
   * @return tag
  **/
  @Schema(description = "Pack version tag")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public V1PackImportEntity type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Pack type [ \&quot;spectro\&quot;, \&quot;helm\&quot;, \&quot;manifest\&quot;, \&quot;oci\&quot; ]
   * @return type
  **/
  @Schema(description = "Pack type [ \"spectro\", \"helm\", \"manifest\", \"oci\" ]")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public V1PackImportEntity values(String values) {
    this.values = values;
    return this;
  }

   /**
   * Pack values are the customizable configurations for the pack
   * @return values
  **/
  @Schema(description = "Pack values are the customizable configurations for the pack")
  public String getValues() {
    return values;
  }

  public void setValues(String values) {
    this.values = values;
  }

  public V1PackImportEntity version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Pack version
   * @return version
  **/
  @Schema(description = "Pack version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1PackImportEntity v1PackImportEntity = (V1PackImportEntity) o;
    return Objects.equals(this.layer, v1PackImportEntity.layer) &&
        Objects.equals(this.manifests, v1PackImportEntity.manifests) &&
        Objects.equals(this.name, v1PackImportEntity.name) &&
        Objects.equals(this.registry, v1PackImportEntity.registry) &&
        Objects.equals(this.tag, v1PackImportEntity.tag) &&
        Objects.equals(this.type, v1PackImportEntity.type) &&
        Objects.equals(this.values, v1PackImportEntity.values) &&
        Objects.equals(this.version, v1PackImportEntity.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(layer, manifests, name, registry, tag, type, values, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1PackImportEntity {\n");
    
    sb.append("    layer: ").append(toIndentedString(layer)).append("\n");
    sb.append("    manifests: ").append(toIndentedString(manifests)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    registry: ").append(toIndentedString(registry)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
