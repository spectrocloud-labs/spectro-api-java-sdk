/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ListMeta describes metadata for the resource listing
 */
@Schema(description = "ListMeta describes metadata for the resource listing")


public class V1ListMetaData {
  @SerializedName("continue")
  private String _continue = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("offset")
  private Integer offset = null;

  public V1ListMetaData _continue(String _continue) {
    this._continue = _continue;
    return this;
  }

   /**
   * Next token for the pagination. Next token is equal to empty string indicates end of result set.
   * @return _continue
  **/
  @Schema(description = "Next token for the pagination. Next token is equal to empty string indicates end of result set.")
  public String getContinue() {
    return _continue;
  }

  public void setContinue(String _continue) {
    this._continue = _continue;
  }

  public V1ListMetaData count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Total count of the resources which might change during pagination based on the resources addition or deletion
   * @return count
  **/
  @Schema(description = "Total count of the resources which might change during pagination based on the resources addition or deletion")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public V1ListMetaData limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Number of records feteched
   * @return limit
  **/
  @Schema(description = "Number of records feteched")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public V1ListMetaData offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * The next offset for the pagination. Starting index for which next request will be placed.
   * @return offset
  **/
  @Schema(description = "The next offset for the pagination. Starting index for which next request will be placed.")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ListMetaData v1ListMetaData = (V1ListMetaData) o;
    return Objects.equals(this._continue, v1ListMetaData._continue) &&
        Objects.equals(this.count, v1ListMetaData.count) &&
        Objects.equals(this.limit, v1ListMetaData.limit) &&
        Objects.equals(this.offset, v1ListMetaData.offset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_continue, count, limit, offset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ListMetaData {\n");
    
    sb.append("    _continue: ").append(toIndentedString(_continue)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
