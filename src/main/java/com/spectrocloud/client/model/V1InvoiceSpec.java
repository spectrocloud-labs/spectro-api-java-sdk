/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1Address;
import com.spectrocloud.client.model.V1InvoiceBillingPeriod;
import com.spectrocloud.client.model.V1InvoiceCredits;
import com.spectrocloud.client.model.V1InvoicePlan;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Invoice specification
 */
@Schema(description = "Invoice specification")


public class V1InvoiceSpec {
  @SerializedName("address")
  private V1Address address = null;

  @SerializedName("billingPeriod")
  private V1InvoiceBillingPeriod billingPeriod = null;

  @SerializedName("credits")
  private V1InvoiceCredits credits = null;

  @SerializedName("envType")
  private String envType = null;

  @SerializedName("month")
  private OffsetDateTime month = null;

  /**
   * Gets or Sets paymentUnit
   */
  @JsonAdapter(PaymentUnitEnum.Adapter.class)
  public enum PaymentUnitEnum {
    USD("usd");

    private String value;

    PaymentUnitEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PaymentUnitEnum fromValue(String input) {
      for (PaymentUnitEnum b : PaymentUnitEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PaymentUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentUnitEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PaymentUnitEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PaymentUnitEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("paymentUnit")
  private PaymentUnitEnum paymentUnit = null;

  @SerializedName("plan")
  private V1InvoicePlan plan = null;

  public V1InvoiceSpec address(V1Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public V1Address getAddress() {
    return address;
  }

  public void setAddress(V1Address address) {
    this.address = address;
  }

  public V1InvoiceSpec billingPeriod(V1InvoiceBillingPeriod billingPeriod) {
    this.billingPeriod = billingPeriod;
    return this;
  }

   /**
   * Get billingPeriod
   * @return billingPeriod
  **/
  @Schema(description = "")
  public V1InvoiceBillingPeriod getBillingPeriod() {
    return billingPeriod;
  }

  public void setBillingPeriod(V1InvoiceBillingPeriod billingPeriod) {
    this.billingPeriod = billingPeriod;
  }

  public V1InvoiceSpec credits(V1InvoiceCredits credits) {
    this.credits = credits;
    return this;
  }

   /**
   * Get credits
   * @return credits
  **/
  @Schema(description = "")
  public V1InvoiceCredits getCredits() {
    return credits;
  }

  public void setCredits(V1InvoiceCredits credits) {
    this.credits = credits;
  }

  public V1InvoiceSpec envType(String envType) {
    this.envType = envType;
    return this;
  }

   /**
   * Environment type [Trial,MonthlyOnDemand,AnnualSubscription,OnPrem]
   * @return envType
  **/
  @Schema(description = "Environment type [Trial,MonthlyOnDemand,AnnualSubscription,OnPrem]")
  public String getEnvType() {
    return envType;
  }

  public void setEnvType(String envType) {
    this.envType = envType;
  }

  public V1InvoiceSpec month(OffsetDateTime month) {
    this.month = month;
    return this;
  }

   /**
   * Get month
   * @return month
  **/
  @Schema(description = "")
  public OffsetDateTime getMonth() {
    return month;
  }

  public void setMonth(OffsetDateTime month) {
    this.month = month;
  }

  public V1InvoiceSpec paymentUnit(PaymentUnitEnum paymentUnit) {
    this.paymentUnit = paymentUnit;
    return this;
  }

   /**
   * Get paymentUnit
   * @return paymentUnit
  **/
  @Schema(description = "")
  public PaymentUnitEnum getPaymentUnit() {
    return paymentUnit;
  }

  public void setPaymentUnit(PaymentUnitEnum paymentUnit) {
    this.paymentUnit = paymentUnit;
  }

  public V1InvoiceSpec plan(V1InvoicePlan plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @Schema(description = "")
  public V1InvoicePlan getPlan() {
    return plan;
  }

  public void setPlan(V1InvoicePlan plan) {
    this.plan = plan;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1InvoiceSpec v1InvoiceSpec = (V1InvoiceSpec) o;
    return Objects.equals(this.address, v1InvoiceSpec.address) &&
        Objects.equals(this.billingPeriod, v1InvoiceSpec.billingPeriod) &&
        Objects.equals(this.credits, v1InvoiceSpec.credits) &&
        Objects.equals(this.envType, v1InvoiceSpec.envType) &&
        Objects.equals(this.month, v1InvoiceSpec.month) &&
        Objects.equals(this.paymentUnit, v1InvoiceSpec.paymentUnit) &&
        Objects.equals(this.plan, v1InvoiceSpec.plan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, billingPeriod, credits, envType, month, paymentUnit, plan);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1InvoiceSpec {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    billingPeriod: ").append(toIndentedString(billingPeriod)).append("\n");
    sb.append("    credits: ").append(toIndentedString(credits)).append("\n");
    sb.append("    envType: ").append(toIndentedString(envType)).append("\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    paymentUnit: ").append(toIndentedString(paymentUnit)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
