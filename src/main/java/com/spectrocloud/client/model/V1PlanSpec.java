/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1DeveloperCredit;
import com.spectrocloud.client.model.V1PlanCost;
import com.spectrocloud.client.model.V1PlanCredit;
import com.spectrocloud.client.model.V1PlanLimit;
import com.spectrocloud.client.model.V1PlanRenewal;
import com.spectrocloud.client.model.V1TierPrice;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Plan specifications
 */
@Schema(description = "Plan specifications")


public class V1PlanSpec {
  @SerializedName("cost")
  private V1PlanCost cost = null;

  @SerializedName("developerCredits")
  private V1DeveloperCredit developerCredits = null;

  @SerializedName("expiry")
  private OffsetDateTime expiry = null;

  @SerializedName("freeCredits")
  private List<V1PlanCredit> freeCredits = null;

  @SerializedName("planLimit")
  private V1PlanLimit planLimit = null;

  @SerializedName("renewal")
  private V1PlanRenewal renewal = null;

  @SerializedName("slaCredits")
  private List<V1PlanCredit> slaCredits = null;

  @SerializedName("start")
  private OffsetDateTime start = null;

  @SerializedName("tierPricing")
  private V1TierPrice tierPricing = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TRIAL("Trial"),
    MONTHLYONDEMAND("MonthlyOnDemand"),
    ANNUALSUBSCRIPTION("AnnualSubscription");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public V1PlanSpec cost(V1PlanCost cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @Schema(description = "")
  public V1PlanCost getCost() {
    return cost;
  }

  public void setCost(V1PlanCost cost) {
    this.cost = cost;
  }

  public V1PlanSpec developerCredits(V1DeveloperCredit developerCredits) {
    this.developerCredits = developerCredits;
    return this;
  }

   /**
   * Get developerCredits
   * @return developerCredits
  **/
  @Schema(description = "")
  public V1DeveloperCredit getDeveloperCredits() {
    return developerCredits;
  }

  public void setDeveloperCredits(V1DeveloperCredit developerCredits) {
    this.developerCredits = developerCredits;
  }

  public V1PlanSpec expiry(OffsetDateTime expiry) {
    this.expiry = expiry;
    return this;
  }

   /**
   * Get expiry
   * @return expiry
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getExpiry() {
    return expiry;
  }

  public void setExpiry(OffsetDateTime expiry) {
    this.expiry = expiry;
  }

  public V1PlanSpec freeCredits(List<V1PlanCredit> freeCredits) {
    this.freeCredits = freeCredits;
    return this;
  }

  public V1PlanSpec addFreeCreditsItem(V1PlanCredit freeCreditsItem) {
    if (this.freeCredits == null) {
      this.freeCredits = new ArrayList<V1PlanCredit>();
    }
    this.freeCredits.add(freeCreditsItem);
    return this;
  }

   /**
   * Get freeCredits
   * @return freeCredits
  **/
  @Schema(description = "")
  public List<V1PlanCredit> getFreeCredits() {
    return freeCredits;
  }

  public void setFreeCredits(List<V1PlanCredit> freeCredits) {
    this.freeCredits = freeCredits;
  }

  public V1PlanSpec planLimit(V1PlanLimit planLimit) {
    this.planLimit = planLimit;
    return this;
  }

   /**
   * Get planLimit
   * @return planLimit
  **/
  @Schema(description = "")
  public V1PlanLimit getPlanLimit() {
    return planLimit;
  }

  public void setPlanLimit(V1PlanLimit planLimit) {
    this.planLimit = planLimit;
  }

  public V1PlanSpec renewal(V1PlanRenewal renewal) {
    this.renewal = renewal;
    return this;
  }

   /**
   * Get renewal
   * @return renewal
  **/
  @Schema(description = "")
  public V1PlanRenewal getRenewal() {
    return renewal;
  }

  public void setRenewal(V1PlanRenewal renewal) {
    this.renewal = renewal;
  }

  public V1PlanSpec slaCredits(List<V1PlanCredit> slaCredits) {
    this.slaCredits = slaCredits;
    return this;
  }

  public V1PlanSpec addSlaCreditsItem(V1PlanCredit slaCreditsItem) {
    if (this.slaCredits == null) {
      this.slaCredits = new ArrayList<V1PlanCredit>();
    }
    this.slaCredits.add(slaCreditsItem);
    return this;
  }

   /**
   * Get slaCredits
   * @return slaCredits
  **/
  @Schema(description = "")
  public List<V1PlanCredit> getSlaCredits() {
    return slaCredits;
  }

  public void setSlaCredits(List<V1PlanCredit> slaCredits) {
    this.slaCredits = slaCredits;
  }

  public V1PlanSpec start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }

  public V1PlanSpec tierPricing(V1TierPrice tierPricing) {
    this.tierPricing = tierPricing;
    return this;
  }

   /**
   * Get tierPricing
   * @return tierPricing
  **/
  @Schema(description = "")
  public V1TierPrice getTierPricing() {
    return tierPricing;
  }

  public void setTierPricing(V1TierPrice tierPricing) {
    this.tierPricing = tierPricing;
  }

  public V1PlanSpec type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1PlanSpec v1PlanSpec = (V1PlanSpec) o;
    return Objects.equals(this.cost, v1PlanSpec.cost) &&
        Objects.equals(this.developerCredits, v1PlanSpec.developerCredits) &&
        Objects.equals(this.expiry, v1PlanSpec.expiry) &&
        Objects.equals(this.freeCredits, v1PlanSpec.freeCredits) &&
        Objects.equals(this.planLimit, v1PlanSpec.planLimit) &&
        Objects.equals(this.renewal, v1PlanSpec.renewal) &&
        Objects.equals(this.slaCredits, v1PlanSpec.slaCredits) &&
        Objects.equals(this.start, v1PlanSpec.start) &&
        Objects.equals(this.tierPricing, v1PlanSpec.tierPricing) &&
        Objects.equals(this.type, v1PlanSpec.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cost, developerCredits, expiry, freeCredits, planLimit, renewal, slaCredits, start, tierPricing, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1PlanSpec {\n");
    
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    developerCredits: ").append(toIndentedString(developerCredits)).append("\n");
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("    freeCredits: ").append(toIndentedString(freeCredits)).append("\n");
    sb.append("    planLimit: ").append(toIndentedString(planLimit)).append("\n");
    sb.append("    renewal: ").append(toIndentedString(renewal)).append("\n");
    sb.append("    slaCredits: ").append(toIndentedString(slaCredits)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    tierPricing: ").append(toIndentedString(tierPricing)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
