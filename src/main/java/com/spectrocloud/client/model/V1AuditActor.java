/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ProjectMeta;
import com.spectrocloud.client.model.V1UserMeta;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Audit actor object
 */
@Schema(description = "Audit actor object")


public class V1AuditActor {
  /**
   * Gets or Sets actorType
   */
  @JsonAdapter(ActorTypeEnum.Adapter.class)
  public enum ActorTypeEnum {
    USER("user"),
    SYSTEM("system"),
    SERVICE("service");

    private String value;

    ActorTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActorTypeEnum fromValue(String input) {
      for (ActorTypeEnum b : ActorTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActorTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActorTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ActorTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ActorTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("actorType")
  private ActorTypeEnum actorType = null;

  @SerializedName("project")
  private V1ProjectMeta project = null;

  @SerializedName("serviceName")
  private String serviceName = null;

  @SerializedName("user")
  private V1UserMeta user = null;

  public V1AuditActor actorType(ActorTypeEnum actorType) {
    this.actorType = actorType;
    return this;
  }

   /**
   * Get actorType
   * @return actorType
  **/
  @Schema(description = "")
  public ActorTypeEnum getActorType() {
    return actorType;
  }

  public void setActorType(ActorTypeEnum actorType) {
    this.actorType = actorType;
  }

  public V1AuditActor project(V1ProjectMeta project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @Schema(description = "")
  public V1ProjectMeta getProject() {
    return project;
  }

  public void setProject(V1ProjectMeta project) {
    this.project = project;
  }

  public V1AuditActor serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

   /**
   * Get serviceName
   * @return serviceName
  **/
  @Schema(description = "")
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }

  public V1AuditActor user(V1UserMeta user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public V1UserMeta getUser() {
    return user;
  }

  public void setUser(V1UserMeta user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1AuditActor v1AuditActor = (V1AuditActor) o;
    return Objects.equals(this.actorType, v1AuditActor.actorType) &&
        Objects.equals(this.project, v1AuditActor.project) &&
        Objects.equals(this.serviceName, v1AuditActor.serviceName) &&
        Objects.equals(this.user, v1AuditActor.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actorType, project, serviceName, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1AuditActor {\n");
    
    sb.append("    actorType: ").append(toIndentedString(actorType)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
