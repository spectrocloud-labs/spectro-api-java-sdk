/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1StorageCost;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Cloud cloud Storage type details
 */
@Schema(description = "Cloud cloud Storage type details")


public class V1StorageType {
  @SerializedName("cost")
  private V1StorageCost cost = null;

  @SerializedName("iopsCost")
  private V1StorageCost iopsCost = null;

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("throughputCost")
  private V1StorageCost throughputCost = null;

  public V1StorageType cost(V1StorageCost cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @Schema(description = "")
  public V1StorageCost getCost() {
    return cost;
  }

  public void setCost(V1StorageCost cost) {
    this.cost = cost;
  }

  public V1StorageType iopsCost(V1StorageCost iopsCost) {
    this.iopsCost = iopsCost;
    return this;
  }

   /**
   * Get iopsCost
   * @return iopsCost
  **/
  @Schema(description = "")
  public V1StorageCost getIopsCost() {
    return iopsCost;
  }

  public void setIopsCost(V1StorageCost iopsCost) {
    this.iopsCost = iopsCost;
  }

  public V1StorageType kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * kind of storage type
   * @return kind
  **/
  @Schema(description = "kind of storage type")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public V1StorageType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the storage type
   * @return name
  **/
  @Schema(description = "Name of the storage type")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1StorageType throughputCost(V1StorageCost throughputCost) {
    this.throughputCost = throughputCost;
    return this;
  }

   /**
   * Get throughputCost
   * @return throughputCost
  **/
  @Schema(description = "")
  public V1StorageCost getThroughputCost() {
    return throughputCost;
  }

  public void setThroughputCost(V1StorageCost throughputCost) {
    this.throughputCost = throughputCost;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1StorageType v1StorageType = (V1StorageType) o;
    return Objects.equals(this.cost, v1StorageType.cost) &&
        Objects.equals(this.iopsCost, v1StorageType.iopsCost) &&
        Objects.equals(this.kind, v1StorageType.kind) &&
        Objects.equals(this.name, v1StorageType.name) &&
        Objects.equals(this.throughputCost, v1StorageType.throughputCost);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cost, iopsCost, kind, name, throughputCost);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1StorageType {\n");
    
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    iopsCost: ").append(toIndentedString(iopsCost)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    throughputCost: ").append(toIndentedString(throughputCost)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
