/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Registry metadata information
 */
@Schema(description = "Registry metadata information")


public class V1RegistryPackMetadata {
  @SerializedName("annotations")
  private Map<String, String> annotations = null;

  @SerializedName("latestVersion")
  private String latestVersion = null;

  @SerializedName("logoUrl")
  private String logoUrl = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("scope")
  private String scope = null;

  @SerializedName("uid")
  private String uid = null;

  public V1RegistryPackMetadata annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public V1RegistryPackMetadata putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<String, String>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

   /**
   * Pack annotations is used to allow pack to add more arbitrary configurations
   * @return annotations
  **/
  @Schema(description = "Pack annotations is used to allow pack to add more arbitrary configurations")
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }

  public V1RegistryPackMetadata latestVersion(String latestVersion) {
    this.latestVersion = latestVersion;
    return this;
  }

   /**
   * Pack latest version
   * @return latestVersion
  **/
  @Schema(description = "Pack latest version")
  public String getLatestVersion() {
    return latestVersion;
  }

  public void setLatestVersion(String latestVersion) {
    this.latestVersion = latestVersion;
  }

  public V1RegistryPackMetadata logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * Pack logo url
   * @return logoUrl
  **/
  @Schema(description = "Pack logo url")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public V1RegistryPackMetadata name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Pack registry name
   * @return name
  **/
  @Schema(description = "Pack registry name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1RegistryPackMetadata scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Pack registry scope
   * @return scope
  **/
  @Schema(description = "Pack registry scope")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public V1RegistryPackMetadata uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Pack registry uid
   * @return uid
  **/
  @Schema(description = "Pack registry uid")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1RegistryPackMetadata v1RegistryPackMetadata = (V1RegistryPackMetadata) o;
    return Objects.equals(this.annotations, v1RegistryPackMetadata.annotations) &&
        Objects.equals(this.latestVersion, v1RegistryPackMetadata.latestVersion) &&
        Objects.equals(this.logoUrl, v1RegistryPackMetadata.logoUrl) &&
        Objects.equals(this.name, v1RegistryPackMetadata.name) &&
        Objects.equals(this.scope, v1RegistryPackMetadata.scope) &&
        Objects.equals(this.uid, v1RegistryPackMetadata.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, latestVersion, logoUrl, name, scope, uid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1RegistryPackMetadata {\n");
    
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    latestVersion: ").append(toIndentedString(latestVersion)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
