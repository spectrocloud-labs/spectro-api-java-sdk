/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Describes the response that contains the nats configuration to establish credentials
 */
@Schema(description = "Describes the response that contains the nats configuration to establish credentials")


public class V1NatsConfiguration {
  @SerializedName("connectionString")
  private String connectionString = null;

  @SerializedName("enableTls")
  private Boolean enableTls = null;

  @SerializedName("insecureTls")
  private Boolean insecureTls = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("scheme")
  private String scheme = null;

  @SerializedName("tlsCertificate")
  private String tlsCertificate = null;

  @SerializedName("tlsKey")
  private String tlsKey = null;

  @SerializedName("urls")
  private String urls = null;

  @SerializedName("userName")
  private String userName = null;

  public V1NatsConfiguration connectionString(String connectionString) {
    this.connectionString = connectionString;
    return this;
  }

   /**
   * Describes the preCalculated connection string, can be used directly to make connection
   * @return connectionString
  **/
  @Schema(description = "Describes the preCalculated connection string, can be used directly to make connection")
  public String getConnectionString() {
    return connectionString;
  }

  public void setConnectionString(String connectionString) {
    this.connectionString = connectionString;
  }

  public V1NatsConfiguration enableTls(Boolean enableTls) {
    this.enableTls = enableTls;
    return this;
  }

   /**
   * Describes the NATs application option to use a TLS based custom dialer. Its enabled when external Certificate is used over the existing one.
   * @return enableTls
  **/
  @Schema(description = "Describes the NATs application option to use a TLS based custom dialer. Its enabled when external Certificate is used over the existing one.")
  public Boolean isEnableTls() {
    return enableTls;
  }

  public void setEnableTls(Boolean enableTls) {
    this.enableTls = enableTls;
  }

  public V1NatsConfiguration insecureTls(Boolean insecureTls) {
    this.insecureTls = insecureTls;
    return this;
  }

   /**
   * Describes the NATs tls option to skip verifying the client certificate
   * @return insecureTls
  **/
  @Schema(description = "Describes the NATs tls option to skip verifying the client certificate")
  public Boolean isInsecureTls() {
    return insecureTls;
  }

  public void setInsecureTls(Boolean insecureTls) {
    this.insecureTls = insecureTls;
  }

  public V1NatsConfiguration password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Describes the NATs user&#x27;s password
   * @return password
  **/
  @Schema(description = "Describes the NATs user's password")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public V1NatsConfiguration scheme(String scheme) {
    this.scheme = scheme;
    return this;
  }

   /**
   * Describes the NATs protocol for the connection. Eg- &#x27;tls&#x27;, &#x27;nats&#x27;
   * @return scheme
  **/
  @Schema(description = "Describes the NATs protocol for the connection. Eg- 'tls', 'nats'")
  public String getScheme() {
    return scheme;
  }

  public void setScheme(String scheme) {
    this.scheme = scheme;
  }

  public V1NatsConfiguration tlsCertificate(String tlsCertificate) {
    this.tlsCertificate = tlsCertificate;
    return this;
  }

   /**
   * Describes the NATs tls certificate used for making a secure connection
   * @return tlsCertificate
  **/
  @Schema(description = "Describes the NATs tls certificate used for making a secure connection")
  public String getTlsCertificate() {
    return tlsCertificate;
  }

  public void setTlsCertificate(String tlsCertificate) {
    this.tlsCertificate = tlsCertificate;
  }

  public V1NatsConfiguration tlsKey(String tlsKey) {
    this.tlsKey = tlsKey;
    return this;
  }

   /**
   * Describes the NATs tls certificate key used for making a secure connection
   * @return tlsKey
  **/
  @Schema(description = "Describes the NATs tls certificate key used for making a secure connection")
  public String getTlsKey() {
    return tlsKey;
  }

  public void setTlsKey(String tlsKey) {
    this.tlsKey = tlsKey;
  }

  public V1NatsConfiguration urls(String urls) {
    this.urls = urls;
    return this;
  }

   /**
   * Describes the URLs of the nats nodes used in nats HA setup where the client will connect
   * @return urls
  **/
  @Schema(description = "Describes the URLs of the nats nodes used in nats HA setup where the client will connect")
  public String getUrls() {
    return urls;
  }

  public void setUrls(String urls) {
    this.urls = urls;
  }

  public V1NatsConfiguration userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Describes the NATs user name
   * @return userName
  **/
  @Schema(description = "Describes the NATs user name")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1NatsConfiguration v1NatsConfiguration = (V1NatsConfiguration) o;
    return Objects.equals(this.connectionString, v1NatsConfiguration.connectionString) &&
        Objects.equals(this.enableTls, v1NatsConfiguration.enableTls) &&
        Objects.equals(this.insecureTls, v1NatsConfiguration.insecureTls) &&
        Objects.equals(this.password, v1NatsConfiguration.password) &&
        Objects.equals(this.scheme, v1NatsConfiguration.scheme) &&
        Objects.equals(this.tlsCertificate, v1NatsConfiguration.tlsCertificate) &&
        Objects.equals(this.tlsKey, v1NatsConfiguration.tlsKey) &&
        Objects.equals(this.urls, v1NatsConfiguration.urls) &&
        Objects.equals(this.userName, v1NatsConfiguration.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionString, enableTls, insecureTls, password, scheme, tlsCertificate, tlsKey, urls, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1NatsConfiguration {\n");
    
    sb.append("    connectionString: ").append(toIndentedString(connectionString)).append("\n");
    sb.append("    enableTls: ").append(toIndentedString(enableTls)).append("\n");
    sb.append("    insecureTls: ").append(toIndentedString(insecureTls)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("    tlsCertificate: ").append(toIndentedString(tlsCertificate)).append("\n");
    sb.append("    tlsKey: ").append(toIndentedString(tlsKey)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
