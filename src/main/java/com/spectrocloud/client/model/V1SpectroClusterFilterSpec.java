/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1CloudType;
import com.spectrocloud.client.model.V1ClusterState;
import com.spectrocloud.client.model.V1FilterArray;
import com.spectrocloud.client.model.V1FilterIntRange;
import com.spectrocloud.client.model.V1FilterNumberRange;
import com.spectrocloud.client.model.V1FilterString;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Spectro cluster filter spec
 */
@Schema(description = "Spectro cluster filter spec")


public class V1SpectroClusterFilterSpec {
  @SerializedName("cloudAccounts")
  private List<String> cloudAccounts = null;

  @SerializedName("clusterName")
  private V1FilterString clusterName = null;

  @SerializedName("clusterProfiles")
  private List<String> clusterProfiles = null;

  @SerializedName("clusterState")
  private V1ClusterState clusterState = null;

  @SerializedName("clusterStates")
  private List<V1ClusterState> clusterStates = null;

  @SerializedName("cpuUsage")
  private V1FilterIntRange cpuUsage = null;

  @SerializedName("environment")
  private List<V1CloudType> environment = null;

  @SerializedName("environments")
  private List<V1CloudType> environments = null;

  /**
   * Gets or Sets healthState
   */
  @JsonAdapter(HealthStateEnum.Adapter.class)
  public enum HealthStateEnum {
    ALL("all"),
    HEALTHY("Healthy"),
    UNHEALTHY("UnHealthy");

    private String value;

    HealthStateEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static HealthStateEnum fromValue(String input) {
      for (HealthStateEnum b : HealthStateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<HealthStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final HealthStateEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public HealthStateEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return HealthStateEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("healthState")
  private HealthStateEnum healthState = HealthStateEnum.ALL;

  @SerializedName("isDeleted")
  private Boolean isDeleted = false;

  @SerializedName("isHostCluster")
  private Boolean isHostCluster = false;

  @SerializedName("memoryUsage")
  private V1FilterNumberRange memoryUsage = null;

  @SerializedName("metricPeriod")
  private Integer metricPeriod = 60;

  @SerializedName("projectUids")
  private List<String> projectUids = null;

  @SerializedName("tags")
  private V1FilterArray tags = null;

  public V1SpectroClusterFilterSpec cloudAccounts(List<String> cloudAccounts) {
    this.cloudAccounts = cloudAccounts;
    return this;
  }

  public V1SpectroClusterFilterSpec addCloudAccountsItem(String cloudAccountsItem) {
    if (this.cloudAccounts == null) {
      this.cloudAccounts = new ArrayList<String>();
    }
    this.cloudAccounts.add(cloudAccountsItem);
    return this;
  }

   /**
   * Get cloudAccounts
   * @return cloudAccounts
  **/
  @Schema(description = "")
  public List<String> getCloudAccounts() {
    return cloudAccounts;
  }

  public void setCloudAccounts(List<String> cloudAccounts) {
    this.cloudAccounts = cloudAccounts;
  }

  public V1SpectroClusterFilterSpec clusterName(V1FilterString clusterName) {
    this.clusterName = clusterName;
    return this;
  }

   /**
   * Get clusterName
   * @return clusterName
  **/
  @Schema(description = "")
  public V1FilterString getClusterName() {
    return clusterName;
  }

  public void setClusterName(V1FilterString clusterName) {
    this.clusterName = clusterName;
  }

  public V1SpectroClusterFilterSpec clusterProfiles(List<String> clusterProfiles) {
    this.clusterProfiles = clusterProfiles;
    return this;
  }

  public V1SpectroClusterFilterSpec addClusterProfilesItem(String clusterProfilesItem) {
    if (this.clusterProfiles == null) {
      this.clusterProfiles = new ArrayList<String>();
    }
    this.clusterProfiles.add(clusterProfilesItem);
    return this;
  }

   /**
   * Get clusterProfiles
   * @return clusterProfiles
  **/
  @Schema(description = "")
  public List<String> getClusterProfiles() {
    return clusterProfiles;
  }

  public void setClusterProfiles(List<String> clusterProfiles) {
    this.clusterProfiles = clusterProfiles;
  }

  public V1SpectroClusterFilterSpec clusterState(V1ClusterState clusterState) {
    this.clusterState = clusterState;
    return this;
  }

   /**
   * Get clusterState
   * @return clusterState
  **/
  @Schema(description = "")
  public V1ClusterState getClusterState() {
    return clusterState;
  }

  public void setClusterState(V1ClusterState clusterState) {
    this.clusterState = clusterState;
  }

  public V1SpectroClusterFilterSpec clusterStates(List<V1ClusterState> clusterStates) {
    this.clusterStates = clusterStates;
    return this;
  }

  public V1SpectroClusterFilterSpec addClusterStatesItem(V1ClusterState clusterStatesItem) {
    if (this.clusterStates == null) {
      this.clusterStates = new ArrayList<V1ClusterState>();
    }
    this.clusterStates.add(clusterStatesItem);
    return this;
  }

   /**
   * Get clusterStates
   * @return clusterStates
  **/
  @Schema(description = "")
  public List<V1ClusterState> getClusterStates() {
    return clusterStates;
  }

  public void setClusterStates(List<V1ClusterState> clusterStates) {
    this.clusterStates = clusterStates;
  }

  public V1SpectroClusterFilterSpec cpuUsage(V1FilterIntRange cpuUsage) {
    this.cpuUsage = cpuUsage;
    return this;
  }

   /**
   * Get cpuUsage
   * @return cpuUsage
  **/
  @Schema(description = "")
  public V1FilterIntRange getCpuUsage() {
    return cpuUsage;
  }

  public void setCpuUsage(V1FilterIntRange cpuUsage) {
    this.cpuUsage = cpuUsage;
  }

  public V1SpectroClusterFilterSpec environment(List<V1CloudType> environment) {
    this.environment = environment;
    return this;
  }

  public V1SpectroClusterFilterSpec addEnvironmentItem(V1CloudType environmentItem) {
    if (this.environment == null) {
      this.environment = new ArrayList<V1CloudType>();
    }
    this.environment.add(environmentItem);
    return this;
  }

   /**
   * Deprecated. Use environments
   * @return environment
  **/
  @Schema(description = "Deprecated. Use environments")
  public List<V1CloudType> getEnvironment() {
    return environment;
  }

  public void setEnvironment(List<V1CloudType> environment) {
    this.environment = environment;
  }

  public V1SpectroClusterFilterSpec environments(List<V1CloudType> environments) {
    this.environments = environments;
    return this;
  }

  public V1SpectroClusterFilterSpec addEnvironmentsItem(V1CloudType environmentsItem) {
    if (this.environments == null) {
      this.environments = new ArrayList<V1CloudType>();
    }
    this.environments.add(environmentsItem);
    return this;
  }

   /**
   * Get environments
   * @return environments
  **/
  @Schema(description = "")
  public List<V1CloudType> getEnvironments() {
    return environments;
  }

  public void setEnvironments(List<V1CloudType> environments) {
    this.environments = environments;
  }

  public V1SpectroClusterFilterSpec healthState(HealthStateEnum healthState) {
    this.healthState = healthState;
    return this;
  }

   /**
   * Get healthState
   * @return healthState
  **/
  @Schema(description = "")
  public HealthStateEnum getHealthState() {
    return healthState;
  }

  public void setHealthState(HealthStateEnum healthState) {
    this.healthState = healthState;
  }

  public V1SpectroClusterFilterSpec isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @Schema(description = "")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public V1SpectroClusterFilterSpec isHostCluster(Boolean isHostCluster) {
    this.isHostCluster = isHostCluster;
    return this;
  }

   /**
   * Get isHostCluster
   * @return isHostCluster
  **/
  @Schema(description = "")
  public Boolean isIsHostCluster() {
    return isHostCluster;
  }

  public void setIsHostCluster(Boolean isHostCluster) {
    this.isHostCluster = isHostCluster;
  }

  public V1SpectroClusterFilterSpec memoryUsage(V1FilterNumberRange memoryUsage) {
    this.memoryUsage = memoryUsage;
    return this;
  }

   /**
   * Get memoryUsage
   * @return memoryUsage
  **/
  @Schema(description = "")
  public V1FilterNumberRange getMemoryUsage() {
    return memoryUsage;
  }

  public void setMemoryUsage(V1FilterNumberRange memoryUsage) {
    this.memoryUsage = memoryUsage;
  }

  public V1SpectroClusterFilterSpec metricPeriod(Integer metricPeriod) {
    this.metricPeriod = metricPeriod;
    return this;
  }

   /**
   * Metric period in minutes defines latest metrics by period
   * @return metricPeriod
  **/
  @Schema(description = "Metric period in minutes defines latest metrics by period")
  public Integer getMetricPeriod() {
    return metricPeriod;
  }

  public void setMetricPeriod(Integer metricPeriod) {
    this.metricPeriod = metricPeriod;
  }

  public V1SpectroClusterFilterSpec projectUids(List<String> projectUids) {
    this.projectUids = projectUids;
    return this;
  }

  public V1SpectroClusterFilterSpec addProjectUidsItem(String projectUidsItem) {
    if (this.projectUids == null) {
      this.projectUids = new ArrayList<String>();
    }
    this.projectUids.add(projectUidsItem);
    return this;
  }

   /**
   * Get projectUids
   * @return projectUids
  **/
  @Schema(description = "")
  public List<String> getProjectUids() {
    return projectUids;
  }

  public void setProjectUids(List<String> projectUids) {
    this.projectUids = projectUids;
  }

  public V1SpectroClusterFilterSpec tags(V1FilterArray tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public V1FilterArray getTags() {
    return tags;
  }

  public void setTags(V1FilterArray tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpectroClusterFilterSpec v1SpectroClusterFilterSpec = (V1SpectroClusterFilterSpec) o;
    return Objects.equals(this.cloudAccounts, v1SpectroClusterFilterSpec.cloudAccounts) &&
        Objects.equals(this.clusterName, v1SpectroClusterFilterSpec.clusterName) &&
        Objects.equals(this.clusterProfiles, v1SpectroClusterFilterSpec.clusterProfiles) &&
        Objects.equals(this.clusterState, v1SpectroClusterFilterSpec.clusterState) &&
        Objects.equals(this.clusterStates, v1SpectroClusterFilterSpec.clusterStates) &&
        Objects.equals(this.cpuUsage, v1SpectroClusterFilterSpec.cpuUsage) &&
        Objects.equals(this.environment, v1SpectroClusterFilterSpec.environment) &&
        Objects.equals(this.environments, v1SpectroClusterFilterSpec.environments) &&
        Objects.equals(this.healthState, v1SpectroClusterFilterSpec.healthState) &&
        Objects.equals(this.isDeleted, v1SpectroClusterFilterSpec.isDeleted) &&
        Objects.equals(this.isHostCluster, v1SpectroClusterFilterSpec.isHostCluster) &&
        Objects.equals(this.memoryUsage, v1SpectroClusterFilterSpec.memoryUsage) &&
        Objects.equals(this.metricPeriod, v1SpectroClusterFilterSpec.metricPeriod) &&
        Objects.equals(this.projectUids, v1SpectroClusterFilterSpec.projectUids) &&
        Objects.equals(this.tags, v1SpectroClusterFilterSpec.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudAccounts, clusterName, clusterProfiles, clusterState, clusterStates, cpuUsage, environment, environments, healthState, isDeleted, isHostCluster, memoryUsage, metricPeriod, projectUids, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpectroClusterFilterSpec {\n");
    
    sb.append("    cloudAccounts: ").append(toIndentedString(cloudAccounts)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    clusterProfiles: ").append(toIndentedString(clusterProfiles)).append("\n");
    sb.append("    clusterState: ").append(toIndentedString(clusterState)).append("\n");
    sb.append("    clusterStates: ").append(toIndentedString(clusterStates)).append("\n");
    sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    environments: ").append(toIndentedString(environments)).append("\n");
    sb.append("    healthState: ").append(toIndentedString(healthState)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    isHostCluster: ").append(toIndentedString(isHostCluster)).append("\n");
    sb.append("    memoryUsage: ").append(toIndentedString(memoryUsage)).append("\n");
    sb.append("    metricPeriod: ").append(toIndentedString(metricPeriod)).append("\n");
    sb.append("    projectUids: ").append(toIndentedString(projectUids)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
