/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1Nameserver;
import com.spectrocloud.client.model.V1Pool;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * IPPool defines static IPs available. Gateway, Prefix, Nameserver, if defined, will be default values for all Pools
 */
@Schema(description = "IPPool defines static IPs available. Gateway, Prefix, Nameserver, if defined, will be default values for all Pools")


public class V1IPPool {
  @SerializedName("gateway")
  private String gateway = null;

  @SerializedName("nameserver")
  private V1Nameserver nameserver = null;

  @SerializedName("pools")
  private List<V1Pool> pools = null;

  @SerializedName("prefix")
  private Integer prefix = null;

  @SerializedName("uid")
  private String uid = null;

  public V1IPPool gateway(String gateway) {
    this.gateway = gateway;
    return this;
  }

   /**
   * Gateway is the gateway ip address
   * @return gateway
  **/
  @Schema(description = "Gateway is the gateway ip address")
  public String getGateway() {
    return gateway;
  }

  public void setGateway(String gateway) {
    this.gateway = gateway;
  }

  public V1IPPool nameserver(V1Nameserver nameserver) {
    this.nameserver = nameserver;
    return this;
  }

   /**
   * Get nameserver
   * @return nameserver
  **/
  @Schema(description = "")
  public V1Nameserver getNameserver() {
    return nameserver;
  }

  public void setNameserver(V1Nameserver nameserver) {
    this.nameserver = nameserver;
  }

  public V1IPPool pools(List<V1Pool> pools) {
    this.pools = pools;
    return this;
  }

  public V1IPPool addPoolsItem(V1Pool poolsItem) {
    if (this.pools == null) {
      this.pools = new ArrayList<V1Pool>();
    }
    this.pools.add(poolsItem);
    return this;
  }

   /**
   * Pools contains the list of IP addresses pools
   * @return pools
  **/
  @Schema(description = "Pools contains the list of IP addresses pools")
  public List<V1Pool> getPools() {
    return pools;
  }

  public void setPools(List<V1Pool> pools) {
    this.pools = pools;
  }

  public V1IPPool prefix(Integer prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Prefix is the mask of the network as integer (max 128)
   * @return prefix
  **/
  @Schema(description = "Prefix is the mask of the network as integer (max 128)")
  public Integer getPrefix() {
    return prefix;
  }

  public void setPrefix(Integer prefix) {
    this.prefix = prefix;
  }

  public V1IPPool uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * UID is the UID of this IPPool, used by Hubble
   * @return uid
  **/
  @Schema(description = "UID is the UID of this IPPool, used by Hubble")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1IPPool v1IPPool = (V1IPPool) o;
    return Objects.equals(this.gateway, v1IPPool.gateway) &&
        Objects.equals(this.nameserver, v1IPPool.nameserver) &&
        Objects.equals(this.pools, v1IPPool.pools) &&
        Objects.equals(this.prefix, v1IPPool.prefix) &&
        Objects.equals(this.uid, v1IPPool.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gateway, nameserver, pools, prefix, uid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1IPPool {\n");
    
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    nameserver: ").append(toIndentedString(nameserver)).append("\n");
    sb.append("    pools: ").append(toIndentedString(pools)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
