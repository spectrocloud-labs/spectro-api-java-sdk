/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1InstanceCost;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Cloud Instance type details
 */
@Schema(description = "Cloud Instance type details")


public class V1InstanceType {
  @SerializedName("category")
  private String category = null;

  @SerializedName("cost")
  private V1InstanceCost cost = null;

  @SerializedName("cpu")
  private Double cpu = null;

  @SerializedName("gpu")
  private Double gpu = null;

  @SerializedName("memory")
  private Double memory = null;

  @SerializedName("nonSupportedZones")
  private List<String> nonSupportedZones = null;

  @SerializedName("price")
  private Double price = null;

  @SerializedName("supportedArchitectures")
  private List<String> supportedArchitectures = null;

  @SerializedName("type")
  private String type = null;

  public V1InstanceType category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Category of instance type
   * @return category
  **/
  @Schema(description = "Category of instance type")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public V1InstanceType cost(V1InstanceCost cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @Schema(description = "")
  public V1InstanceCost getCost() {
    return cost;
  }

  public void setCost(V1InstanceCost cost) {
    this.cost = cost;
  }

  public V1InstanceType cpu(Double cpu) {
    this.cpu = cpu;
    return this;
  }

   /**
   * Cpu of instance type
   * @return cpu
  **/
  @Schema(description = "Cpu of instance type")
  public Double getCpu() {
    return cpu;
  }

  public void setCpu(Double cpu) {
    this.cpu = cpu;
  }

  public V1InstanceType gpu(Double gpu) {
    this.gpu = gpu;
    return this;
  }

   /**
   * Gpu of instance type
   * @return gpu
  **/
  @Schema(description = "Gpu of instance type")
  public Double getGpu() {
    return gpu;
  }

  public void setGpu(Double gpu) {
    this.gpu = gpu;
  }

  public V1InstanceType memory(Double memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Memory of instance type
   * @return memory
  **/
  @Schema(description = "Memory of instance type")
  public Double getMemory() {
    return memory;
  }

  public void setMemory(Double memory) {
    this.memory = memory;
  }

  public V1InstanceType nonSupportedZones(List<String> nonSupportedZones) {
    this.nonSupportedZones = nonSupportedZones;
    return this;
  }

  public V1InstanceType addNonSupportedZonesItem(String nonSupportedZonesItem) {
    if (this.nonSupportedZones == null) {
      this.nonSupportedZones = new ArrayList<String>();
    }
    this.nonSupportedZones.add(nonSupportedZonesItem);
    return this;
  }

   /**
   * Non supported zones of the instance in a particular region
   * @return nonSupportedZones
  **/
  @Schema(description = "Non supported zones of the instance in a particular region")
  public List<String> getNonSupportedZones() {
    return nonSupportedZones;
  }

  public void setNonSupportedZones(List<String> nonSupportedZones) {
    this.nonSupportedZones = nonSupportedZones;
  }

  public V1InstanceType price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Price of instance type
   * @return price
  **/
  @Schema(description = "Price of instance type")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public V1InstanceType supportedArchitectures(List<String> supportedArchitectures) {
    this.supportedArchitectures = supportedArchitectures;
    return this;
  }

  public V1InstanceType addSupportedArchitecturesItem(String supportedArchitecturesItem) {
    if (this.supportedArchitectures == null) {
      this.supportedArchitectures = new ArrayList<String>();
    }
    this.supportedArchitectures.add(supportedArchitecturesItem);
    return this;
  }

   /**
   * Supported architecture of the instance
   * @return supportedArchitectures
  **/
  @Schema(description = "Supported architecture of the instance")
  public List<String> getSupportedArchitectures() {
    return supportedArchitectures;
  }

  public void setSupportedArchitectures(List<String> supportedArchitectures) {
    this.supportedArchitectures = supportedArchitectures;
  }

  public V1InstanceType type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of instance type
   * @return type
  **/
  @Schema(description = "Type of instance type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1InstanceType v1InstanceType = (V1InstanceType) o;
    return Objects.equals(this.category, v1InstanceType.category) &&
        Objects.equals(this.cost, v1InstanceType.cost) &&
        Objects.equals(this.cpu, v1InstanceType.cpu) &&
        Objects.equals(this.gpu, v1InstanceType.gpu) &&
        Objects.equals(this.memory, v1InstanceType.memory) &&
        Objects.equals(this.nonSupportedZones, v1InstanceType.nonSupportedZones) &&
        Objects.equals(this.price, v1InstanceType.price) &&
        Objects.equals(this.supportedArchitectures, v1InstanceType.supportedArchitectures) &&
        Objects.equals(this.type, v1InstanceType.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, cost, cpu, gpu, memory, nonSupportedZones, price, supportedArchitectures, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1InstanceType {\n");
    
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    gpu: ").append(toIndentedString(gpu)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    nonSupportedZones: ").append(toIndentedString(nonSupportedZones)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    supportedArchitectures: ").append(toIndentedString(supportedArchitectures)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
