/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1SsoLogins;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Returns the allowed login method and information with the organization details
 */
@Schema(description = "Returns the allowed login method and information with the organization details")


public class V1LoginResponse {
  @SerializedName("appEnv")
  private String appEnv = null;

  /**
   * Describes the default mode of authentication. Possible values [password, sso]
   */
  @JsonAdapter(AuthTypeEnum.Adapter.class)
  public enum AuthTypeEnum {
    PASSWORD("password"),
    SSO("sso");

    private String value;

    AuthTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AuthTypeEnum fromValue(String input) {
      for (AuthTypeEnum b : AuthTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AuthTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AuthTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AuthTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("authType")
  private AuthTypeEnum authType = null;

  @SerializedName("orgName")
  private String orgName = null;

  @SerializedName("redirectUrl")
  private String redirectUrl = null;

  @SerializedName("rootDomain")
  private String rootDomain = null;

  @SerializedName("ssoLogins")
  private V1SsoLogins ssoLogins = null;

  @SerializedName("totalTenants")
  private BigDecimal totalTenants = null;

  public V1LoginResponse appEnv(String appEnv) {
    this.appEnv = appEnv;
    return this;
  }

   /**
   * Describes the env type. Possible values [ saas, self-hosted, quick-start, enterprise, airgap]
   * @return appEnv
  **/
  @Schema(description = "Describes the env type. Possible values [ saas, self-hosted, quick-start, enterprise, airgap]")
  public String getAppEnv() {
    return appEnv;
  }

  public void setAppEnv(String appEnv) {
    this.appEnv = appEnv;
  }

  public V1LoginResponse authType(AuthTypeEnum authType) {
    this.authType = authType;
    return this;
  }

   /**
   * Describes the default mode of authentication. Possible values [password, sso]
   * @return authType
  **/
  @Schema(description = "Describes the default mode of authentication. Possible values [password, sso]")
  public AuthTypeEnum getAuthType() {
    return authType;
  }

  public void setAuthType(AuthTypeEnum authType) {
    this.authType = authType;
  }

  public V1LoginResponse orgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

   /**
   * Organization name.
   * @return orgName
  **/
  @Schema(description = "Organization name.")
  public String getOrgName() {
    return orgName;
  }

  public void setOrgName(String orgName) {
    this.orgName = orgName;
  }

  public V1LoginResponse redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Describes the default redirect Url for authentication. If authType is sso, it will have tenant configured saml/oidc idp url else it will be users organization url
   * @return redirectUrl
  **/
  @Schema(description = "Describes the default redirect Url for authentication. If authType is sso, it will have tenant configured saml/oidc idp url else it will be users organization url")
  public String getRedirectUrl() {
    return redirectUrl;
  }

  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }

  public V1LoginResponse rootDomain(String rootDomain) {
    this.rootDomain = rootDomain;
    return this;
  }

   /**
   * Describes the domain url on which the saas is available
   * @return rootDomain
  **/
  @Schema(description = "Describes the domain url on which the saas is available")
  public String getRootDomain() {
    return rootDomain;
  }

  public void setRootDomain(String rootDomain) {
    this.rootDomain = rootDomain;
  }

  public V1LoginResponse ssoLogins(V1SsoLogins ssoLogins) {
    this.ssoLogins = ssoLogins;
    return this;
  }

   /**
   * Get ssoLogins
   * @return ssoLogins
  **/
  @Schema(description = "")
  public V1SsoLogins getSsoLogins() {
    return ssoLogins;
  }

  public void setSsoLogins(V1SsoLogins ssoLogins) {
    this.ssoLogins = ssoLogins;
  }

  public V1LoginResponse totalTenants(BigDecimal totalTenants) {
    this.totalTenants = totalTenants;
    return this;
  }

   /**
   * Describes the total number of tenant present in the system
   * @return totalTenants
  **/
  @Schema(description = "Describes the total number of tenant present in the system")
  public BigDecimal getTotalTenants() {
    return totalTenants;
  }

  public void setTotalTenants(BigDecimal totalTenants) {
    this.totalTenants = totalTenants;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1LoginResponse v1LoginResponse = (V1LoginResponse) o;
    return Objects.equals(this.appEnv, v1LoginResponse.appEnv) &&
        Objects.equals(this.authType, v1LoginResponse.authType) &&
        Objects.equals(this.orgName, v1LoginResponse.orgName) &&
        Objects.equals(this.redirectUrl, v1LoginResponse.redirectUrl) &&
        Objects.equals(this.rootDomain, v1LoginResponse.rootDomain) &&
        Objects.equals(this.ssoLogins, v1LoginResponse.ssoLogins) &&
        Objects.equals(this.totalTenants, v1LoginResponse.totalTenants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appEnv, authType, orgName, redirectUrl, rootDomain, ssoLogins, totalTenants);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1LoginResponse {\n");
    
    sb.append("    appEnv: ").append(toIndentedString(appEnv)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    orgName: ").append(toIndentedString(orgName)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    rootDomain: ").append(toIndentedString(rootDomain)).append("\n");
    sb.append("    ssoLogins: ").append(toIndentedString(ssoLogins)).append("\n");
    sb.append("    totalTenants: ").append(toIndentedString(totalTenants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
