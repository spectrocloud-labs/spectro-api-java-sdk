/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1CPU;
import com.spectrocloud.client.model.V1Disk;
import com.spectrocloud.client.model.V1GPUDeviceSpec;
import com.spectrocloud.client.model.V1Memory;
import com.spectrocloud.client.model.V1Nic;
import com.spectrocloud.client.model.V1OS;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * DeviceSpec defines the desired state of Device
 */
@Schema(description = "DeviceSpec defines the desired state of Device")


public class V1DeviceSpec {
  @SerializedName("cpu")
  private V1CPU cpu = null;

  @SerializedName("disks")
  private List<V1Disk> disks = null;

  @SerializedName("gpus")
  private List<V1GPUDeviceSpec> gpus = null;

  @SerializedName("memory")
  private V1Memory memory = null;

  @SerializedName("nics")
  private List<V1Nic> nics = null;

  @SerializedName("os")
  private V1OS os = null;

  @SerializedName("type")
  private String type = null;

  public V1DeviceSpec cpu(V1CPU cpu) {
    this.cpu = cpu;
    return this;
  }

   /**
   * Get cpu
   * @return cpu
  **/
  @Schema(description = "")
  public V1CPU getCpu() {
    return cpu;
  }

  public void setCpu(V1CPU cpu) {
    this.cpu = cpu;
  }

  public V1DeviceSpec disks(List<V1Disk> disks) {
    this.disks = disks;
    return this;
  }

  public V1DeviceSpec addDisksItem(V1Disk disksItem) {
    if (this.disks == null) {
      this.disks = new ArrayList<V1Disk>();
    }
    this.disks.add(disksItem);
    return this;
  }

   /**
   * Get disks
   * @return disks
  **/
  @Schema(description = "")
  public List<V1Disk> getDisks() {
    return disks;
  }

  public void setDisks(List<V1Disk> disks) {
    this.disks = disks;
  }

  public V1DeviceSpec gpus(List<V1GPUDeviceSpec> gpus) {
    this.gpus = gpus;
    return this;
  }

  public V1DeviceSpec addGpusItem(V1GPUDeviceSpec gpusItem) {
    if (this.gpus == null) {
      this.gpus = new ArrayList<V1GPUDeviceSpec>();
    }
    this.gpus.add(gpusItem);
    return this;
  }

   /**
   * Get gpus
   * @return gpus
  **/
  @Schema(description = "")
  public List<V1GPUDeviceSpec> getGpus() {
    return gpus;
  }

  public void setGpus(List<V1GPUDeviceSpec> gpus) {
    this.gpus = gpus;
  }

  public V1DeviceSpec memory(V1Memory memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public V1Memory getMemory() {
    return memory;
  }

  public void setMemory(V1Memory memory) {
    this.memory = memory;
  }

  public V1DeviceSpec nics(List<V1Nic> nics) {
    this.nics = nics;
    return this;
  }

  public V1DeviceSpec addNicsItem(V1Nic nicsItem) {
    if (this.nics == null) {
      this.nics = new ArrayList<V1Nic>();
    }
    this.nics.add(nicsItem);
    return this;
  }

   /**
   * Get nics
   * @return nics
  **/
  @Schema(description = "")
  public List<V1Nic> getNics() {
    return nics;
  }

  public void setNics(List<V1Nic> nics) {
    this.nics = nics;
  }

  public V1DeviceSpec os(V1OS os) {
    this.os = os;
    return this;
  }

   /**
   * Get os
   * @return os
  **/
  @Schema(description = "")
  public V1OS getOs() {
    return os;
  }

  public void setOs(V1OS os) {
    this.os = os;
  }

  public V1DeviceSpec type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1DeviceSpec v1DeviceSpec = (V1DeviceSpec) o;
    return Objects.equals(this.cpu, v1DeviceSpec.cpu) &&
        Objects.equals(this.disks, v1DeviceSpec.disks) &&
        Objects.equals(this.gpus, v1DeviceSpec.gpus) &&
        Objects.equals(this.memory, v1DeviceSpec.memory) &&
        Objects.equals(this.nics, v1DeviceSpec.nics) &&
        Objects.equals(this.os, v1DeviceSpec.os) &&
        Objects.equals(this.type, v1DeviceSpec.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpu, disks, gpus, memory, nics, os, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1DeviceSpec {\n");
    
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    disks: ").append(toIndentedString(disks)).append("\n");
    sb.append("    gpus: ").append(toIndentedString(gpus)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    nics: ").append(toIndentedString(nics)).append("\n");
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
