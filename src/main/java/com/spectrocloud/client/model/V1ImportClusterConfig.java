/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ClusterProxySpec;
import com.spectrocloud.client.model.V1FipsConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * V1ImportClusterConfig
 */



public class V1ImportClusterConfig {
  @SerializedName("fips")
  private V1FipsConfig fips = null;

  /**
   * If the importMode is empty then cluster is imported with full permission mode. By default importMode is empty and cluster is imported in full permission mode.
   */
  @JsonAdapter(ImportModeEnum.Adapter.class)
  public enum ImportModeEnum {
    READ_ONLY("read-only");

    private String value;

    ImportModeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ImportModeEnum fromValue(String input) {
      for (ImportModeEnum b : ImportModeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ImportModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ImportModeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ImportModeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ImportModeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("importMode")
  private ImportModeEnum importMode = null;

  @SerializedName("proxy")
  private V1ClusterProxySpec proxy = null;

  public V1ImportClusterConfig fips(V1FipsConfig fips) {
    this.fips = fips;
    return this;
  }

   /**
   * Get fips
   * @return fips
  **/
  @Schema(description = "")
  public V1FipsConfig getFips() {
    return fips;
  }

  public void setFips(V1FipsConfig fips) {
    this.fips = fips;
  }

  public V1ImportClusterConfig importMode(ImportModeEnum importMode) {
    this.importMode = importMode;
    return this;
  }

   /**
   * If the importMode is empty then cluster is imported with full permission mode. By default importMode is empty and cluster is imported in full permission mode.
   * @return importMode
  **/
  @Schema(description = "If the importMode is empty then cluster is imported with full permission mode. By default importMode is empty and cluster is imported in full permission mode.")
  public ImportModeEnum getImportMode() {
    return importMode;
  }

  public void setImportMode(ImportModeEnum importMode) {
    this.importMode = importMode;
  }

  public V1ImportClusterConfig proxy(V1ClusterProxySpec proxy) {
    this.proxy = proxy;
    return this;
  }

   /**
   * Get proxy
   * @return proxy
  **/
  @Schema(description = "")
  public V1ClusterProxySpec getProxy() {
    return proxy;
  }

  public void setProxy(V1ClusterProxySpec proxy) {
    this.proxy = proxy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ImportClusterConfig v1ImportClusterConfig = (V1ImportClusterConfig) o;
    return Objects.equals(this.fips, v1ImportClusterConfig.fips) &&
        Objects.equals(this.importMode, v1ImportClusterConfig.importMode) &&
        Objects.equals(this.proxy, v1ImportClusterConfig.proxy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fips, importMode, proxy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ImportClusterConfig {\n");
    
    sb.append("    fips: ").append(toIndentedString(fips)).append("\n");
    sb.append("    importMode: ").append(toIndentedString(importMode)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
