/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * tier price range
 */
@Schema(description = "tier price range")


public class V1PriceRange {
  @SerializedName("discount")
  private BigDecimal discount = null;

  @SerializedName("startFrom")
  private BigDecimal startFrom = null;

  @SerializedName("unitAmount")
  private BigDecimal unitAmount = null;

  @SerializedName("upTo")
  private BigDecimal upTo = null;

  @SerializedName("upToInfinity")
  private Boolean upToInfinity = null;

  public V1PriceRange discount(BigDecimal discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @Schema(description = "")
  public BigDecimal getDiscount() {
    return discount;
  }

  public void setDiscount(BigDecimal discount) {
    this.discount = discount;
  }

  public V1PriceRange startFrom(BigDecimal startFrom) {
    this.startFrom = startFrom;
    return this;
  }

   /**
   * Get startFrom
   * @return startFrom
  **/
  @Schema(description = "")
  public BigDecimal getStartFrom() {
    return startFrom;
  }

  public void setStartFrom(BigDecimal startFrom) {
    this.startFrom = startFrom;
  }

  public V1PriceRange unitAmount(BigDecimal unitAmount) {
    this.unitAmount = unitAmount;
    return this;
  }

   /**
   * Get unitAmount
   * @return unitAmount
  **/
  @Schema(description = "")
  public BigDecimal getUnitAmount() {
    return unitAmount;
  }

  public void setUnitAmount(BigDecimal unitAmount) {
    this.unitAmount = unitAmount;
  }

  public V1PriceRange upTo(BigDecimal upTo) {
    this.upTo = upTo;
    return this;
  }

   /**
   * Get upTo
   * @return upTo
  **/
  @Schema(description = "")
  public BigDecimal getUpTo() {
    return upTo;
  }

  public void setUpTo(BigDecimal upTo) {
    this.upTo = upTo;
  }

  public V1PriceRange upToInfinity(Boolean upToInfinity) {
    this.upToInfinity = upToInfinity;
    return this;
  }

   /**
   * Get upToInfinity
   * @return upToInfinity
  **/
  @Schema(description = "")
  public Boolean isUpToInfinity() {
    return upToInfinity;
  }

  public void setUpToInfinity(Boolean upToInfinity) {
    this.upToInfinity = upToInfinity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1PriceRange v1PriceRange = (V1PriceRange) o;
    return Objects.equals(this.discount, v1PriceRange.discount) &&
        Objects.equals(this.startFrom, v1PriceRange.startFrom) &&
        Objects.equals(this.unitAmount, v1PriceRange.unitAmount) &&
        Objects.equals(this.upTo, v1PriceRange.upTo) &&
        Objects.equals(this.upToInfinity, v1PriceRange.upToInfinity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discount, startFrom, unitAmount, upTo, upToInfinity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1PriceRange {\n");
    
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    startFrom: ").append(toIndentedString(startFrom)).append("\n");
    sb.append("    unitAmount: ").append(toIndentedString(unitAmount)).append("\n");
    sb.append("    upTo: ").append(toIndentedString(upTo)).append("\n");
    sb.append("    upToInfinity: ").append(toIndentedString(upToInfinity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
