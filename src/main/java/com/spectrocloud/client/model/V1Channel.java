/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1AlertNotificationStatus;
import com.spectrocloud.client.model.V1ChannelHttp;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * V1Channel
 */



public class V1Channel {
  @SerializedName("alertAllUsers")
  private Boolean alertAllUsers = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("http")
  private V1ChannelHttp http = null;

  @SerializedName("identifiers")
  private List<String> identifiers = null;

  @SerializedName("isActive")
  private Boolean isActive = null;

  @SerializedName("status")
  private V1AlertNotificationStatus status = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    EMAIL("email"),
    APP("app"),
    HTTP("http");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("uid")
  private String uid = null;

  public V1Channel alertAllUsers(Boolean alertAllUsers) {
    this.alertAllUsers = alertAllUsers;
    return this;
  }

   /**
   * Get alertAllUsers
   * @return alertAllUsers
  **/
  @Schema(description = "")
  public Boolean isAlertAllUsers() {
    return alertAllUsers;
  }

  public void setAlertAllUsers(Boolean alertAllUsers) {
    this.alertAllUsers = alertAllUsers;
  }

  public V1Channel createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public V1Channel http(V1ChannelHttp http) {
    this.http = http;
    return this;
  }

   /**
   * Get http
   * @return http
  **/
  @Schema(description = "")
  public V1ChannelHttp getHttp() {
    return http;
  }

  public void setHttp(V1ChannelHttp http) {
    this.http = http;
  }

  public V1Channel identifiers(List<String> identifiers) {
    this.identifiers = identifiers;
    return this;
  }

  public V1Channel addIdentifiersItem(String identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<String>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Get identifiers
   * @return identifiers
  **/
  @Schema(description = "")
  public List<String> getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(List<String> identifiers) {
    this.identifiers = identifiers;
  }

  public V1Channel isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @Schema(description = "")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public V1Channel status(V1AlertNotificationStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public V1AlertNotificationStatus getStatus() {
    return status;
  }

  public void setStatus(V1AlertNotificationStatus status) {
    this.status = status;
  }

  public V1Channel type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public V1Channel uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Channel v1Channel = (V1Channel) o;
    return Objects.equals(this.alertAllUsers, v1Channel.alertAllUsers) &&
        Objects.equals(this.createdBy, v1Channel.createdBy) &&
        Objects.equals(this.http, v1Channel.http) &&
        Objects.equals(this.identifiers, v1Channel.identifiers) &&
        Objects.equals(this.isActive, v1Channel.isActive) &&
        Objects.equals(this.status, v1Channel.status) &&
        Objects.equals(this.type, v1Channel.type) &&
        Objects.equals(this.uid, v1Channel.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertAllUsers, createdBy, http, identifiers, isActive, status, type, uid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Channel {\n");
    
    sb.append("    alertAllUsers: ").append(toIndentedString(alertAllUsers)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
