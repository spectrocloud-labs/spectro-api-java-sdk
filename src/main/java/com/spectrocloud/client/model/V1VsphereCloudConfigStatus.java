/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ClusterCondition;
import com.spectrocloud.client.model.V1VsphereImage;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * VsphereCloudConfigStatus defines the observed state of VsphereCloudConfig
 */
@Schema(description = "VsphereCloudConfigStatus defines the observed state of VsphereCloudConfig")


public class V1VsphereCloudConfigStatus {
  @SerializedName("ansibleDigest")
  private String ansibleDigest = null;

  @SerializedName("conditions")
  private List<V1ClusterCondition> conditions = null;

  @SerializedName("isAddonLayer")
  private Boolean isAddonLayer = null;

  @SerializedName("lastOVACreated")
  private String lastOVACreated = null;

  @SerializedName("lastVMExported")
  private String lastVMExported = null;

  @SerializedName("nodeImage")
  private V1VsphereImage nodeImage = null;

  @SerializedName("roleDigest")
  private Map<String, String> roleDigest = null;

  @SerializedName("sourceImageId")
  private String sourceImageId = null;

  @SerializedName("uploadOvaS3")
  private String uploadOvaS3 = null;

  @SerializedName("useCapiImage")
  private Boolean useCapiImage = null;

  public V1VsphereCloudConfigStatus ansibleDigest(String ansibleDigest) {
    this.ansibleDigest = ansibleDigest;
    return this;
  }

   /**
   * Get ansibleDigest
   * @return ansibleDigest
  **/
  @Schema(description = "")
  public String getAnsibleDigest() {
    return ansibleDigest;
  }

  public void setAnsibleDigest(String ansibleDigest) {
    this.ansibleDigest = ansibleDigest;
  }

  public V1VsphereCloudConfigStatus conditions(List<V1ClusterCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public V1VsphereCloudConfigStatus addConditionsItem(V1ClusterCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<V1ClusterCondition>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Get conditions
   * @return conditions
  **/
  @Schema(description = "")
  public List<V1ClusterCondition> getConditions() {
    return conditions;
  }

  public void setConditions(List<V1ClusterCondition> conditions) {
    this.conditions = conditions;
  }

  public V1VsphereCloudConfigStatus isAddonLayer(Boolean isAddonLayer) {
    this.isAddonLayer = isAddonLayer;
    return this;
  }

   /**
   * addon layers present in spc
   * @return isAddonLayer
  **/
  @Schema(description = "addon layers present in spc")
  public Boolean isIsAddonLayer() {
    return isAddonLayer;
  }

  public void setIsAddonLayer(Boolean isAddonLayer) {
    this.isAddonLayer = isAddonLayer;
  }

  public V1VsphereCloudConfigStatus lastOVACreated(String lastOVACreated) {
    this.lastOVACreated = lastOVACreated;
    return this;
  }

   /**
   * Get lastOVACreated
   * @return lastOVACreated
  **/
  @Schema(description = "")
  public String getLastOVACreated() {
    return lastOVACreated;
  }

  public void setLastOVACreated(String lastOVACreated) {
    this.lastOVACreated = lastOVACreated;
  }

  public V1VsphereCloudConfigStatus lastVMExported(String lastVMExported) {
    this.lastVMExported = lastVMExported;
    return this;
  }

   /**
   * Get lastVMExported
   * @return lastVMExported
  **/
  @Schema(description = "")
  public String getLastVMExported() {
    return lastVMExported;
  }

  public void setLastVMExported(String lastVMExported) {
    this.lastVMExported = lastVMExported;
  }

  public V1VsphereCloudConfigStatus nodeImage(V1VsphereImage nodeImage) {
    this.nodeImage = nodeImage;
    return this;
  }

   /**
   * Get nodeImage
   * @return nodeImage
  **/
  @Schema(description = "")
  public V1VsphereImage getNodeImage() {
    return nodeImage;
  }

  public void setNodeImage(V1VsphereImage nodeImage) {
    this.nodeImage = nodeImage;
  }

  public V1VsphereCloudConfigStatus roleDigest(Map<String, String> roleDigest) {
    this.roleDigest = roleDigest;
    return this;
  }

  public V1VsphereCloudConfigStatus putRoleDigestItem(String key, String roleDigestItem) {
    if (this.roleDigest == null) {
      this.roleDigest = new HashMap<String, String>();
    }
    this.roleDigest.put(key, roleDigestItem);
    return this;
  }

   /**
   * this map will be for ansible roles present in eack pack
   * @return roleDigest
  **/
  @Schema(description = "this map will be for ansible roles present in eack pack")
  public Map<String, String> getRoleDigest() {
    return roleDigest;
  }

  public void setRoleDigest(Map<String, String> roleDigest) {
    this.roleDigest = roleDigest;
  }

  public V1VsphereCloudConfigStatus sourceImageId(String sourceImageId) {
    this.sourceImageId = sourceImageId;
    return this;
  }

   /**
   * sourceImageId, it can be from packref&#x27;s annotations or from pack.json
   * @return sourceImageId
  **/
  @Schema(description = "sourceImageId, it can be from packref's annotations or from pack.json")
  public String getSourceImageId() {
    return sourceImageId;
  }

  public void setSourceImageId(String sourceImageId) {
    this.sourceImageId = sourceImageId;
  }

  public V1VsphereCloudConfigStatus uploadOvaS3(String uploadOvaS3) {
    this.uploadOvaS3 = uploadOvaS3;
    return this;
  }

   /**
   * UploadOVAS3 will hold last image name which uploaded to S3
   * @return uploadOvaS3
  **/
  @Schema(description = "UploadOVAS3 will hold last image name which uploaded to S3")
  public String getUploadOvaS3() {
    return uploadOvaS3;
  }

  public void setUploadOvaS3(String uploadOvaS3) {
    this.uploadOvaS3 = uploadOvaS3;
  }

  public V1VsphereCloudConfigStatus useCapiImage(Boolean useCapiImage) {
    this.useCapiImage = useCapiImage;
    return this;
  }

   /**
   * If no ansible roles found in Packs then Mold should tell Drive to use capi image and not create custom image, because there is nothing to add
   * @return useCapiImage
  **/
  @Schema(description = "If no ansible roles found in Packs then Mold should tell Drive to use capi image and not create custom image, because there is nothing to add")
  public Boolean isUseCapiImage() {
    return useCapiImage;
  }

  public void setUseCapiImage(Boolean useCapiImage) {
    this.useCapiImage = useCapiImage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1VsphereCloudConfigStatus v1VsphereCloudConfigStatus = (V1VsphereCloudConfigStatus) o;
    return Objects.equals(this.ansibleDigest, v1VsphereCloudConfigStatus.ansibleDigest) &&
        Objects.equals(this.conditions, v1VsphereCloudConfigStatus.conditions) &&
        Objects.equals(this.isAddonLayer, v1VsphereCloudConfigStatus.isAddonLayer) &&
        Objects.equals(this.lastOVACreated, v1VsphereCloudConfigStatus.lastOVACreated) &&
        Objects.equals(this.lastVMExported, v1VsphereCloudConfigStatus.lastVMExported) &&
        Objects.equals(this.nodeImage, v1VsphereCloudConfigStatus.nodeImage) &&
        Objects.equals(this.roleDigest, v1VsphereCloudConfigStatus.roleDigest) &&
        Objects.equals(this.sourceImageId, v1VsphereCloudConfigStatus.sourceImageId) &&
        Objects.equals(this.uploadOvaS3, v1VsphereCloudConfigStatus.uploadOvaS3) &&
        Objects.equals(this.useCapiImage, v1VsphereCloudConfigStatus.useCapiImage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ansibleDigest, conditions, isAddonLayer, lastOVACreated, lastVMExported, nodeImage, roleDigest, sourceImageId, uploadOvaS3, useCapiImage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1VsphereCloudConfigStatus {\n");
    
    sb.append("    ansibleDigest: ").append(toIndentedString(ansibleDigest)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    isAddonLayer: ").append(toIndentedString(isAddonLayer)).append("\n");
    sb.append("    lastOVACreated: ").append(toIndentedString(lastOVACreated)).append("\n");
    sb.append("    lastVMExported: ").append(toIndentedString(lastVMExported)).append("\n");
    sb.append("    nodeImage: ").append(toIndentedString(nodeImage)).append("\n");
    sb.append("    roleDigest: ").append(toIndentedString(roleDigest)).append("\n");
    sb.append("    sourceImageId: ").append(toIndentedString(sourceImageId)).append("\n");
    sb.append("    uploadOvaS3: ").append(toIndentedString(uploadOvaS3)).append("\n");
    sb.append("    useCapiImage: ").append(toIndentedString(useCapiImage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
