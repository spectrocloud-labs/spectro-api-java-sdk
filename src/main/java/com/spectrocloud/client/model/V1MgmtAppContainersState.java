/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1MgmtAppContainersStateRunning;
import com.spectrocloud.client.model.V1MgmtAppContainersStateTerminated;
import com.spectrocloud.client.model.V1MgmtAppContainersStateWaiting;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * V1MgmtAppContainersState
 */



public class V1MgmtAppContainersState {
  @SerializedName("running")
  private V1MgmtAppContainersStateRunning running = null;

  @SerializedName("terminated")
  private V1MgmtAppContainersStateTerminated terminated = null;

  @SerializedName("waiting")
  private V1MgmtAppContainersStateWaiting waiting = null;

  public V1MgmtAppContainersState running(V1MgmtAppContainersStateRunning running) {
    this.running = running;
    return this;
  }

   /**
   * Get running
   * @return running
  **/
  @Schema(description = "")
  public V1MgmtAppContainersStateRunning getRunning() {
    return running;
  }

  public void setRunning(V1MgmtAppContainersStateRunning running) {
    this.running = running;
  }

  public V1MgmtAppContainersState terminated(V1MgmtAppContainersStateTerminated terminated) {
    this.terminated = terminated;
    return this;
  }

   /**
   * Get terminated
   * @return terminated
  **/
  @Schema(description = "")
  public V1MgmtAppContainersStateTerminated getTerminated() {
    return terminated;
  }

  public void setTerminated(V1MgmtAppContainersStateTerminated terminated) {
    this.terminated = terminated;
  }

  public V1MgmtAppContainersState waiting(V1MgmtAppContainersStateWaiting waiting) {
    this.waiting = waiting;
    return this;
  }

   /**
   * Get waiting
   * @return waiting
  **/
  @Schema(description = "")
  public V1MgmtAppContainersStateWaiting getWaiting() {
    return waiting;
  }

  public void setWaiting(V1MgmtAppContainersStateWaiting waiting) {
    this.waiting = waiting;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1MgmtAppContainersState v1MgmtAppContainersState = (V1MgmtAppContainersState) o;
    return Objects.equals(this.running, v1MgmtAppContainersState.running) &&
        Objects.equals(this.terminated, v1MgmtAppContainersState.terminated) &&
        Objects.equals(this.waiting, v1MgmtAppContainersState.waiting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(running, terminated, waiting);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1MgmtAppContainersState {\n");
    
    sb.append("    running: ").append(toIndentedString(running)).append("\n");
    sb.append("    terminated: ").append(toIndentedString(terminated)).append("\n");
    sb.append("    waiting: ").append(toIndentedString(waiting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
