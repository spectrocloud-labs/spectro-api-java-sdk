/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1CloudType;
import com.spectrocloud.client.model.V1FilterString;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Spectro cluster filter spec
 */
@Schema(description = "Spectro cluster filter spec")


public class V1SpectroClusterMetadataFilterSpec {
  @SerializedName("environment")
  private V1CloudType environment = null;

  @SerializedName("includeNested")
  private Boolean includeNested = false;

  @SerializedName("isAlloy")
  private Boolean isAlloy = false;

  @SerializedName("isImportReadOnly")
  private Boolean isImportReadOnly = true;

  @SerializedName("isImported")
  private Boolean isImported = false;

  @SerializedName("name")
  private V1FilterString name = null;

  @SerializedName("state")
  private String state = null;

  public V1SpectroClusterMetadataFilterSpec environment(V1CloudType environment) {
    this.environment = environment;
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @Schema(description = "")
  public V1CloudType getEnvironment() {
    return environment;
  }

  public void setEnvironment(V1CloudType environment) {
    this.environment = environment;
  }

  public V1SpectroClusterMetadataFilterSpec includeNested(Boolean includeNested) {
    this.includeNested = includeNested;
    return this;
  }

   /**
   * Get includeNested
   * @return includeNested
  **/
  @Schema(description = "")
  public Boolean isIncludeNested() {
    return includeNested;
  }

  public void setIncludeNested(Boolean includeNested) {
    this.includeNested = includeNested;
  }

  public V1SpectroClusterMetadataFilterSpec isAlloy(Boolean isAlloy) {
    this.isAlloy = isAlloy;
    return this;
  }

   /**
   * isAlloy is renamed to isImported
   * @return isAlloy
  **/
  @Schema(description = "isAlloy is renamed to isImported")
  public Boolean isIsAlloy() {
    return isAlloy;
  }

  public void setIsAlloy(Boolean isAlloy) {
    this.isAlloy = isAlloy;
  }

  public V1SpectroClusterMetadataFilterSpec isImportReadOnly(Boolean isImportReadOnly) {
    this.isImportReadOnly = isImportReadOnly;
    return this;
  }

   /**
   * Get isImportReadOnly
   * @return isImportReadOnly
  **/
  @Schema(description = "")
  public Boolean isIsImportReadOnly() {
    return isImportReadOnly;
  }

  public void setIsImportReadOnly(Boolean isImportReadOnly) {
    this.isImportReadOnly = isImportReadOnly;
  }

  public V1SpectroClusterMetadataFilterSpec isImported(Boolean isImported) {
    this.isImported = isImported;
    return this;
  }

   /**
   * Get isImported
   * @return isImported
  **/
  @Schema(description = "")
  public Boolean isIsImported() {
    return isImported;
  }

  public void setIsImported(Boolean isImported) {
    this.isImported = isImported;
  }

  public V1SpectroClusterMetadataFilterSpec name(V1FilterString name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public V1FilterString getName() {
    return name;
  }

  public void setName(V1FilterString name) {
    this.name = name;
  }

  public V1SpectroClusterMetadataFilterSpec state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpectroClusterMetadataFilterSpec v1SpectroClusterMetadataFilterSpec = (V1SpectroClusterMetadataFilterSpec) o;
    return Objects.equals(this.environment, v1SpectroClusterMetadataFilterSpec.environment) &&
        Objects.equals(this.includeNested, v1SpectroClusterMetadataFilterSpec.includeNested) &&
        Objects.equals(this.isAlloy, v1SpectroClusterMetadataFilterSpec.isAlloy) &&
        Objects.equals(this.isImportReadOnly, v1SpectroClusterMetadataFilterSpec.isImportReadOnly) &&
        Objects.equals(this.isImported, v1SpectroClusterMetadataFilterSpec.isImported) &&
        Objects.equals(this.name, v1SpectroClusterMetadataFilterSpec.name) &&
        Objects.equals(this.state, v1SpectroClusterMetadataFilterSpec.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environment, includeNested, isAlloy, isImportReadOnly, isImported, name, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpectroClusterMetadataFilterSpec {\n");
    
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    includeNested: ").append(toIndentedString(includeNested)).append("\n");
    sb.append("    isAlloy: ").append(toIndentedString(isAlloy)).append("\n");
    sb.append("    isImportReadOnly: ").append(toIndentedString(isImportReadOnly)).append("\n");
    sb.append("    isImported: ").append(toIndentedString(isImported)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
