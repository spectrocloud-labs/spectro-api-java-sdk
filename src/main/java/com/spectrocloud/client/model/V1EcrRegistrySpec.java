/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1AwsCloudAccount;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Ecr registry spec
 */
@Schema(description = "Ecr registry spec")


public class V1EcrRegistrySpec {
  @SerializedName("credentials")
  private V1AwsCloudAccount credentials = null;

  @SerializedName("defaultRegion")
  private String defaultRegion = null;

  @SerializedName("endpoint")
  private String endpoint = null;

  @SerializedName("isPrivate")
  private Boolean isPrivate = null;

  @SerializedName("scope")
  private String scope = null;

  public V1EcrRegistrySpec credentials(V1AwsCloudAccount credentials) {
    this.credentials = credentials;
    return this;
  }

   /**
   * Get credentials
   * @return credentials
  **/
  @Schema(description = "")
  public V1AwsCloudAccount getCredentials() {
    return credentials;
  }

  public void setCredentials(V1AwsCloudAccount credentials) {
    this.credentials = credentials;
  }

  public V1EcrRegistrySpec defaultRegion(String defaultRegion) {
    this.defaultRegion = defaultRegion;
    return this;
  }

   /**
   * Get defaultRegion
   * @return defaultRegion
  **/
  @Schema(description = "")
  public String getDefaultRegion() {
    return defaultRegion;
  }

  public void setDefaultRegion(String defaultRegion) {
    this.defaultRegion = defaultRegion;
  }

  public V1EcrRegistrySpec endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Get endpoint
   * @return endpoint
  **/
  @Schema(required = true, description = "")
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public V1EcrRegistrySpec isPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
    return this;
  }

   /**
   * Get isPrivate
   * @return isPrivate
  **/
  @Schema(required = true, description = "")
  public Boolean isIsPrivate() {
    return isPrivate;
  }

  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }

  public V1EcrRegistrySpec scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(description = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1EcrRegistrySpec v1EcrRegistrySpec = (V1EcrRegistrySpec) o;
    return Objects.equals(this.credentials, v1EcrRegistrySpec.credentials) &&
        Objects.equals(this.defaultRegion, v1EcrRegistrySpec.defaultRegion) &&
        Objects.equals(this.endpoint, v1EcrRegistrySpec.endpoint) &&
        Objects.equals(this.isPrivate, v1EcrRegistrySpec.isPrivate) &&
        Objects.equals(this.scope, v1EcrRegistrySpec.scope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credentials, defaultRegion, endpoint, isPrivate, scope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1EcrRegistrySpec {\n");
    
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    defaultRegion: ").append(toIndentedString(defaultRegion)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
