/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1CloudType;
import com.spectrocloud.client.model.V1ClusterConfig;
import com.spectrocloud.client.model.V1ClusterProfileTemplate;
import com.spectrocloud.client.model.V1ObjectReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * SpectroClusterSpec defines the desired state of SpectroCluster
 */
@Schema(description = "SpectroClusterSpec defines the desired state of SpectroCluster")


public class V1SpectroClusterSpec {
  @SerializedName("cloudConfigRef")
  private V1ObjectReference cloudConfigRef = null;

  @SerializedName("cloudType")
  private V1CloudType cloudType = null;

  @SerializedName("clusterConfig")
  private V1ClusterConfig clusterConfig = null;

  @SerializedName("clusterProfileTemplates")
  private List<V1ClusterProfileTemplate> clusterProfileTemplates = null;

  /**
   * Gets or Sets clusterType
   */
  @JsonAdapter(ClusterTypeEnum.Adapter.class)
  public enum ClusterTypeEnum {
    PUREMANAGE("PureManage"),
    ALLOYMONITOR("AlloyMonitor"),
    ALLOYASSIST("AlloyAssist"),
    ALLOYEXTEND("AlloyExtend");

    private String value;

    ClusterTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ClusterTypeEnum fromValue(String input) {
      for (ClusterTypeEnum b : ClusterTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ClusterTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ClusterTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ClusterTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ClusterTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("clusterType")
  private ClusterTypeEnum clusterType = null;

  public V1SpectroClusterSpec cloudConfigRef(V1ObjectReference cloudConfigRef) {
    this.cloudConfigRef = cloudConfigRef;
    return this;
  }

   /**
   * Get cloudConfigRef
   * @return cloudConfigRef
  **/
  @Schema(description = "")
  public V1ObjectReference getCloudConfigRef() {
    return cloudConfigRef;
  }

  public void setCloudConfigRef(V1ObjectReference cloudConfigRef) {
    this.cloudConfigRef = cloudConfigRef;
  }

  public V1SpectroClusterSpec cloudType(V1CloudType cloudType) {
    this.cloudType = cloudType;
    return this;
  }

   /**
   * Get cloudType
   * @return cloudType
  **/
  @Schema(description = "")
  public V1CloudType getCloudType() {
    return cloudType;
  }

  public void setCloudType(V1CloudType cloudType) {
    this.cloudType = cloudType;
  }

  public V1SpectroClusterSpec clusterConfig(V1ClusterConfig clusterConfig) {
    this.clusterConfig = clusterConfig;
    return this;
  }

   /**
   * Get clusterConfig
   * @return clusterConfig
  **/
  @Schema(description = "")
  public V1ClusterConfig getClusterConfig() {
    return clusterConfig;
  }

  public void setClusterConfig(V1ClusterConfig clusterConfig) {
    this.clusterConfig = clusterConfig;
  }

  public V1SpectroClusterSpec clusterProfileTemplates(List<V1ClusterProfileTemplate> clusterProfileTemplates) {
    this.clusterProfileTemplates = clusterProfileTemplates;
    return this;
  }

  public V1SpectroClusterSpec addClusterProfileTemplatesItem(V1ClusterProfileTemplate clusterProfileTemplatesItem) {
    if (this.clusterProfileTemplates == null) {
      this.clusterProfileTemplates = new ArrayList<V1ClusterProfileTemplate>();
    }
    this.clusterProfileTemplates.add(clusterProfileTemplatesItem);
    return this;
  }

   /**
   * When a cluster created from a clusterprofile at t1, ClusterProfileTemplate is a copy of the draft version or latest published version of the clusterprofileSpec.clusterprofileTemplate then clusterprofile may evolve to v2 at t2, but before user decide to upgrade the cluster, it will stay as it is when user decide to upgrade, clusterProfileTemplate will be updated from the clusterprofile pointed by ClusterProfileRef
   * @return clusterProfileTemplates
  **/
  @Schema(description = "When a cluster created from a clusterprofile at t1, ClusterProfileTemplate is a copy of the draft version or latest published version of the clusterprofileSpec.clusterprofileTemplate then clusterprofile may evolve to v2 at t2, but before user decide to upgrade the cluster, it will stay as it is when user decide to upgrade, clusterProfileTemplate will be updated from the clusterprofile pointed by ClusterProfileRef")
  public List<V1ClusterProfileTemplate> getClusterProfileTemplates() {
    return clusterProfileTemplates;
  }

  public void setClusterProfileTemplates(List<V1ClusterProfileTemplate> clusterProfileTemplates) {
    this.clusterProfileTemplates = clusterProfileTemplates;
  }

  public V1SpectroClusterSpec clusterType(ClusterTypeEnum clusterType) {
    this.clusterType = clusterType;
    return this;
  }

   /**
   * Get clusterType
   * @return clusterType
  **/
  @Schema(description = "")
  public ClusterTypeEnum getClusterType() {
    return clusterType;
  }

  public void setClusterType(ClusterTypeEnum clusterType) {
    this.clusterType = clusterType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpectroClusterSpec v1SpectroClusterSpec = (V1SpectroClusterSpec) o;
    return Objects.equals(this.cloudConfigRef, v1SpectroClusterSpec.cloudConfigRef) &&
        Objects.equals(this.cloudType, v1SpectroClusterSpec.cloudType) &&
        Objects.equals(this.clusterConfig, v1SpectroClusterSpec.clusterConfig) &&
        Objects.equals(this.clusterProfileTemplates, v1SpectroClusterSpec.clusterProfileTemplates) &&
        Objects.equals(this.clusterType, v1SpectroClusterSpec.clusterType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudConfigRef, cloudType, clusterConfig, clusterProfileTemplates, clusterType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpectroClusterSpec {\n");
    
    sb.append("    cloudConfigRef: ").append(toIndentedString(cloudConfigRef)).append("\n");
    sb.append("    cloudType: ").append(toIndentedString(cloudType)).append("\n");
    sb.append("    clusterConfig: ").append(toIndentedString(clusterConfig)).append("\n");
    sb.append("    clusterProfileTemplates: ").append(toIndentedString(clusterProfileTemplates)).append("\n");
    sb.append("    clusterType: ").append(toIndentedString(clusterType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
