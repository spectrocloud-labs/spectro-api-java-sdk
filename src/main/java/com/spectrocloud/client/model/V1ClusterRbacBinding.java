/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ClusterRbacSubjects;
import com.spectrocloud.client.model.V1ClusterRoleRef;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Cluster RBAC binding
 */
@Schema(description = "Cluster RBAC binding")


public class V1ClusterRbacBinding {
  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("role")
  private V1ClusterRoleRef role = null;

  @SerializedName("subjects")
  private List<V1ClusterRbacSubjects> subjects = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ROLEBINDING("RoleBinding"),
    CLUSTERROLEBINDING("ClusterRoleBinding");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public V1ClusterRbacBinding namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @Schema(description = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public V1ClusterRbacBinding role(V1ClusterRoleRef role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @Schema(description = "")
  public V1ClusterRoleRef getRole() {
    return role;
  }

  public void setRole(V1ClusterRoleRef role) {
    this.role = role;
  }

  public V1ClusterRbacBinding subjects(List<V1ClusterRbacSubjects> subjects) {
    this.subjects = subjects;
    return this;
  }

  public V1ClusterRbacBinding addSubjectsItem(V1ClusterRbacSubjects subjectsItem) {
    if (this.subjects == null) {
      this.subjects = new ArrayList<V1ClusterRbacSubjects>();
    }
    this.subjects.add(subjectsItem);
    return this;
  }

   /**
   * Get subjects
   * @return subjects
  **/
  @Schema(description = "")
  public List<V1ClusterRbacSubjects> getSubjects() {
    return subjects;
  }

  public void setSubjects(List<V1ClusterRbacSubjects> subjects) {
    this.subjects = subjects;
  }

  public V1ClusterRbacBinding type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ClusterRbacBinding v1ClusterRbacBinding = (V1ClusterRbacBinding) o;
    return Objects.equals(this.namespace, v1ClusterRbacBinding.namespace) &&
        Objects.equals(this.role, v1ClusterRbacBinding.role) &&
        Objects.equals(this.subjects, v1ClusterRbacBinding.subjects) &&
        Objects.equals(this.type, v1ClusterRbacBinding.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(namespace, role, subjects, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ClusterRbacBinding {\n");
    
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    subjects: ").append(toIndentedString(subjects)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
