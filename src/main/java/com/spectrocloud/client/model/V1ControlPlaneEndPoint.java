/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * V1ControlPlaneEndPoint
 */



public class V1ControlPlaneEndPoint {
  @SerializedName("ddnsSearchDomain")
  private String ddnsSearchDomain = null;

  @SerializedName("host")
  private String host = null;

  /**
   * VIP or External
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    VIP("VIP"),
    EXTERNAL("External"),
    DDNS("DDNS");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public V1ControlPlaneEndPoint ddnsSearchDomain(String ddnsSearchDomain) {
    this.ddnsSearchDomain = ddnsSearchDomain;
    return this;
  }

   /**
   * DDNSSearchDomain is the search domain used for resolving IP addresses when the EndpointType is DDNS. This search domain is appended to the generated Hostname to obtain the complete DNS name for the endpoint. If Host is already a DDNS FQDN, DDNSSearchDomain is not required
   * @return ddnsSearchDomain
  **/
  @Schema(description = "DDNSSearchDomain is the search domain used for resolving IP addresses when the EndpointType is DDNS. This search domain is appended to the generated Hostname to obtain the complete DNS name for the endpoint. If Host is already a DDNS FQDN, DDNSSearchDomain is not required")
  public String getDdnsSearchDomain() {
    return ddnsSearchDomain;
  }

  public void setDdnsSearchDomain(String ddnsSearchDomain) {
    this.ddnsSearchDomain = ddnsSearchDomain;
  }

  public V1ControlPlaneEndPoint host(String host) {
    this.host = host;
    return this;
  }

   /**
   * IP or FQDN(External/DDNS)
   * @return host
  **/
  @Schema(description = "IP or FQDN(External/DDNS)")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public V1ControlPlaneEndPoint type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * VIP or External
   * @return type
  **/
  @Schema(description = "VIP or External")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ControlPlaneEndPoint v1ControlPlaneEndPoint = (V1ControlPlaneEndPoint) o;
    return Objects.equals(this.ddnsSearchDomain, v1ControlPlaneEndPoint.ddnsSearchDomain) &&
        Objects.equals(this.host, v1ControlPlaneEndPoint.host) &&
        Objects.equals(this.type, v1ControlPlaneEndPoint.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ddnsSearchDomain, host, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ControlPlaneEndPoint {\n");
    
    sb.append("    ddnsSearchDomain: ").append(toIndentedString(ddnsSearchDomain)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
