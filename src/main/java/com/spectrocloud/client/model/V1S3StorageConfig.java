/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1AwsCloudAccount;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * S3 storage config object
 */
@Schema(description = "S3 storage config object")


public class V1S3StorageConfig {
  @SerializedName("bucketName")
  private String bucketName = null;

  @SerializedName("caCert")
  private String caCert = null;

  @SerializedName("credentials")
  private V1AwsCloudAccount credentials = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("s3ForcePathStyle")
  private Boolean s3ForcePathStyle = true;

  @SerializedName("s3Url")
  private String s3Url = null;

  @SerializedName("useRestic")
  private Boolean useRestic = true;

  public V1S3StorageConfig bucketName(String bucketName) {
    this.bucketName = bucketName;
    return this;
  }

   /**
   * S3 storage bucket name
   * @return bucketName
  **/
  @Schema(required = true, description = "S3 storage bucket name")
  public String getBucketName() {
    return bucketName;
  }

  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }

  public V1S3StorageConfig caCert(String caCert) {
    this.caCert = caCert;
    return this;
  }

   /**
   * CA Certificate
   * @return caCert
  **/
  @Schema(description = "CA Certificate")
  public String getCaCert() {
    return caCert;
  }

  public void setCaCert(String caCert) {
    this.caCert = caCert;
  }

  public V1S3StorageConfig credentials(V1AwsCloudAccount credentials) {
    this.credentials = credentials;
    return this;
  }

   /**
   * Get credentials
   * @return credentials
  **/
  @Schema(required = true, description = "")
  public V1AwsCloudAccount getCredentials() {
    return credentials;
  }

  public void setCredentials(V1AwsCloudAccount credentials) {
    this.credentials = credentials;
  }

  public V1S3StorageConfig region(String region) {
    this.region = region;
    return this;
  }

   /**
   * AWS region name
   * @return region
  **/
  @Schema(required = true, description = "AWS region name")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public V1S3StorageConfig s3ForcePathStyle(Boolean s3ForcePathStyle) {
    this.s3ForcePathStyle = s3ForcePathStyle;
    return this;
  }

   /**
   * Get s3ForcePathStyle
   * @return s3ForcePathStyle
  **/
  @Schema(description = "")
  public Boolean isS3ForcePathStyle() {
    return s3ForcePathStyle;
  }

  public void setS3ForcePathStyle(Boolean s3ForcePathStyle) {
    this.s3ForcePathStyle = s3ForcePathStyle;
  }

  public V1S3StorageConfig s3Url(String s3Url) {
    this.s3Url = s3Url;
    return this;
  }

   /**
   * Custom hosted S3 URL
   * @return s3Url
  **/
  @Schema(description = "Custom hosted S3 URL")
  public String getS3Url() {
    return s3Url;
  }

  public void setS3Url(String s3Url) {
    this.s3Url = s3Url;
  }

  public V1S3StorageConfig useRestic(Boolean useRestic) {
    this.useRestic = useRestic;
    return this;
  }

   /**
   * Set to &#x27;true&#x27;, to use Restic plugin for the backup
   * @return useRestic
  **/
  @Schema(description = "Set to 'true', to use Restic plugin for the backup")
  public Boolean isUseRestic() {
    return useRestic;
  }

  public void setUseRestic(Boolean useRestic) {
    this.useRestic = useRestic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1S3StorageConfig v1S3StorageConfig = (V1S3StorageConfig) o;
    return Objects.equals(this.bucketName, v1S3StorageConfig.bucketName) &&
        Objects.equals(this.caCert, v1S3StorageConfig.caCert) &&
        Objects.equals(this.credentials, v1S3StorageConfig.credentials) &&
        Objects.equals(this.region, v1S3StorageConfig.region) &&
        Objects.equals(this.s3ForcePathStyle, v1S3StorageConfig.s3ForcePathStyle) &&
        Objects.equals(this.s3Url, v1S3StorageConfig.s3Url) &&
        Objects.equals(this.useRestic, v1S3StorageConfig.useRestic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketName, caCert, credentials, region, s3ForcePathStyle, s3Url, useRestic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1S3StorageConfig {\n");
    
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    caCert: ").append(toIndentedString(caCert)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    s3ForcePathStyle: ").append(toIndentedString(s3ForcePathStyle)).append("\n");
    sb.append("    s3Url: ").append(toIndentedString(s3Url)).append("\n");
    sb.append("    useRestic: ").append(toIndentedString(useRestic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
