/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ClusterImport;
import com.spectrocloud.client.model.V1ClusterMetaSpecLocation;
import com.spectrocloud.client.model.V1ResourceCost;
import com.spectrocloud.client.model.V1SpectroClusterHealthStatus;
import com.spectrocloud.client.model.V1SpectroClusterMetrics;
import com.spectrocloud.client.model.V1SpectroClusterNotifications;
import com.spectrocloud.client.model.V1Virtual;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Spectro cluster status summary
 */
@Schema(description = "Spectro cluster status summary")


public class V1SpectroClusterSummaryStatus {
  @SerializedName("clusterImport")
  private V1ClusterImport clusterImport = null;

  @SerializedName("cost")
  private V1ResourceCost cost = null;

  @SerializedName("health")
  private V1SpectroClusterHealthStatus health = null;

  @SerializedName("hourlyRate")
  private V1ResourceCost hourlyRate = null;

  @SerializedName("location")
  private V1ClusterMetaSpecLocation location = null;

  @SerializedName("metrics")
  private V1SpectroClusterMetrics metrics = null;

  @SerializedName("nested")
  private V1Virtual nested = null;

  @SerializedName("notifications")
  private V1SpectroClusterNotifications notifications = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("virtual")
  private V1Virtual virtual = null;

  public V1SpectroClusterSummaryStatus clusterImport(V1ClusterImport clusterImport) {
    this.clusterImport = clusterImport;
    return this;
  }

   /**
   * Get clusterImport
   * @return clusterImport
  **/
  @Schema(description = "")
  public V1ClusterImport getClusterImport() {
    return clusterImport;
  }

  public void setClusterImport(V1ClusterImport clusterImport) {
    this.clusterImport = clusterImport;
  }

  public V1SpectroClusterSummaryStatus cost(V1ResourceCost cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @Schema(description = "")
  public V1ResourceCost getCost() {
    return cost;
  }

  public void setCost(V1ResourceCost cost) {
    this.cost = cost;
  }

  public V1SpectroClusterSummaryStatus health(V1SpectroClusterHealthStatus health) {
    this.health = health;
    return this;
  }

   /**
   * Get health
   * @return health
  **/
  @Schema(description = "")
  public V1SpectroClusterHealthStatus getHealth() {
    return health;
  }

  public void setHealth(V1SpectroClusterHealthStatus health) {
    this.health = health;
  }

  public V1SpectroClusterSummaryStatus hourlyRate(V1ResourceCost hourlyRate) {
    this.hourlyRate = hourlyRate;
    return this;
  }

   /**
   * Get hourlyRate
   * @return hourlyRate
  **/
  @Schema(description = "")
  public V1ResourceCost getHourlyRate() {
    return hourlyRate;
  }

  public void setHourlyRate(V1ResourceCost hourlyRate) {
    this.hourlyRate = hourlyRate;
  }

  public V1SpectroClusterSummaryStatus location(V1ClusterMetaSpecLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public V1ClusterMetaSpecLocation getLocation() {
    return location;
  }

  public void setLocation(V1ClusterMetaSpecLocation location) {
    this.location = location;
  }

  public V1SpectroClusterSummaryStatus metrics(V1SpectroClusterMetrics metrics) {
    this.metrics = metrics;
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @Schema(description = "")
  public V1SpectroClusterMetrics getMetrics() {
    return metrics;
  }

  public void setMetrics(V1SpectroClusterMetrics metrics) {
    this.metrics = metrics;
  }

  public V1SpectroClusterSummaryStatus nested(V1Virtual nested) {
    this.nested = nested;
    return this;
  }

   /**
   * Get nested
   * @return nested
  **/
  @Schema(description = "")
  public V1Virtual getNested() {
    return nested;
  }

  public void setNested(V1Virtual nested) {
    this.nested = nested;
  }

  public V1SpectroClusterSummaryStatus notifications(V1SpectroClusterNotifications notifications) {
    this.notifications = notifications;
    return this;
  }

   /**
   * Get notifications
   * @return notifications
  **/
  @Schema(description = "")
  public V1SpectroClusterNotifications getNotifications() {
    return notifications;
  }

  public void setNotifications(V1SpectroClusterNotifications notifications) {
    this.notifications = notifications;
  }

  public V1SpectroClusterSummaryStatus state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public V1SpectroClusterSummaryStatus virtual(V1Virtual virtual) {
    this.virtual = virtual;
    return this;
  }

   /**
   * Get virtual
   * @return virtual
  **/
  @Schema(description = "")
  public V1Virtual getVirtual() {
    return virtual;
  }

  public void setVirtual(V1Virtual virtual) {
    this.virtual = virtual;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpectroClusterSummaryStatus v1SpectroClusterSummaryStatus = (V1SpectroClusterSummaryStatus) o;
    return Objects.equals(this.clusterImport, v1SpectroClusterSummaryStatus.clusterImport) &&
        Objects.equals(this.cost, v1SpectroClusterSummaryStatus.cost) &&
        Objects.equals(this.health, v1SpectroClusterSummaryStatus.health) &&
        Objects.equals(this.hourlyRate, v1SpectroClusterSummaryStatus.hourlyRate) &&
        Objects.equals(this.location, v1SpectroClusterSummaryStatus.location) &&
        Objects.equals(this.metrics, v1SpectroClusterSummaryStatus.metrics) &&
        Objects.equals(this.nested, v1SpectroClusterSummaryStatus.nested) &&
        Objects.equals(this.notifications, v1SpectroClusterSummaryStatus.notifications) &&
        Objects.equals(this.state, v1SpectroClusterSummaryStatus.state) &&
        Objects.equals(this.virtual, v1SpectroClusterSummaryStatus.virtual);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterImport, cost, health, hourlyRate, location, metrics, nested, notifications, state, virtual);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpectroClusterSummaryStatus {\n");
    
    sb.append("    clusterImport: ").append(toIndentedString(clusterImport)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    hourlyRate: ").append(toIndentedString(hourlyRate)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    nested: ").append(toIndentedString(nested)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    virtual: ").append(toIndentedString(virtual)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
