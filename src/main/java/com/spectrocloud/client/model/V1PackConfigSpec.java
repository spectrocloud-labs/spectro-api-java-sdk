/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1PackManifestRef;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * V1PackConfigSpec
 */



public class V1PackConfigSpec {
  @SerializedName("associatedObject")
  private String associatedObject = null;

  @SerializedName("isValuesOverridden")
  private Boolean isValuesOverridden = null;

  @SerializedName("manifests")
  private List<V1PackManifestRef> manifests = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("packUid")
  private String packUid = null;

  @SerializedName("scope")
  private String scope = null;

  @SerializedName("tag")
  private String tag = null;

  @SerializedName("values")
  private String values = null;

  @SerializedName("version")
  private String version = null;

  public V1PackConfigSpec associatedObject(String associatedObject) {
    this.associatedObject = associatedObject;
    return this;
  }

   /**
   * Get associatedObject
   * @return associatedObject
  **/
  @Schema(description = "")
  public String getAssociatedObject() {
    return associatedObject;
  }

  public void setAssociatedObject(String associatedObject) {
    this.associatedObject = associatedObject;
  }

  public V1PackConfigSpec isValuesOverridden(Boolean isValuesOverridden) {
    this.isValuesOverridden = isValuesOverridden;
    return this;
  }

   /**
   * Get isValuesOverridden
   * @return isValuesOverridden
  **/
  @Schema(description = "")
  public Boolean isIsValuesOverridden() {
    return isValuesOverridden;
  }

  public void setIsValuesOverridden(Boolean isValuesOverridden) {
    this.isValuesOverridden = isValuesOverridden;
  }

  public V1PackConfigSpec manifests(List<V1PackManifestRef> manifests) {
    this.manifests = manifests;
    return this;
  }

  public V1PackConfigSpec addManifestsItem(V1PackManifestRef manifestsItem) {
    if (this.manifests == null) {
      this.manifests = new ArrayList<V1PackManifestRef>();
    }
    this.manifests.add(manifestsItem);
    return this;
  }

   /**
   * Get manifests
   * @return manifests
  **/
  @Schema(description = "")
  public List<V1PackManifestRef> getManifests() {
    return manifests;
  }

  public void setManifests(List<V1PackManifestRef> manifests) {
    this.manifests = manifests;
  }

  public V1PackConfigSpec name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1PackConfigSpec packUid(String packUid) {
    this.packUid = packUid;
    return this;
  }

   /**
   * Get packUid
   * @return packUid
  **/
  @Schema(description = "")
  public String getPackUid() {
    return packUid;
  }

  public void setPackUid(String packUid) {
    this.packUid = packUid;
  }

  public V1PackConfigSpec scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(description = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public V1PackConfigSpec tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public V1PackConfigSpec values(String values) {
    this.values = values;
    return this;
  }

   /**
   * Get values
   * @return values
  **/
  @Schema(description = "")
  public String getValues() {
    return values;
  }

  public void setValues(String values) {
    this.values = values;
  }

  public V1PackConfigSpec version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1PackConfigSpec v1PackConfigSpec = (V1PackConfigSpec) o;
    return Objects.equals(this.associatedObject, v1PackConfigSpec.associatedObject) &&
        Objects.equals(this.isValuesOverridden, v1PackConfigSpec.isValuesOverridden) &&
        Objects.equals(this.manifests, v1PackConfigSpec.manifests) &&
        Objects.equals(this.name, v1PackConfigSpec.name) &&
        Objects.equals(this.packUid, v1PackConfigSpec.packUid) &&
        Objects.equals(this.scope, v1PackConfigSpec.scope) &&
        Objects.equals(this.tag, v1PackConfigSpec.tag) &&
        Objects.equals(this.values, v1PackConfigSpec.values) &&
        Objects.equals(this.version, v1PackConfigSpec.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associatedObject, isValuesOverridden, manifests, name, packUid, scope, tag, values, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1PackConfigSpec {\n");
    
    sb.append("    associatedObject: ").append(toIndentedString(associatedObject)).append("\n");
    sb.append("    isValuesOverridden: ").append(toIndentedString(isValuesOverridden)).append("\n");
    sb.append("    manifests: ").append(toIndentedString(manifests)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packUid: ").append(toIndentedString(packUid)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
