/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.
 */
@Schema(description = "Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.")


public class V1VmHugepages {
  @SerializedName("pageSize")
  private String pageSize = null;

  public V1VmHugepages pageSize(String pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
   * @return pageSize
  **/
  @Schema(description = "PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.")
  public String getPageSize() {
    return pageSize;
  }

  public void setPageSize(String pageSize) {
    this.pageSize = pageSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1VmHugepages v1VmHugepages = (V1VmHugepages) o;
    return Objects.equals(this.pageSize, v1VmHugepages.pageSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1VmHugepages {\n");
    
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
