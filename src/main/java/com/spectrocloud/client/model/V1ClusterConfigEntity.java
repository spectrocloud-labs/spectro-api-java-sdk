/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ClusterLocation;
import com.spectrocloud.client.model.V1ClusterResourcesEntity;
import com.spectrocloud.client.model.V1FipsConfig;
import com.spectrocloud.client.model.V1HostClusterConfig;
import com.spectrocloud.client.model.V1LifecycleConfig;
import com.spectrocloud.client.model.V1MachineManagementConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * V1ClusterConfigEntity
 */



public class V1ClusterConfigEntity {
  @SerializedName("fips")
  private V1FipsConfig fips = null;

  @SerializedName("hostClusterConfig")
  private V1HostClusterConfig hostClusterConfig = null;

  @SerializedName("lifecycleConfig")
  private V1LifecycleConfig lifecycleConfig = null;

  @SerializedName("location")
  private V1ClusterLocation location = null;

  @SerializedName("machineManagementConfig")
  private V1MachineManagementConfig machineManagementConfig = null;

  @SerializedName("resources")
  private V1ClusterResourcesEntity resources = null;

  @SerializedName("updateWorkerPoolsInParallel")
  private Boolean updateWorkerPoolsInParallel = null;

  public V1ClusterConfigEntity fips(V1FipsConfig fips) {
    this.fips = fips;
    return this;
  }

   /**
   * Get fips
   * @return fips
  **/
  @Schema(description = "")
  public V1FipsConfig getFips() {
    return fips;
  }

  public void setFips(V1FipsConfig fips) {
    this.fips = fips;
  }

  public V1ClusterConfigEntity hostClusterConfig(V1HostClusterConfig hostClusterConfig) {
    this.hostClusterConfig = hostClusterConfig;
    return this;
  }

   /**
   * Get hostClusterConfig
   * @return hostClusterConfig
  **/
  @Schema(description = "")
  public V1HostClusterConfig getHostClusterConfig() {
    return hostClusterConfig;
  }

  public void setHostClusterConfig(V1HostClusterConfig hostClusterConfig) {
    this.hostClusterConfig = hostClusterConfig;
  }

  public V1ClusterConfigEntity lifecycleConfig(V1LifecycleConfig lifecycleConfig) {
    this.lifecycleConfig = lifecycleConfig;
    return this;
  }

   /**
   * Get lifecycleConfig
   * @return lifecycleConfig
  **/
  @Schema(description = "")
  public V1LifecycleConfig getLifecycleConfig() {
    return lifecycleConfig;
  }

  public void setLifecycleConfig(V1LifecycleConfig lifecycleConfig) {
    this.lifecycleConfig = lifecycleConfig;
  }

  public V1ClusterConfigEntity location(V1ClusterLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public V1ClusterLocation getLocation() {
    return location;
  }

  public void setLocation(V1ClusterLocation location) {
    this.location = location;
  }

  public V1ClusterConfigEntity machineManagementConfig(V1MachineManagementConfig machineManagementConfig) {
    this.machineManagementConfig = machineManagementConfig;
    return this;
  }

   /**
   * Get machineManagementConfig
   * @return machineManagementConfig
  **/
  @Schema(description = "")
  public V1MachineManagementConfig getMachineManagementConfig() {
    return machineManagementConfig;
  }

  public void setMachineManagementConfig(V1MachineManagementConfig machineManagementConfig) {
    this.machineManagementConfig = machineManagementConfig;
  }

  public V1ClusterConfigEntity resources(V1ClusterResourcesEntity resources) {
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @Schema(description = "")
  public V1ClusterResourcesEntity getResources() {
    return resources;
  }

  public void setResources(V1ClusterResourcesEntity resources) {
    this.resources = resources;
  }

  public V1ClusterConfigEntity updateWorkerPoolsInParallel(Boolean updateWorkerPoolsInParallel) {
    this.updateWorkerPoolsInParallel = updateWorkerPoolsInParallel;
    return this;
  }

   /**
   * Get updateWorkerPoolsInParallel
   * @return updateWorkerPoolsInParallel
  **/
  @Schema(description = "")
  public Boolean isUpdateWorkerPoolsInParallel() {
    return updateWorkerPoolsInParallel;
  }

  public void setUpdateWorkerPoolsInParallel(Boolean updateWorkerPoolsInParallel) {
    this.updateWorkerPoolsInParallel = updateWorkerPoolsInParallel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ClusterConfigEntity v1ClusterConfigEntity = (V1ClusterConfigEntity) o;
    return Objects.equals(this.fips, v1ClusterConfigEntity.fips) &&
        Objects.equals(this.hostClusterConfig, v1ClusterConfigEntity.hostClusterConfig) &&
        Objects.equals(this.lifecycleConfig, v1ClusterConfigEntity.lifecycleConfig) &&
        Objects.equals(this.location, v1ClusterConfigEntity.location) &&
        Objects.equals(this.machineManagementConfig, v1ClusterConfigEntity.machineManagementConfig) &&
        Objects.equals(this.resources, v1ClusterConfigEntity.resources) &&
        Objects.equals(this.updateWorkerPoolsInParallel, v1ClusterConfigEntity.updateWorkerPoolsInParallel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fips, hostClusterConfig, lifecycleConfig, location, machineManagementConfig, resources, updateWorkerPoolsInParallel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ClusterConfigEntity {\n");
    
    sb.append("    fips: ").append(toIndentedString(fips)).append("\n");
    sb.append("    hostClusterConfig: ").append(toIndentedString(hostClusterConfig)).append("\n");
    sb.append("    lifecycleConfig: ").append(toIndentedString(lifecycleConfig)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    machineManagementConfig: ").append(toIndentedString(machineManagementConfig)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    updateWorkerPoolsInParallel: ").append(toIndentedString(updateWorkerPoolsInParallel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
