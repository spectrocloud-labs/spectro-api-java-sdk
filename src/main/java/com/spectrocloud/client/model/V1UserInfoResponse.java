/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * V1UserInfoResponse
 */



public class V1UserInfoResponse {
  @SerializedName("address")
  private String address = null;

  @SerializedName("birthdate")
  private String birthdate = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("email_verified")
  private Boolean emailVerified = null;

  @SerializedName("family_name")
  private String familyName = null;

  @SerializedName("gender")
  private String gender = null;

  @SerializedName("given_name")
  private String givenName = null;

  @SerializedName("locale")
  private String locale = null;

  @SerializedName("middle_name")
  private String middleName = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("phone_number")
  private String phoneNumber = null;

  @SerializedName("phone_number_verified")
  private Boolean phoneNumberVerified = null;

  @SerializedName("picture")
  private String picture = null;

  @SerializedName("preferred_username")
  private String preferredUsername = null;

  @SerializedName("profile")
  private String profile = null;

  @SerializedName("sub")
  private String sub = null;

  @SerializedName("updated_at")
  private Integer updatedAt = null;

  @SerializedName("website")
  private String website = null;

  @SerializedName("zoneinfo")
  private String zoneinfo = null;

  public V1UserInfoResponse address(String address) {
    this.address = address;
    return this;
  }

   /**
   * End-User&#x27;s preferred postal address
   * @return address
  **/
  @Schema(description = "End-User's preferred postal address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public V1UserInfoResponse birthdate(String birthdate) {
    this.birthdate = birthdate;
    return this;
  }

   /**
   * End-User&#x27;s birthday, represented as an ISO 8601:2004 [ISO8601‑2004] YYYY-MM-DD format
   * @return birthdate
  **/
  @Schema(description = "End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004] YYYY-MM-DD format")
  public String getBirthdate() {
    return birthdate;
  }

  public void setBirthdate(String birthdate) {
    this.birthdate = birthdate;
  }

  public V1UserInfoResponse email(String email) {
    this.email = email;
    return this;
  }

   /**
   * End-User&#x27;s preferred e-mail address
   * @return email
  **/
  @Schema(description = "End-User's preferred e-mail address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public V1UserInfoResponse emailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
    return this;
  }

   /**
   * User at the time the verification was performed
   * @return emailVerified
  **/
  @Schema(description = "User at the time the verification was performed")
  public Boolean isEmailVerified() {
    return emailVerified;
  }

  public void setEmailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }

  public V1UserInfoResponse familyName(String familyName) {
    this.familyName = familyName;
    return this;
  }

   /**
   * Surname(s) or last name(s) of the End-User
   * @return familyName
  **/
  @Schema(description = "Surname(s) or last name(s) of the End-User")
  public String getFamilyName() {
    return familyName;
  }

  public void setFamilyName(String familyName) {
    this.familyName = familyName;
  }

  public V1UserInfoResponse gender(String gender) {
    this.gender = gender;
    return this;
  }

   /**
   * End-User&#x27;s gender
   * @return gender
  **/
  @Schema(description = "End-User's gender")
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public V1UserInfoResponse givenName(String givenName) {
    this.givenName = givenName;
    return this;
  }

   /**
   * Given name(s) or first name(s) of the End-User
   * @return givenName
  **/
  @Schema(description = "Given name(s) or first name(s) of the End-User")
  public String getGivenName() {
    return givenName;
  }

  public void setGivenName(String givenName) {
    this.givenName = givenName;
  }

  public V1UserInfoResponse locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * End-User&#x27;s locale, represented as a BCP47 [RFC5646] language tag
   * @return locale
  **/
  @Schema(description = "End-User's locale, represented as a BCP47 [RFC5646] language tag")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public V1UserInfoResponse middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Middle name(s) of the End-User
   * @return middleName
  **/
  @Schema(description = "Middle name(s) of the End-User")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public V1UserInfoResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * End-User&#x27;s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User&#x27;s locale and preferences
   * @return name
  **/
  @Schema(description = "End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1UserInfoResponse nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Casual name of the End-User that may or may not be the same as the given_name
   * @return nickname
  **/
  @Schema(description = "Casual name of the End-User that may or may not be the same as the given_name")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public V1UserInfoResponse phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * End-User&#x27;s preferred telephone number
   * @return phoneNumber
  **/
  @Schema(description = "End-User's preferred telephone number")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public V1UserInfoResponse phoneNumberVerified(Boolean phoneNumberVerified) {
    this.phoneNumberVerified = phoneNumberVerified;
    return this;
  }

   /**
   * User at the time the verification was performed
   * @return phoneNumberVerified
  **/
  @Schema(description = "User at the time the verification was performed")
  public Boolean isPhoneNumberVerified() {
    return phoneNumberVerified;
  }

  public void setPhoneNumberVerified(Boolean phoneNumberVerified) {
    this.phoneNumberVerified = phoneNumberVerified;
  }

  public V1UserInfoResponse picture(String picture) {
    this.picture = picture;
    return this;
  }

   /**
   * URL of the End-User&#x27;s profile picture
   * @return picture
  **/
  @Schema(description = "URL of the End-User's profile picture")
  public String getPicture() {
    return picture;
  }

  public void setPicture(String picture) {
    this.picture = picture;
  }

  public V1UserInfoResponse preferredUsername(String preferredUsername) {
    this.preferredUsername = preferredUsername;
    return this;
  }

   /**
   * Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe
   * @return preferredUsername
  **/
  @Schema(description = "Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe")
  public String getPreferredUsername() {
    return preferredUsername;
  }

  public void setPreferredUsername(String preferredUsername) {
    this.preferredUsername = preferredUsername;
  }

  public V1UserInfoResponse profile(String profile) {
    this.profile = profile;
    return this;
  }

   /**
   * URL of the End-User&#x27;s profile page
   * @return profile
  **/
  @Schema(description = "URL of the End-User's profile page")
  public String getProfile() {
    return profile;
  }

  public void setProfile(String profile) {
    this.profile = profile;
  }

  public V1UserInfoResponse sub(String sub) {
    this.sub = sub;
    return this;
  }

   /**
   * Subject - Identifier for the End-User at the Issuer
   * @return sub
  **/
  @Schema(description = "Subject - Identifier for the End-User at the Issuer")
  public String getSub() {
    return sub;
  }

  public void setSub(String sub) {
    this.sub = sub;
  }

  public V1UserInfoResponse updatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Time the End-User&#x27;s information was last updated
   * @return updatedAt
  **/
  @Schema(description = "Time the End-User's information was last updated")
  public Integer getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
  }

  public V1UserInfoResponse website(String website) {
    this.website = website;
    return this;
  }

   /**
   * URL of the End-User&#x27;s Web page or blog
   * @return website
  **/
  @Schema(description = "URL of the End-User's Web page or blog")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public V1UserInfoResponse zoneinfo(String zoneinfo) {
    this.zoneinfo = zoneinfo;
    return this;
  }

   /**
   * String from zoneinfo [zoneinfo] time zone database representing the End-User&#x27;s time zone
   * @return zoneinfo
  **/
  @Schema(description = "String from zoneinfo [zoneinfo] time zone database representing the End-User's time zone")
  public String getZoneinfo() {
    return zoneinfo;
  }

  public void setZoneinfo(String zoneinfo) {
    this.zoneinfo = zoneinfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1UserInfoResponse v1UserInfoResponse = (V1UserInfoResponse) o;
    return Objects.equals(this.address, v1UserInfoResponse.address) &&
        Objects.equals(this.birthdate, v1UserInfoResponse.birthdate) &&
        Objects.equals(this.email, v1UserInfoResponse.email) &&
        Objects.equals(this.emailVerified, v1UserInfoResponse.emailVerified) &&
        Objects.equals(this.familyName, v1UserInfoResponse.familyName) &&
        Objects.equals(this.gender, v1UserInfoResponse.gender) &&
        Objects.equals(this.givenName, v1UserInfoResponse.givenName) &&
        Objects.equals(this.locale, v1UserInfoResponse.locale) &&
        Objects.equals(this.middleName, v1UserInfoResponse.middleName) &&
        Objects.equals(this.name, v1UserInfoResponse.name) &&
        Objects.equals(this.nickname, v1UserInfoResponse.nickname) &&
        Objects.equals(this.phoneNumber, v1UserInfoResponse.phoneNumber) &&
        Objects.equals(this.phoneNumberVerified, v1UserInfoResponse.phoneNumberVerified) &&
        Objects.equals(this.picture, v1UserInfoResponse.picture) &&
        Objects.equals(this.preferredUsername, v1UserInfoResponse.preferredUsername) &&
        Objects.equals(this.profile, v1UserInfoResponse.profile) &&
        Objects.equals(this.sub, v1UserInfoResponse.sub) &&
        Objects.equals(this.updatedAt, v1UserInfoResponse.updatedAt) &&
        Objects.equals(this.website, v1UserInfoResponse.website) &&
        Objects.equals(this.zoneinfo, v1UserInfoResponse.zoneinfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, birthdate, email, emailVerified, familyName, gender, givenName, locale, middleName, name, nickname, phoneNumber, phoneNumberVerified, picture, preferredUsername, profile, sub, updatedAt, website, zoneinfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1UserInfoResponse {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    birthdate: ").append(toIndentedString(birthdate)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    phoneNumberVerified: ").append(toIndentedString(phoneNumberVerified)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    preferredUsername: ").append(toIndentedString(preferredUsername)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    sub: ").append(toIndentedString(sub)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    zoneinfo: ").append(toIndentedString(zoneinfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
