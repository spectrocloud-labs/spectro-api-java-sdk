/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1VsphereNetworkConfigEntity;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Both ClusterConfig and MachinePoolConfig will have PlacementConfig MachinePoolconfig.Placements will overwrite values defined in ClusterConfig Currently the convention is: Datacenter / Folder / ImageTemplateFolder / Network should be defined at ClusterConfig Cluster / ResourcePool / Datastore / Network is defined at MachinePool ClusterConfig Network should only indicate use DHCP or not MachinePool Network should contain the actual network and IPPool
 */
@Schema(description = "Both ClusterConfig and MachinePoolConfig will have PlacementConfig MachinePoolconfig.Placements will overwrite values defined in ClusterConfig Currently the convention is: Datacenter / Folder / ImageTemplateFolder / Network should be defined at ClusterConfig Cluster / ResourcePool / Datastore / Network is defined at MachinePool ClusterConfig Network should only indicate use DHCP or not MachinePool Network should contain the actual network and IPPool")


public class V1VspherePlacementConfigEntity {
  @SerializedName("cluster")
  private String cluster = null;

  @SerializedName("datacenter")
  private String datacenter = null;

  @SerializedName("datastore")
  private String datastore = null;

  @SerializedName("folder")
  private String folder = null;

  @SerializedName("imageTemplateFolder")
  private String imageTemplateFolder = null;

  @SerializedName("network")
  private V1VsphereNetworkConfigEntity network = null;

  @SerializedName("resourcePool")
  private String resourcePool = null;

  @SerializedName("storagePolicyName")
  private String storagePolicyName = null;

  @SerializedName("uid")
  private String uid = null;

  public V1VspherePlacementConfigEntity cluster(String cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Cluster is the computecluster in vsphere
   * @return cluster
  **/
  @Schema(description = "Cluster is the computecluster in vsphere")
  public String getCluster() {
    return cluster;
  }

  public void setCluster(String cluster) {
    this.cluster = cluster;
  }

  public V1VspherePlacementConfigEntity datacenter(String datacenter) {
    this.datacenter = datacenter;
    return this;
  }

   /**
   * Datacenter is the name or inventory path of the datacenter where this machine&#x27;s VM is created/located.
   * @return datacenter
  **/
  @Schema(description = "Datacenter is the name or inventory path of the datacenter where this machine's VM is created/located.")
  public String getDatacenter() {
    return datacenter;
  }

  public void setDatacenter(String datacenter) {
    this.datacenter = datacenter;
  }

  public V1VspherePlacementConfigEntity datastore(String datastore) {
    this.datastore = datastore;
    return this;
  }

   /**
   * Datastore is the datastore in which VMs are created/located.
   * @return datastore
  **/
  @Schema(description = "Datastore is the datastore in which VMs are created/located.")
  public String getDatastore() {
    return datastore;
  }

  public void setDatastore(String datastore) {
    this.datastore = datastore;
  }

  public V1VspherePlacementConfigEntity folder(String folder) {
    this.folder = folder;
    return this;
  }

   /**
   * Folder is the folder in which VMs are created/located.
   * @return folder
  **/
  @Schema(description = "Folder is the folder in which VMs are created/located.")
  public String getFolder() {
    return folder;
  }

  public void setFolder(String folder) {
    this.folder = folder;
  }

  public V1VspherePlacementConfigEntity imageTemplateFolder(String imageTemplateFolder) {
    this.imageTemplateFolder = imageTemplateFolder;
    return this;
  }

   /**
   * ImageTemplateFolder is the folder in which VMs templates are created/located. if empty will use default value spectro-templates
   * @return imageTemplateFolder
  **/
  @Schema(description = "ImageTemplateFolder is the folder in which VMs templates are created/located. if empty will use default value spectro-templates")
  public String getImageTemplateFolder() {
    return imageTemplateFolder;
  }

  public void setImageTemplateFolder(String imageTemplateFolder) {
    this.imageTemplateFolder = imageTemplateFolder;
  }

  public V1VspherePlacementConfigEntity network(V1VsphereNetworkConfigEntity network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @Schema(description = "")
  public V1VsphereNetworkConfigEntity getNetwork() {
    return network;
  }

  public void setNetwork(V1VsphereNetworkConfigEntity network) {
    this.network = network;
  }

  public V1VspherePlacementConfigEntity resourcePool(String resourcePool) {
    this.resourcePool = resourcePool;
    return this;
  }

   /**
   * ResourcePool is the resource pool within the above computecluster Cluster
   * @return resourcePool
  **/
  @Schema(description = "ResourcePool is the resource pool within the above computecluster Cluster")
  public String getResourcePool() {
    return resourcePool;
  }

  public void setResourcePool(String resourcePool) {
    this.resourcePool = resourcePool;
  }

  public V1VspherePlacementConfigEntity storagePolicyName(String storagePolicyName) {
    this.storagePolicyName = storagePolicyName;
    return this;
  }

   /**
   * StoragePolicyName of the storage policy to use with this Virtual Machine
   * @return storagePolicyName
  **/
  @Schema(description = "StoragePolicyName of the storage policy to use with this Virtual Machine")
  public String getStoragePolicyName() {
    return storagePolicyName;
  }

  public void setStoragePolicyName(String storagePolicyName) {
    this.storagePolicyName = storagePolicyName;
  }

  public V1VspherePlacementConfigEntity uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * UID for this placement
   * @return uid
  **/
  @Schema(description = "UID for this placement")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1VspherePlacementConfigEntity v1VspherePlacementConfigEntity = (V1VspherePlacementConfigEntity) o;
    return Objects.equals(this.cluster, v1VspherePlacementConfigEntity.cluster) &&
        Objects.equals(this.datacenter, v1VspherePlacementConfigEntity.datacenter) &&
        Objects.equals(this.datastore, v1VspherePlacementConfigEntity.datastore) &&
        Objects.equals(this.folder, v1VspherePlacementConfigEntity.folder) &&
        Objects.equals(this.imageTemplateFolder, v1VspherePlacementConfigEntity.imageTemplateFolder) &&
        Objects.equals(this.network, v1VspherePlacementConfigEntity.network) &&
        Objects.equals(this.resourcePool, v1VspherePlacementConfigEntity.resourcePool) &&
        Objects.equals(this.storagePolicyName, v1VspherePlacementConfigEntity.storagePolicyName) &&
        Objects.equals(this.uid, v1VspherePlacementConfigEntity.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cluster, datacenter, datastore, folder, imageTemplateFolder, network, resourcePool, storagePolicyName, uid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1VspherePlacementConfigEntity {\n");
    
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    datacenter: ").append(toIndentedString(datacenter)).append("\n");
    sb.append("    datastore: ").append(toIndentedString(datastore)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    imageTemplateFolder: ").append(toIndentedString(imageTemplateFolder)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    resourcePool: ").append(toIndentedString(resourcePool)).append("\n");
    sb.append("    storagePolicyName: ").append(toIndentedString(storagePolicyName)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
