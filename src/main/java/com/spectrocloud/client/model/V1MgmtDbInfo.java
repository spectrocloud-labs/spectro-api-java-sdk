/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1MgmtDbCollectionInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Database info
 */
@Schema(description = "Database info")


public class V1MgmtDbInfo {
  @SerializedName("collections")
  private List<V1MgmtDbCollectionInfo> collections = null;

  @SerializedName("isEmpty")
  private Boolean isEmpty = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("size")
  private Integer size = null;

  @SerializedName("totalIndexSize")
  private Integer totalIndexSize = null;

  public V1MgmtDbInfo collections(List<V1MgmtDbCollectionInfo> collections) {
    this.collections = collections;
    return this;
  }

  public V1MgmtDbInfo addCollectionsItem(V1MgmtDbCollectionInfo collectionsItem) {
    if (this.collections == null) {
      this.collections = new ArrayList<V1MgmtDbCollectionInfo>();
    }
    this.collections.add(collectionsItem);
    return this;
  }

   /**
   * Get collections
   * @return collections
  **/
  @Schema(description = "")
  public List<V1MgmtDbCollectionInfo> getCollections() {
    return collections;
  }

  public void setCollections(List<V1MgmtDbCollectionInfo> collections) {
    this.collections = collections;
  }

  public V1MgmtDbInfo isEmpty(Boolean isEmpty) {
    this.isEmpty = isEmpty;
    return this;
  }

   /**
   * Get isEmpty
   * @return isEmpty
  **/
  @Schema(description = "")
  public Boolean isIsEmpty() {
    return isEmpty;
  }

  public void setIsEmpty(Boolean isEmpty) {
    this.isEmpty = isEmpty;
  }

  public V1MgmtDbInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1MgmtDbInfo size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public V1MgmtDbInfo totalIndexSize(Integer totalIndexSize) {
    this.totalIndexSize = totalIndexSize;
    return this;
  }

   /**
   * Get totalIndexSize
   * @return totalIndexSize
  **/
  @Schema(description = "")
  public Integer getTotalIndexSize() {
    return totalIndexSize;
  }

  public void setTotalIndexSize(Integer totalIndexSize) {
    this.totalIndexSize = totalIndexSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1MgmtDbInfo v1MgmtDbInfo = (V1MgmtDbInfo) o;
    return Objects.equals(this.collections, v1MgmtDbInfo.collections) &&
        Objects.equals(this.isEmpty, v1MgmtDbInfo.isEmpty) &&
        Objects.equals(this.name, v1MgmtDbInfo.name) &&
        Objects.equals(this.size, v1MgmtDbInfo.size) &&
        Objects.equals(this.totalIndexSize, v1MgmtDbInfo.totalIndexSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collections, isEmpty, name, size, totalIndexSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1MgmtDbInfo {\n");
    
    sb.append("    collections: ").append(toIndentedString(collections)).append("\n");
    sb.append("    isEmpty: ").append(toIndentedString(isEmpty)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    totalIndexSize: ").append(toIndentedString(totalIndexSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
