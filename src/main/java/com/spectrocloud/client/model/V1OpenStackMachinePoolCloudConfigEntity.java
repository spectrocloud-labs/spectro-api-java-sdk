/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1OpenStackResource;
import com.spectrocloud.client.model.V1OpenstackFlavorConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * V1OpenStackMachinePoolCloudConfigEntity
 */



public class V1OpenStackMachinePoolCloudConfigEntity {
  @SerializedName("azs")
  private List<String> azs = null;

  @SerializedName("diskGiB")
  private Integer diskGiB = null;

  @SerializedName("flavorConfig")
  private V1OpenstackFlavorConfig flavorConfig = null;

  @SerializedName("subnet")
  private V1OpenStackResource subnet = null;

  public V1OpenStackMachinePoolCloudConfigEntity azs(List<String> azs) {
    this.azs = azs;
    return this;
  }

  public V1OpenStackMachinePoolCloudConfigEntity addAzsItem(String azsItem) {
    if (this.azs == null) {
      this.azs = new ArrayList<String>();
    }
    this.azs.add(azsItem);
    return this;
  }

   /**
   * for master pool, this will be the failure domains for kcp
   * @return azs
  **/
  @Schema(description = "for master pool, this will be the failure domains for kcp")
  public List<String> getAzs() {
    return azs;
  }

  public void setAzs(List<String> azs) {
    this.azs = azs;
  }

  public V1OpenStackMachinePoolCloudConfigEntity diskGiB(Integer diskGiB) {
    this.diskGiB = diskGiB;
    return this;
  }

   /**
   * Root disk size
   * @return diskGiB
  **/
  @Schema(description = "Root disk size")
  public Integer getDiskGiB() {
    return diskGiB;
  }

  public void setDiskGiB(Integer diskGiB) {
    this.diskGiB = diskGiB;
  }

  public V1OpenStackMachinePoolCloudConfigEntity flavorConfig(V1OpenstackFlavorConfig flavorConfig) {
    this.flavorConfig = flavorConfig;
    return this;
  }

   /**
   * Get flavorConfig
   * @return flavorConfig
  **/
  @Schema(required = true, description = "")
  public V1OpenstackFlavorConfig getFlavorConfig() {
    return flavorConfig;
  }

  public void setFlavorConfig(V1OpenstackFlavorConfig flavorConfig) {
    this.flavorConfig = flavorConfig;
  }

  public V1OpenStackMachinePoolCloudConfigEntity subnet(V1OpenStackResource subnet) {
    this.subnet = subnet;
    return this;
  }

   /**
   * Get subnet
   * @return subnet
  **/
  @Schema(description = "")
  public V1OpenStackResource getSubnet() {
    return subnet;
  }

  public void setSubnet(V1OpenStackResource subnet) {
    this.subnet = subnet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1OpenStackMachinePoolCloudConfigEntity v1OpenStackMachinePoolCloudConfigEntity = (V1OpenStackMachinePoolCloudConfigEntity) o;
    return Objects.equals(this.azs, v1OpenStackMachinePoolCloudConfigEntity.azs) &&
        Objects.equals(this.diskGiB, v1OpenStackMachinePoolCloudConfigEntity.diskGiB) &&
        Objects.equals(this.flavorConfig, v1OpenStackMachinePoolCloudConfigEntity.flavorConfig) &&
        Objects.equals(this.subnet, v1OpenStackMachinePoolCloudConfigEntity.subnet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(azs, diskGiB, flavorConfig, subnet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1OpenStackMachinePoolCloudConfigEntity {\n");
    
    sb.append("    azs: ").append(toIndentedString(azs)).append("\n");
    sb.append("    diskGiB: ").append(toIndentedString(diskGiB)).append("\n");
    sb.append("    flavorConfig: ").append(toIndentedString(flavorConfig)).append("\n");
    sb.append("    subnet: ").append(toIndentedString(subnet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
