/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1PlanLimit;
import com.spectrocloud.client.model.V1TierPrice;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Plan change update entity
 */
@Schema(description = "Plan change update entity")


public class V1PlanChangeUpdate {
  @SerializedName("expiry")
  private OffsetDateTime expiry = null;

  @SerializedName("isPaymentGateway")
  private Boolean isPaymentGateway = null;

  @SerializedName("planLimit")
  private V1PlanLimit planLimit = null;

  @SerializedName("start")
  private OffsetDateTime start = null;

  @SerializedName("tierPrice")
  private V1TierPrice tierPrice = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TRIAL("Trial"),
    MONTHLYONDEMAND("MonthlyOnDemand"),
    ANNUALSUBSCRIPTION("AnnualSubscription");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public V1PlanChangeUpdate expiry(OffsetDateTime expiry) {
    this.expiry = expiry;
    return this;
  }

   /**
   * Get expiry
   * @return expiry
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getExpiry() {
    return expiry;
  }

  public void setExpiry(OffsetDateTime expiry) {
    this.expiry = expiry;
  }

  public V1PlanChangeUpdate isPaymentGateway(Boolean isPaymentGateway) {
    this.isPaymentGateway = isPaymentGateway;
    return this;
  }

   /**
   * Get isPaymentGateway
   * @return isPaymentGateway
  **/
  @Schema(description = "")
  public Boolean isIsPaymentGateway() {
    return isPaymentGateway;
  }

  public void setIsPaymentGateway(Boolean isPaymentGateway) {
    this.isPaymentGateway = isPaymentGateway;
  }

  public V1PlanChangeUpdate planLimit(V1PlanLimit planLimit) {
    this.planLimit = planLimit;
    return this;
  }

   /**
   * Get planLimit
   * @return planLimit
  **/
  @Schema(description = "")
  public V1PlanLimit getPlanLimit() {
    return planLimit;
  }

  public void setPlanLimit(V1PlanLimit planLimit) {
    this.planLimit = planLimit;
  }

  public V1PlanChangeUpdate start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }

  public V1PlanChangeUpdate tierPrice(V1TierPrice tierPrice) {
    this.tierPrice = tierPrice;
    return this;
  }

   /**
   * Get tierPrice
   * @return tierPrice
  **/
  @Schema(description = "")
  public V1TierPrice getTierPrice() {
    return tierPrice;
  }

  public void setTierPrice(V1TierPrice tierPrice) {
    this.tierPrice = tierPrice;
  }

  public V1PlanChangeUpdate type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1PlanChangeUpdate v1PlanChangeUpdate = (V1PlanChangeUpdate) o;
    return Objects.equals(this.expiry, v1PlanChangeUpdate.expiry) &&
        Objects.equals(this.isPaymentGateway, v1PlanChangeUpdate.isPaymentGateway) &&
        Objects.equals(this.planLimit, v1PlanChangeUpdate.planLimit) &&
        Objects.equals(this.start, v1PlanChangeUpdate.start) &&
        Objects.equals(this.tierPrice, v1PlanChangeUpdate.tierPrice) &&
        Objects.equals(this.type, v1PlanChangeUpdate.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiry, isPaymentGateway, planLimit, start, tierPrice, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1PlanChangeUpdate {\n");
    
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("    isPaymentGateway: ").append(toIndentedString(isPaymentGateway)).append("\n");
    sb.append("    planLimit: ").append(toIndentedString(planLimit)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    tierPrice: ").append(toIndentedString(tierPrice)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
