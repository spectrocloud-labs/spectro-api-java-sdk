/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1VsphereComputeCluster;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Vsphere datacenter
 */
@Schema(description = "Vsphere datacenter")


public class V1VsphereCloudDatacenter {
  @SerializedName("computeClusters")
  private List<V1VsphereComputeCluster> computeClusters = null;

  @SerializedName("folders")
  private List<String> folders = null;

  @SerializedName("name")
  private String name = null;

  public V1VsphereCloudDatacenter computeClusters(List<V1VsphereComputeCluster> computeClusters) {
    this.computeClusters = computeClusters;
    return this;
  }

  public V1VsphereCloudDatacenter addComputeClustersItem(V1VsphereComputeCluster computeClustersItem) {
    if (this.computeClusters == null) {
      this.computeClusters = new ArrayList<V1VsphereComputeCluster>();
    }
    this.computeClusters.add(computeClustersItem);
    return this;
  }

   /**
   * Get computeClusters
   * @return computeClusters
  **/
  @Schema(description = "")
  public List<V1VsphereComputeCluster> getComputeClusters() {
    return computeClusters;
  }

  public void setComputeClusters(List<V1VsphereComputeCluster> computeClusters) {
    this.computeClusters = computeClusters;
  }

  public V1VsphereCloudDatacenter folders(List<String> folders) {
    this.folders = folders;
    return this;
  }

  public V1VsphereCloudDatacenter addFoldersItem(String foldersItem) {
    if (this.folders == null) {
      this.folders = new ArrayList<String>();
    }
    this.folders.add(foldersItem);
    return this;
  }

   /**
   * Get folders
   * @return folders
  **/
  @Schema(description = "")
  public List<String> getFolders() {
    return folders;
  }

  public void setFolders(List<String> folders) {
    this.folders = folders;
  }

  public V1VsphereCloudDatacenter name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1VsphereCloudDatacenter v1VsphereCloudDatacenter = (V1VsphereCloudDatacenter) o;
    return Objects.equals(this.computeClusters, v1VsphereCloudDatacenter.computeClusters) &&
        Objects.equals(this.folders, v1VsphereCloudDatacenter.folders) &&
        Objects.equals(this.name, v1VsphereCloudDatacenter.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(computeClusters, folders, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1VsphereCloudDatacenter {\n");
    
    sb.append("    computeClusters: ").append(toIndentedString(computeClusters)).append("\n");
    sb.append("    folders: ").append(toIndentedString(folders)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
