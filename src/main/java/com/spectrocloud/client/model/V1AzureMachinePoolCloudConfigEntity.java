/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1AzureOSDisk;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * V1AzureMachinePoolCloudConfigEntity
 */



public class V1AzureMachinePoolCloudConfigEntity {
  @SerializedName("azs")
  private List<String> azs = null;

  @SerializedName("instanceType")
  private String instanceType = null;

  @SerializedName("isSystemNodePool")
  private Boolean isSystemNodePool = null;

  @SerializedName("osDisk")
  private V1AzureOSDisk osDisk = null;

  public V1AzureMachinePoolCloudConfigEntity azs(List<String> azs) {
    this.azs = azs;
    return this;
  }

  public V1AzureMachinePoolCloudConfigEntity addAzsItem(String azsItem) {
    if (this.azs == null) {
      this.azs = new ArrayList<String>();
    }
    this.azs.add(azsItem);
    return this;
  }

   /**
   * Get azs
   * @return azs
  **/
  @Schema(description = "")
  public List<String> getAzs() {
    return azs;
  }

  public void setAzs(List<String> azs) {
    this.azs = azs;
  }

  public V1AzureMachinePoolCloudConfigEntity instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Instance type stands for VMSize in Azure
   * @return instanceType
  **/
  @Schema(description = "Instance type stands for VMSize in Azure")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public V1AzureMachinePoolCloudConfigEntity isSystemNodePool(Boolean isSystemNodePool) {
    this.isSystemNodePool = isSystemNodePool;
    return this;
  }

   /**
   * whether this pool is for system node Pool
   * @return isSystemNodePool
  **/
  @Schema(description = "whether this pool is for system node Pool")
  public Boolean isIsSystemNodePool() {
    return isSystemNodePool;
  }

  public void setIsSystemNodePool(Boolean isSystemNodePool) {
    this.isSystemNodePool = isSystemNodePool;
  }

  public V1AzureMachinePoolCloudConfigEntity osDisk(V1AzureOSDisk osDisk) {
    this.osDisk = osDisk;
    return this;
  }

   /**
   * Get osDisk
   * @return osDisk
  **/
  @Schema(description = "")
  public V1AzureOSDisk getOsDisk() {
    return osDisk;
  }

  public void setOsDisk(V1AzureOSDisk osDisk) {
    this.osDisk = osDisk;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1AzureMachinePoolCloudConfigEntity v1AzureMachinePoolCloudConfigEntity = (V1AzureMachinePoolCloudConfigEntity) o;
    return Objects.equals(this.azs, v1AzureMachinePoolCloudConfigEntity.azs) &&
        Objects.equals(this.instanceType, v1AzureMachinePoolCloudConfigEntity.instanceType) &&
        Objects.equals(this.isSystemNodePool, v1AzureMachinePoolCloudConfigEntity.isSystemNodePool) &&
        Objects.equals(this.osDisk, v1AzureMachinePoolCloudConfigEntity.osDisk);
  }

  @Override
  public int hashCode() {
    return Objects.hash(azs, instanceType, isSystemNodePool, osDisk);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1AzureMachinePoolCloudConfigEntity {\n");
    
    sb.append("    azs: ").append(toIndentedString(azs)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    isSystemNodePool: ").append(toIndentedString(isSystemNodePool)).append("\n");
    sb.append("    osDisk: ").append(toIndentedString(osDisk)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
