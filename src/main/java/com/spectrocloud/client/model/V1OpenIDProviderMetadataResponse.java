/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * V1OpenIDProviderMetadataResponse
 */



public class V1OpenIDProviderMetadataResponse {
  @SerializedName("authorization_endpoint")
  private String authorizationEndpoint = null;

  @SerializedName("claims_supported")
  private String claimsSupported = null;

  @SerializedName("id_token_signing_alg_values_supported")
  private Object idTokenSigningAlgValuesSupported = null;

  @SerializedName("issuer")
  private String issuer = null;

  @SerializedName("jwks_uri")
  private String jwksUri = null;

  @SerializedName("registration_endpoint")
  private String registrationEndpoint = null;

  @SerializedName("response_types_supported")
  private String responseTypesSupported = null;

  @SerializedName("scopes_supported")
  private String scopesSupported = null;

  @SerializedName("subject_types_supported")
  private String subjectTypesSupported = null;

  @SerializedName("token_endpoint")
  private String tokenEndpoint = null;

  @SerializedName("userinfo_endpoint")
  private String userinfoEndpoint = null;

  public V1OpenIDProviderMetadataResponse authorizationEndpoint(String authorizationEndpoint) {
    this.authorizationEndpoint = authorizationEndpoint;
    return this;
  }

   /**
   * REQUIRED. URL of the OP&#x27;s OAuth 2.0 Authorization Endpoint
   * @return authorizationEndpoint
  **/
  @Schema(description = "REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint")
  public String getAuthorizationEndpoint() {
    return authorizationEndpoint;
  }

  public void setAuthorizationEndpoint(String authorizationEndpoint) {
    this.authorizationEndpoint = authorizationEndpoint;
  }

  public V1OpenIDProviderMetadataResponse claimsSupported(String claimsSupported) {
    this.claimsSupported = claimsSupported;
    return this;
  }

   /**
   * RECOMMENDED. JSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply values for
   * @return claimsSupported
  **/
  @Schema(description = "RECOMMENDED. JSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply values for")
  public String getClaimsSupported() {
    return claimsSupported;
  }

  public void setClaimsSupported(String claimsSupported) {
    this.claimsSupported = claimsSupported;
  }

  public V1OpenIDProviderMetadataResponse idTokenSigningAlgValuesSupported(Object idTokenSigningAlgValuesSupported) {
    this.idTokenSigningAlgValuesSupported = idTokenSigningAlgValuesSupported;
    return this;
  }

   /**
   * REQUIRED. JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT
   * @return idTokenSigningAlgValuesSupported
  **/
  @Schema(description = "REQUIRED. JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT")
  public Object getIdTokenSigningAlgValuesSupported() {
    return idTokenSigningAlgValuesSupported;
  }

  public void setIdTokenSigningAlgValuesSupported(Object idTokenSigningAlgValuesSupported) {
    this.idTokenSigningAlgValuesSupported = idTokenSigningAlgValuesSupported;
  }

  public V1OpenIDProviderMetadataResponse issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * REQUIRED. URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier
   * @return issuer
  **/
  @Schema(description = "REQUIRED. URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public V1OpenIDProviderMetadataResponse jwksUri(String jwksUri) {
    this.jwksUri = jwksUri;
    return this;
  }

   /**
   * REQUIRED. URL of the OP&#x27;s JSON Web Key Set [JWK] document.
   * @return jwksUri
  **/
  @Schema(description = "REQUIRED. URL of the OP's JSON Web Key Set [JWK] document.")
  public String getJwksUri() {
    return jwksUri;
  }

  public void setJwksUri(String jwksUri) {
    this.jwksUri = jwksUri;
  }

  public V1OpenIDProviderMetadataResponse registrationEndpoint(String registrationEndpoint) {
    this.registrationEndpoint = registrationEndpoint;
    return this;
  }

   /**
   * RECOMMENDED. URL of the OP&#x27;s Dynamic Client Registration Endpoint
   * @return registrationEndpoint
  **/
  @Schema(description = "RECOMMENDED. URL of the OP's Dynamic Client Registration Endpoint")
  public String getRegistrationEndpoint() {
    return registrationEndpoint;
  }

  public void setRegistrationEndpoint(String registrationEndpoint) {
    this.registrationEndpoint = registrationEndpoint;
  }

  public V1OpenIDProviderMetadataResponse responseTypesSupported(String responseTypesSupported) {
    this.responseTypesSupported = responseTypesSupported;
    return this;
  }

   /**
   * REQUIRED. JSON array containing a list of the OAuth 2.0 response_type values that this OP supports
   * @return responseTypesSupported
  **/
  @Schema(description = "REQUIRED. JSON array containing a list of the OAuth 2.0 response_type values that this OP supports")
  public String getResponseTypesSupported() {
    return responseTypesSupported;
  }

  public void setResponseTypesSupported(String responseTypesSupported) {
    this.responseTypesSupported = responseTypesSupported;
  }

  public V1OpenIDProviderMetadataResponse scopesSupported(String scopesSupported) {
    this.scopesSupported = scopesSupported;
    return this;
  }

   /**
   * RECOMMENDED. JSON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports
   * @return scopesSupported
  **/
  @Schema(description = "RECOMMENDED. JSON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports")
  public String getScopesSupported() {
    return scopesSupported;
  }

  public void setScopesSupported(String scopesSupported) {
    this.scopesSupported = scopesSupported;
  }

  public V1OpenIDProviderMetadataResponse subjectTypesSupported(String subjectTypesSupported) {
    this.subjectTypesSupported = subjectTypesSupported;
    return this;
  }

   /**
   * REQUIRED. JSON array containing a list of the Subject Identifier types that this OP supports
   * @return subjectTypesSupported
  **/
  @Schema(description = "REQUIRED. JSON array containing a list of the Subject Identifier types that this OP supports")
  public String getSubjectTypesSupported() {
    return subjectTypesSupported;
  }

  public void setSubjectTypesSupported(String subjectTypesSupported) {
    this.subjectTypesSupported = subjectTypesSupported;
  }

  public V1OpenIDProviderMetadataResponse tokenEndpoint(String tokenEndpoint) {
    this.tokenEndpoint = tokenEndpoint;
    return this;
  }

   /**
   * URL of the OP&#x27;s OAuth 2.0 Token Endpoint
   * @return tokenEndpoint
  **/
  @Schema(description = "URL of the OP's OAuth 2.0 Token Endpoint")
  public String getTokenEndpoint() {
    return tokenEndpoint;
  }

  public void setTokenEndpoint(String tokenEndpoint) {
    this.tokenEndpoint = tokenEndpoint;
  }

  public V1OpenIDProviderMetadataResponse userinfoEndpoint(String userinfoEndpoint) {
    this.userinfoEndpoint = userinfoEndpoint;
    return this;
  }

   /**
   * RECOMMENDED. URL of the OP&#x27;s UserInfo Endpoint
   * @return userinfoEndpoint
  **/
  @Schema(description = "RECOMMENDED. URL of the OP's UserInfo Endpoint")
  public String getUserinfoEndpoint() {
    return userinfoEndpoint;
  }

  public void setUserinfoEndpoint(String userinfoEndpoint) {
    this.userinfoEndpoint = userinfoEndpoint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1OpenIDProviderMetadataResponse v1OpenIDProviderMetadataResponse = (V1OpenIDProviderMetadataResponse) o;
    return Objects.equals(this.authorizationEndpoint, v1OpenIDProviderMetadataResponse.authorizationEndpoint) &&
        Objects.equals(this.claimsSupported, v1OpenIDProviderMetadataResponse.claimsSupported) &&
        Objects.equals(this.idTokenSigningAlgValuesSupported, v1OpenIDProviderMetadataResponse.idTokenSigningAlgValuesSupported) &&
        Objects.equals(this.issuer, v1OpenIDProviderMetadataResponse.issuer) &&
        Objects.equals(this.jwksUri, v1OpenIDProviderMetadataResponse.jwksUri) &&
        Objects.equals(this.registrationEndpoint, v1OpenIDProviderMetadataResponse.registrationEndpoint) &&
        Objects.equals(this.responseTypesSupported, v1OpenIDProviderMetadataResponse.responseTypesSupported) &&
        Objects.equals(this.scopesSupported, v1OpenIDProviderMetadataResponse.scopesSupported) &&
        Objects.equals(this.subjectTypesSupported, v1OpenIDProviderMetadataResponse.subjectTypesSupported) &&
        Objects.equals(this.tokenEndpoint, v1OpenIDProviderMetadataResponse.tokenEndpoint) &&
        Objects.equals(this.userinfoEndpoint, v1OpenIDProviderMetadataResponse.userinfoEndpoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizationEndpoint, claimsSupported, idTokenSigningAlgValuesSupported, issuer, jwksUri, registrationEndpoint, responseTypesSupported, scopesSupported, subjectTypesSupported, tokenEndpoint, userinfoEndpoint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1OpenIDProviderMetadataResponse {\n");
    
    sb.append("    authorizationEndpoint: ").append(toIndentedString(authorizationEndpoint)).append("\n");
    sb.append("    claimsSupported: ").append(toIndentedString(claimsSupported)).append("\n");
    sb.append("    idTokenSigningAlgValuesSupported: ").append(toIndentedString(idTokenSigningAlgValuesSupported)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    jwksUri: ").append(toIndentedString(jwksUri)).append("\n");
    sb.append("    registrationEndpoint: ").append(toIndentedString(registrationEndpoint)).append("\n");
    sb.append("    responseTypesSupported: ").append(toIndentedString(responseTypesSupported)).append("\n");
    sb.append("    scopesSupported: ").append(toIndentedString(scopesSupported)).append("\n");
    sb.append("    subjectTypesSupported: ").append(toIndentedString(subjectTypesSupported)).append("\n");
    sb.append("    tokenEndpoint: ").append(toIndentedString(tokenEndpoint)).append("\n");
    sb.append("    userinfoEndpoint: ").append(toIndentedString(userinfoEndpoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
