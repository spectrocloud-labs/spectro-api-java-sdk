/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ClusterWorkloadCondition;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Cluster workload job status
 */
@Schema(description = "Cluster workload job status")


public class V1ClusterWorkloadJobStatus {
  @SerializedName("completionTime")
  private OffsetDateTime completionTime = null;

  @SerializedName("conditions")
  private List<V1ClusterWorkloadCondition> conditions = null;

  @SerializedName("startTime")
  private OffsetDateTime startTime = null;

  @SerializedName("succeeded")
  private Integer succeeded = null;

  public V1ClusterWorkloadJobStatus completionTime(OffsetDateTime completionTime) {
    this.completionTime = completionTime;
    return this;
  }

   /**
   * Get completionTime
   * @return completionTime
  **/
  @Schema(description = "")
  public OffsetDateTime getCompletionTime() {
    return completionTime;
  }

  public void setCompletionTime(OffsetDateTime completionTime) {
    this.completionTime = completionTime;
  }

  public V1ClusterWorkloadJobStatus conditions(List<V1ClusterWorkloadCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public V1ClusterWorkloadJobStatus addConditionsItem(V1ClusterWorkloadCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<V1ClusterWorkloadCondition>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Get conditions
   * @return conditions
  **/
  @Schema(description = "")
  public List<V1ClusterWorkloadCondition> getConditions() {
    return conditions;
  }

  public void setConditions(List<V1ClusterWorkloadCondition> conditions) {
    this.conditions = conditions;
  }

  public V1ClusterWorkloadJobStatus startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public V1ClusterWorkloadJobStatus succeeded(Integer succeeded) {
    this.succeeded = succeeded;
    return this;
  }

   /**
   * Get succeeded
   * @return succeeded
  **/
  @Schema(description = "")
  public Integer getSucceeded() {
    return succeeded;
  }

  public void setSucceeded(Integer succeeded) {
    this.succeeded = succeeded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ClusterWorkloadJobStatus v1ClusterWorkloadJobStatus = (V1ClusterWorkloadJobStatus) o;
    return Objects.equals(this.completionTime, v1ClusterWorkloadJobStatus.completionTime) &&
        Objects.equals(this.conditions, v1ClusterWorkloadJobStatus.conditions) &&
        Objects.equals(this.startTime, v1ClusterWorkloadJobStatus.startTime) &&
        Objects.equals(this.succeeded, v1ClusterWorkloadJobStatus.succeeded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionTime, conditions, startTime, succeeded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ClusterWorkloadJobStatus {\n");
    
    sb.append("    completionTime: ").append(toIndentedString(completionTime)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    succeeded: ").append(toIndentedString(succeeded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
