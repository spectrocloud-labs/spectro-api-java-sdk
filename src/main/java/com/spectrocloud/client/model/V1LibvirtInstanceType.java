/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1CPUPassthroughSpec;
import com.spectrocloud.client.model.V1GPUConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * LibvirtInstanceType defines the instance configuration for a virtual machine
 */
@Schema(description = "LibvirtInstanceType defines the instance configuration for a virtual machine")


public class V1LibvirtInstanceType {
  @SerializedName("cpuPassthroughSpec")
  private V1CPUPassthroughSpec cpuPassthroughSpec = null;

  @SerializedName("cpuset")
  private String cpuset = null;

  @SerializedName("gpuConfig")
  private V1GPUConfig gpuConfig = null;

  @SerializedName("memoryInMB")
  private Integer memoryInMB = null;

  @SerializedName("numCPUs")
  private Integer numCPUs = null;

  public V1LibvirtInstanceType cpuPassthroughSpec(V1CPUPassthroughSpec cpuPassthroughSpec) {
    this.cpuPassthroughSpec = cpuPassthroughSpec;
    return this;
  }

   /**
   * Get cpuPassthroughSpec
   * @return cpuPassthroughSpec
  **/
  @Schema(description = "")
  public V1CPUPassthroughSpec getCpuPassthroughSpec() {
    return cpuPassthroughSpec;
  }

  public void setCpuPassthroughSpec(V1CPUPassthroughSpec cpuPassthroughSpec) {
    this.cpuPassthroughSpec = cpuPassthroughSpec;
  }

  public V1LibvirtInstanceType cpuset(String cpuset) {
    this.cpuset = cpuset;
    return this;
  }

   /**
   * CPUSet defines cpuset for an instance which allows allocation specific set of cpus E.g  cpuset&#x3D;\&quot;1-4,^3,6\&quot; See https://libvirt.org/formatdomain.html#cpu-allocation
   * @return cpuset
  **/
  @Schema(description = "CPUSet defines cpuset for an instance which allows allocation specific set of cpus E.g  cpuset=\"1-4,^3,6\" See https://libvirt.org/formatdomain.html#cpu-allocation")
  public String getCpuset() {
    return cpuset;
  }

  public void setCpuset(String cpuset) {
    this.cpuset = cpuset;
  }

  public V1LibvirtInstanceType gpuConfig(V1GPUConfig gpuConfig) {
    this.gpuConfig = gpuConfig;
    return this;
  }

   /**
   * Get gpuConfig
   * @return gpuConfig
  **/
  @Schema(description = "")
  public V1GPUConfig getGpuConfig() {
    return gpuConfig;
  }

  public void setGpuConfig(V1GPUConfig gpuConfig) {
    this.gpuConfig = gpuConfig;
  }

  public V1LibvirtInstanceType memoryInMB(Integer memoryInMB) {
    this.memoryInMB = memoryInMB;
    return this;
  }

   /**
   * MemoryinMB is the memory in megabytes
   * @return memoryInMB
  **/
  @Schema(required = true, description = "MemoryinMB is the memory in megabytes")
  public Integer getMemoryInMB() {
    return memoryInMB;
  }

  public void setMemoryInMB(Integer memoryInMB) {
    this.memoryInMB = memoryInMB;
  }

  public V1LibvirtInstanceType numCPUs(Integer numCPUs) {
    this.numCPUs = numCPUs;
    return this;
  }

   /**
   * NumCPUs is the number of CPUs
   * @return numCPUs
  **/
  @Schema(required = true, description = "NumCPUs is the number of CPUs")
  public Integer getNumCPUs() {
    return numCPUs;
  }

  public void setNumCPUs(Integer numCPUs) {
    this.numCPUs = numCPUs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1LibvirtInstanceType v1LibvirtInstanceType = (V1LibvirtInstanceType) o;
    return Objects.equals(this.cpuPassthroughSpec, v1LibvirtInstanceType.cpuPassthroughSpec) &&
        Objects.equals(this.cpuset, v1LibvirtInstanceType.cpuset) &&
        Objects.equals(this.gpuConfig, v1LibvirtInstanceType.gpuConfig) &&
        Objects.equals(this.memoryInMB, v1LibvirtInstanceType.memoryInMB) &&
        Objects.equals(this.numCPUs, v1LibvirtInstanceType.numCPUs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuPassthroughSpec, cpuset, gpuConfig, memoryInMB, numCPUs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1LibvirtInstanceType {\n");
    
    sb.append("    cpuPassthroughSpec: ").append(toIndentedString(cpuPassthroughSpec)).append("\n");
    sb.append("    cpuset: ").append(toIndentedString(cpuset)).append("\n");
    sb.append("    gpuConfig: ").append(toIndentedString(gpuConfig)).append("\n");
    sb.append("    memoryInMB: ").append(toIndentedString(memoryInMB)).append("\n");
    sb.append("    numCPUs: ").append(toIndentedString(numCPUs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
