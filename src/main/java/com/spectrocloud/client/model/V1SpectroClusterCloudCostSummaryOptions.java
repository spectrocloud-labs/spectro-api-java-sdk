/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Spectro cluster cloud cost summary options
 */
@Schema(description = "Spectro cluster cloud cost summary options")


public class V1SpectroClusterCloudCostSummaryOptions {
  /**
   * Gets or Sets groupBy
   */
  @JsonAdapter(GroupByEnum.Adapter.class)
  public enum GroupByEnum {
    TENANT("tenant"),
    PROJECT("project"),
    CLOUD("cloud"),
    CLUSTER("cluster");

    private String value;

    GroupByEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static GroupByEnum fromValue(String input) {
      for (GroupByEnum b : GroupByEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<GroupByEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GroupByEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public GroupByEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return GroupByEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("groupBy")
  private GroupByEnum groupBy = GroupByEnum.PROJECT;

  @SerializedName("period")
  private Integer period = 1440;

  public V1SpectroClusterCloudCostSummaryOptions groupBy(GroupByEnum groupBy) {
    this.groupBy = groupBy;
    return this;
  }

   /**
   * Get groupBy
   * @return groupBy
  **/
  @Schema(description = "")
  public GroupByEnum getGroupBy() {
    return groupBy;
  }

  public void setGroupBy(GroupByEnum groupBy) {
    this.groupBy = groupBy;
  }

  public V1SpectroClusterCloudCostSummaryOptions period(Integer period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public Integer getPeriod() {
    return period;
  }

  public void setPeriod(Integer period) {
    this.period = period;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpectroClusterCloudCostSummaryOptions v1SpectroClusterCloudCostSummaryOptions = (V1SpectroClusterCloudCostSummaryOptions) o;
    return Objects.equals(this.groupBy, v1SpectroClusterCloudCostSummaryOptions.groupBy) &&
        Objects.equals(this.period, v1SpectroClusterCloudCostSummaryOptions.period);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupBy, period);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpectroClusterCloudCostSummaryOptions {\n");
    
    sb.append("    groupBy: ").append(toIndentedString(groupBy)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
