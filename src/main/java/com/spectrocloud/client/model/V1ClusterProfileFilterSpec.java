/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1CloudType;
import com.spectrocloud.client.model.V1ClusterProfileScope;
import com.spectrocloud.client.model.V1FilterArray;
import com.spectrocloud.client.model.V1FilterString;
import com.spectrocloud.client.model.V1FilterVersionString;
import com.spectrocloud.client.model.V1ProfileType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Cluster profile filter spec
 */
@Schema(description = "Cluster profile filter spec")


public class V1ClusterProfileFilterSpec {
  @SerializedName("environment")
  private List<V1CloudType> environment = null;

  @SerializedName("profileName")
  private V1FilterString profileName = null;

  @SerializedName("profileType")
  private List<V1ProfileType> profileType = null;

  @SerializedName("scope")
  private V1ClusterProfileScope scope = null;

  @SerializedName("tags")
  private V1FilterArray tags = null;

  @SerializedName("version")
  private V1FilterVersionString version = null;

  public V1ClusterProfileFilterSpec environment(List<V1CloudType> environment) {
    this.environment = environment;
    return this;
  }

  public V1ClusterProfileFilterSpec addEnvironmentItem(V1CloudType environmentItem) {
    if (this.environment == null) {
      this.environment = new ArrayList<V1CloudType>();
    }
    this.environment.add(environmentItem);
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @Schema(description = "")
  public List<V1CloudType> getEnvironment() {
    return environment;
  }

  public void setEnvironment(List<V1CloudType> environment) {
    this.environment = environment;
  }

  public V1ClusterProfileFilterSpec profileName(V1FilterString profileName) {
    this.profileName = profileName;
    return this;
  }

   /**
   * Get profileName
   * @return profileName
  **/
  @Schema(description = "")
  public V1FilterString getProfileName() {
    return profileName;
  }

  public void setProfileName(V1FilterString profileName) {
    this.profileName = profileName;
  }

  public V1ClusterProfileFilterSpec profileType(List<V1ProfileType> profileType) {
    this.profileType = profileType;
    return this;
  }

  public V1ClusterProfileFilterSpec addProfileTypeItem(V1ProfileType profileTypeItem) {
    if (this.profileType == null) {
      this.profileType = new ArrayList<V1ProfileType>();
    }
    this.profileType.add(profileTypeItem);
    return this;
  }

   /**
   * Get profileType
   * @return profileType
  **/
  @Schema(description = "")
  public List<V1ProfileType> getProfileType() {
    return profileType;
  }

  public void setProfileType(List<V1ProfileType> profileType) {
    this.profileType = profileType;
  }

  public V1ClusterProfileFilterSpec scope(V1ClusterProfileScope scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(description = "")
  public V1ClusterProfileScope getScope() {
    return scope;
  }

  public void setScope(V1ClusterProfileScope scope) {
    this.scope = scope;
  }

  public V1ClusterProfileFilterSpec tags(V1FilterArray tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public V1FilterArray getTags() {
    return tags;
  }

  public void setTags(V1FilterArray tags) {
    this.tags = tags;
  }

  public V1ClusterProfileFilterSpec version(V1FilterVersionString version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public V1FilterVersionString getVersion() {
    return version;
  }

  public void setVersion(V1FilterVersionString version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ClusterProfileFilterSpec v1ClusterProfileFilterSpec = (V1ClusterProfileFilterSpec) o;
    return Objects.equals(this.environment, v1ClusterProfileFilterSpec.environment) &&
        Objects.equals(this.profileName, v1ClusterProfileFilterSpec.profileName) &&
        Objects.equals(this.profileType, v1ClusterProfileFilterSpec.profileType) &&
        Objects.equals(this.scope, v1ClusterProfileFilterSpec.scope) &&
        Objects.equals(this.tags, v1ClusterProfileFilterSpec.tags) &&
        Objects.equals(this.version, v1ClusterProfileFilterSpec.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environment, profileName, profileType, scope, tags, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ClusterProfileFilterSpec {\n");
    
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    profileType: ").append(toIndentedString(profileType)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
