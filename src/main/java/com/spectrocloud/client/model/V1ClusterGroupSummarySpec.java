/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1ClusterGroupResource;
import com.spectrocloud.client.model.V1ObjectResReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Cluster group summay spec
 */
@Schema(description = "Cluster group summay spec")


public class V1ClusterGroupSummarySpec {
  @SerializedName("cpu")
  private V1ClusterGroupResource cpu = null;

  /**
   * Gets or Sets endpointType
   */
  @JsonAdapter(EndpointTypeEnum.Adapter.class)
  public enum EndpointTypeEnum {
    INGRESS("Ingress"),
    LOADBALANCER("LoadBalancer");

    private String value;

    EndpointTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EndpointTypeEnum fromValue(String input) {
      for (EndpointTypeEnum b : EndpointTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EndpointTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EndpointTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EndpointTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EndpointTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("endpointType")
  private EndpointTypeEnum endpointType = null;

  @SerializedName("hostClusters")
  private List<V1ObjectResReference> hostClusters = null;

  @SerializedName("hostClustersCount")
  private Integer hostClustersCount = null;

  @SerializedName("memory")
  private V1ClusterGroupResource memory = null;

  @SerializedName("nestedClusters")
  private List<V1ObjectResReference> nestedClusters = null;

  @SerializedName("nestedClustersCount")
  private Integer nestedClustersCount = null;

  @SerializedName("scope")
  private String scope = null;

  @SerializedName("virtualClustersCount")
  private Integer virtualClustersCount = null;

  public V1ClusterGroupSummarySpec cpu(V1ClusterGroupResource cpu) {
    this.cpu = cpu;
    return this;
  }

   /**
   * Get cpu
   * @return cpu
  **/
  @Schema(description = "")
  public V1ClusterGroupResource getCpu() {
    return cpu;
  }

  public void setCpu(V1ClusterGroupResource cpu) {
    this.cpu = cpu;
  }

  public V1ClusterGroupSummarySpec endpointType(EndpointTypeEnum endpointType) {
    this.endpointType = endpointType;
    return this;
  }

   /**
   * Get endpointType
   * @return endpointType
  **/
  @Schema(description = "")
  public EndpointTypeEnum getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(EndpointTypeEnum endpointType) {
    this.endpointType = endpointType;
  }

  public V1ClusterGroupSummarySpec hostClusters(List<V1ObjectResReference> hostClusters) {
    this.hostClusters = hostClusters;
    return this;
  }

  public V1ClusterGroupSummarySpec addHostClustersItem(V1ObjectResReference hostClustersItem) {
    if (this.hostClusters == null) {
      this.hostClusters = new ArrayList<V1ObjectResReference>();
    }
    this.hostClusters.add(hostClustersItem);
    return this;
  }

   /**
   * Get hostClusters
   * @return hostClusters
  **/
  @Schema(description = "")
  public List<V1ObjectResReference> getHostClusters() {
    return hostClusters;
  }

  public void setHostClusters(List<V1ObjectResReference> hostClusters) {
    this.hostClusters = hostClusters;
  }

  public V1ClusterGroupSummarySpec hostClustersCount(Integer hostClustersCount) {
    this.hostClustersCount = hostClustersCount;
    return this;
  }

   /**
   * Get hostClustersCount
   * @return hostClustersCount
  **/
  @Schema(description = "")
  public Integer getHostClustersCount() {
    return hostClustersCount;
  }

  public void setHostClustersCount(Integer hostClustersCount) {
    this.hostClustersCount = hostClustersCount;
  }

  public V1ClusterGroupSummarySpec memory(V1ClusterGroupResource memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public V1ClusterGroupResource getMemory() {
    return memory;
  }

  public void setMemory(V1ClusterGroupResource memory) {
    this.memory = memory;
  }

  public V1ClusterGroupSummarySpec nestedClusters(List<V1ObjectResReference> nestedClusters) {
    this.nestedClusters = nestedClusters;
    return this;
  }

  public V1ClusterGroupSummarySpec addNestedClustersItem(V1ObjectResReference nestedClustersItem) {
    if (this.nestedClusters == null) {
      this.nestedClusters = new ArrayList<V1ObjectResReference>();
    }
    this.nestedClusters.add(nestedClustersItem);
    return this;
  }

   /**
   * Deprecated. Use virtualClustersCount
   * @return nestedClusters
  **/
  @Schema(description = "Deprecated. Use virtualClustersCount")
  public List<V1ObjectResReference> getNestedClusters() {
    return nestedClusters;
  }

  public void setNestedClusters(List<V1ObjectResReference> nestedClusters) {
    this.nestedClusters = nestedClusters;
  }

  public V1ClusterGroupSummarySpec nestedClustersCount(Integer nestedClustersCount) {
    this.nestedClustersCount = nestedClustersCount;
    return this;
  }

   /**
   * Deprecated. Use field &#x27;virtualClustersCount&#x27;
   * @return nestedClustersCount
  **/
  @Schema(description = "Deprecated. Use field 'virtualClustersCount'")
  public Integer getNestedClustersCount() {
    return nestedClustersCount;
  }

  public void setNestedClustersCount(Integer nestedClustersCount) {
    this.nestedClustersCount = nestedClustersCount;
  }

  public V1ClusterGroupSummarySpec scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(description = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public V1ClusterGroupSummarySpec virtualClustersCount(Integer virtualClustersCount) {
    this.virtualClustersCount = virtualClustersCount;
    return this;
  }

   /**
   * Get virtualClustersCount
   * @return virtualClustersCount
  **/
  @Schema(description = "")
  public Integer getVirtualClustersCount() {
    return virtualClustersCount;
  }

  public void setVirtualClustersCount(Integer virtualClustersCount) {
    this.virtualClustersCount = virtualClustersCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ClusterGroupSummarySpec v1ClusterGroupSummarySpec = (V1ClusterGroupSummarySpec) o;
    return Objects.equals(this.cpu, v1ClusterGroupSummarySpec.cpu) &&
        Objects.equals(this.endpointType, v1ClusterGroupSummarySpec.endpointType) &&
        Objects.equals(this.hostClusters, v1ClusterGroupSummarySpec.hostClusters) &&
        Objects.equals(this.hostClustersCount, v1ClusterGroupSummarySpec.hostClustersCount) &&
        Objects.equals(this.memory, v1ClusterGroupSummarySpec.memory) &&
        Objects.equals(this.nestedClusters, v1ClusterGroupSummarySpec.nestedClusters) &&
        Objects.equals(this.nestedClustersCount, v1ClusterGroupSummarySpec.nestedClustersCount) &&
        Objects.equals(this.scope, v1ClusterGroupSummarySpec.scope) &&
        Objects.equals(this.virtualClustersCount, v1ClusterGroupSummarySpec.virtualClustersCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpu, endpointType, hostClusters, hostClustersCount, memory, nestedClusters, nestedClustersCount, scope, virtualClustersCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ClusterGroupSummarySpec {\n");
    
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    hostClusters: ").append(toIndentedString(hostClusters)).append("\n");
    sb.append("    hostClustersCount: ").append(toIndentedString(hostClustersCount)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    nestedClusters: ").append(toIndentedString(nestedClusters)).append("\n");
    sb.append("    nestedClustersCount: ").append(toIndentedString(nestedClustersCount)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    virtualClustersCount: ").append(toIndentedString(virtualClustersCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
