/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1GenericInstanceType;
import com.spectrocloud.client.model.V1OpenStackNic;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * OpenStack cloud VM definition spec
 */
@Schema(description = "OpenStack cloud VM definition spec")


public class V1OpenStackMachineSpec {
  @SerializedName("az")
  private String az = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("instanceType")
  private V1GenericInstanceType instanceType = null;

  @SerializedName("nics")
  private List<V1OpenStackNic> nics = new ArrayList<V1OpenStackNic>();

  @SerializedName("projectId")
  private String projectId = null;

  @SerializedName("securityGroups")
  private List<String> securityGroups = null;

  @SerializedName("sshKeyName")
  private String sshKeyName = null;

  public V1OpenStackMachineSpec az(String az) {
    this.az = az;
    return this;
  }

   /**
   * Get az
   * @return az
  **/
  @Schema(description = "")
  public String getAz() {
    return az;
  }

  public void setAz(String az) {
    this.az = az;
  }

  public V1OpenStackMachineSpec image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public V1OpenStackMachineSpec instanceType(V1GenericInstanceType instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(required = true, description = "")
  public V1GenericInstanceType getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(V1GenericInstanceType instanceType) {
    this.instanceType = instanceType;
  }

  public V1OpenStackMachineSpec nics(List<V1OpenStackNic> nics) {
    this.nics = nics;
    return this;
  }

  public V1OpenStackMachineSpec addNicsItem(V1OpenStackNic nicsItem) {
    this.nics.add(nicsItem);
    return this;
  }

   /**
   * Get nics
   * @return nics
  **/
  @Schema(required = true, description = "")
  public List<V1OpenStackNic> getNics() {
    return nics;
  }

  public void setNics(List<V1OpenStackNic> nics) {
    this.nics = nics;
  }

  public V1OpenStackMachineSpec projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public V1OpenStackMachineSpec securityGroups(List<String> securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  public V1OpenStackMachineSpec addSecurityGroupsItem(String securityGroupsItem) {
    if (this.securityGroups == null) {
      this.securityGroups = new ArrayList<String>();
    }
    this.securityGroups.add(securityGroupsItem);
    return this;
  }

   /**
   * Get securityGroups
   * @return securityGroups
  **/
  @Schema(description = "")
  public List<String> getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List<String> securityGroups) {
    this.securityGroups = securityGroups;
  }

  public V1OpenStackMachineSpec sshKeyName(String sshKeyName) {
    this.sshKeyName = sshKeyName;
    return this;
  }

   /**
   * Get sshKeyName
   * @return sshKeyName
  **/
  @Schema(description = "")
  public String getSshKeyName() {
    return sshKeyName;
  }

  public void setSshKeyName(String sshKeyName) {
    this.sshKeyName = sshKeyName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1OpenStackMachineSpec v1OpenStackMachineSpec = (V1OpenStackMachineSpec) o;
    return Objects.equals(this.az, v1OpenStackMachineSpec.az) &&
        Objects.equals(this.image, v1OpenStackMachineSpec.image) &&
        Objects.equals(this.instanceType, v1OpenStackMachineSpec.instanceType) &&
        Objects.equals(this.nics, v1OpenStackMachineSpec.nics) &&
        Objects.equals(this.projectId, v1OpenStackMachineSpec.projectId) &&
        Objects.equals(this.securityGroups, v1OpenStackMachineSpec.securityGroups) &&
        Objects.equals(this.sshKeyName, v1OpenStackMachineSpec.sshKeyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(az, image, instanceType, nics, projectId, securityGroups, sshKeyName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1OpenStackMachineSpec {\n");
    
    sb.append("    az: ").append(toIndentedString(az)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    nics: ").append(toIndentedString(nics)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    sshKeyName: ").append(toIndentedString(sshKeyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
