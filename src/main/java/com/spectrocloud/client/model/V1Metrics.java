/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1MetricAggregation;
import com.spectrocloud.client.model.V1MetricPoint;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * V1Metrics
 */



public class V1Metrics {
  @SerializedName("aggregation")
  private V1MetricAggregation aggregation = null;

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("points")
  private List<V1MetricPoint> points = null;

  @SerializedName("unit")
  private String unit = null;

  public V1Metrics aggregation(V1MetricAggregation aggregation) {
    this.aggregation = aggregation;
    return this;
  }

   /**
   * Get aggregation
   * @return aggregation
  **/
  @Schema(description = "")
  public V1MetricAggregation getAggregation() {
    return aggregation;
  }

  public void setAggregation(V1MetricAggregation aggregation) {
    this.aggregation = aggregation;
  }

  public V1Metrics kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @Schema(description = "")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public V1Metrics points(List<V1MetricPoint> points) {
    this.points = points;
    return this;
  }

  public V1Metrics addPointsItem(V1MetricPoint pointsItem) {
    if (this.points == null) {
      this.points = new ArrayList<V1MetricPoint>();
    }
    this.points.add(pointsItem);
    return this;
  }

   /**
   * Get points
   * @return points
  **/
  @Schema(description = "")
  public List<V1MetricPoint> getPoints() {
    return points;
  }

  public void setPoints(List<V1MetricPoint> points) {
    this.points = points;
  }

  public V1Metrics unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @Schema(description = "")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Metrics v1Metrics = (V1Metrics) o;
    return Objects.equals(this.aggregation, v1Metrics.aggregation) &&
        Objects.equals(this.kind, v1Metrics.kind) &&
        Objects.equals(this.points, v1Metrics.points) &&
        Objects.equals(this.unit, v1Metrics.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregation, kind, points, unit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Metrics {\n");
    
    sb.append("    aggregation: ").append(toIndentedString(aggregation)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
