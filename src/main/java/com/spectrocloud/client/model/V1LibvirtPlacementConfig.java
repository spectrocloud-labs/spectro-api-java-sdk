/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1GPUDeviceSpec;
import com.spectrocloud.client.model.V1LibvirtHostIdentity;
import com.spectrocloud.client.model.V1LibvirtNetworkSpec;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * V1LibvirtPlacementConfig
 */



public class V1LibvirtPlacementConfig {
  @SerializedName("dataStoragePool")
  private String dataStoragePool = null;

  @SerializedName("gpuDevices")
  private List<V1GPUDeviceSpec> gpuDevices = null;

  @SerializedName("hostAddress")
  private String hostAddress = null;

  @SerializedName("hostIdentity")
  private V1LibvirtHostIdentity hostIdentity = null;

  @SerializedName("hostUid")
  private String hostUid = null;

  @SerializedName("networks")
  private List<V1LibvirtNetworkSpec> networks = new ArrayList<V1LibvirtNetworkSpec>();

  @SerializedName("sourceStoragePool")
  private String sourceStoragePool = null;

  @SerializedName("targetStoragePool")
  private String targetStoragePool = null;

  public V1LibvirtPlacementConfig dataStoragePool(String dataStoragePool) {
    this.dataStoragePool = dataStoragePool;
    return this;
  }

   /**
   * DataStoragePool is the storage pool from which additional disks are assigned
   * @return dataStoragePool
  **/
  @Schema(description = "DataStoragePool is the storage pool from which additional disks are assigned")
  public String getDataStoragePool() {
    return dataStoragePool;
  }

  public void setDataStoragePool(String dataStoragePool) {
    this.dataStoragePool = dataStoragePool;
  }

  public V1LibvirtPlacementConfig gpuDevices(List<V1GPUDeviceSpec> gpuDevices) {
    this.gpuDevices = gpuDevices;
    return this;
  }

  public V1LibvirtPlacementConfig addGpuDevicesItem(V1GPUDeviceSpec gpuDevicesItem) {
    if (this.gpuDevices == null) {
      this.gpuDevices = new ArrayList<V1GPUDeviceSpec>();
    }
    this.gpuDevices.add(gpuDevicesItem);
    return this;
  }

   /**
   * GPU Devices is the list of LibvirtHost GPU devices, to be used for this placement
   * @return gpuDevices
  **/
  @Schema(description = "GPU Devices is the list of LibvirtHost GPU devices, to be used for this placement")
  public List<V1GPUDeviceSpec> getGpuDevices() {
    return gpuDevices;
  }

  public void setGpuDevices(List<V1GPUDeviceSpec> gpuDevices) {
    this.gpuDevices = gpuDevices;
  }

  public V1LibvirtPlacementConfig hostAddress(String hostAddress) {
    this.hostAddress = hostAddress;
    return this;
  }

   /**
   * HostAddress is a FQDN or IP address of the LibvirtHost
   * @return hostAddress
  **/
  @Schema(required = true, description = "HostAddress is a FQDN or IP address of the LibvirtHost")
  public String getHostAddress() {
    return hostAddress;
  }

  public void setHostAddress(String hostAddress) {
    this.hostAddress = hostAddress;
  }

  public V1LibvirtPlacementConfig hostIdentity(V1LibvirtHostIdentity hostIdentity) {
    this.hostIdentity = hostIdentity;
    return this;
  }

   /**
   * Get hostIdentity
   * @return hostIdentity
  **/
  @Schema(description = "")
  public V1LibvirtHostIdentity getHostIdentity() {
    return hostIdentity;
  }

  public void setHostIdentity(V1LibvirtHostIdentity hostIdentity) {
    this.hostIdentity = hostIdentity;
  }

  public V1LibvirtPlacementConfig hostUid(String hostUid) {
    this.hostUid = hostUid;
    return this;
  }

   /**
   * HostUid is the ID of the LibvirtHost
   * @return hostUid
  **/
  @Schema(required = true, description = "HostUid is the ID of the LibvirtHost")
  public String getHostUid() {
    return hostUid;
  }

  public void setHostUid(String hostUid) {
    this.hostUid = hostUid;
  }

  public V1LibvirtPlacementConfig networks(List<V1LibvirtNetworkSpec> networks) {
    this.networks = networks;
    return this;
  }

  public V1LibvirtPlacementConfig addNetworksItem(V1LibvirtNetworkSpec networksItem) {
    this.networks.add(networksItem);
    return this;
  }

   /**
   * Networks defines the network specifications of the vms in the machine pool
   * @return networks
  **/
  @Schema(required = true, description = "Networks defines the network specifications of the vms in the machine pool")
  public List<V1LibvirtNetworkSpec> getNetworks() {
    return networks;
  }

  public void setNetworks(List<V1LibvirtNetworkSpec> networks) {
    this.networks = networks;
  }

  public V1LibvirtPlacementConfig sourceStoragePool(String sourceStoragePool) {
    this.sourceStoragePool = sourceStoragePool;
    return this;
  }

   /**
   * SourceStoragePool is the storage pool for the vm image
   * @return sourceStoragePool
  **/
  @Schema(required = true, description = "SourceStoragePool is the storage pool for the vm image")
  public String getSourceStoragePool() {
    return sourceStoragePool;
  }

  public void setSourceStoragePool(String sourceStoragePool) {
    this.sourceStoragePool = sourceStoragePool;
  }

  public V1LibvirtPlacementConfig targetStoragePool(String targetStoragePool) {
    this.targetStoragePool = targetStoragePool;
    return this;
  }

   /**
   * TargetStoragePool is the optional storage pool from which additional disks are assigned. If not specified, the sourceStoragePool is also used as the targetStoragePool
   * @return targetStoragePool
  **/
  @Schema(description = "TargetStoragePool is the optional storage pool from which additional disks are assigned. If not specified, the sourceStoragePool is also used as the targetStoragePool")
  public String getTargetStoragePool() {
    return targetStoragePool;
  }

  public void setTargetStoragePool(String targetStoragePool) {
    this.targetStoragePool = targetStoragePool;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1LibvirtPlacementConfig v1LibvirtPlacementConfig = (V1LibvirtPlacementConfig) o;
    return Objects.equals(this.dataStoragePool, v1LibvirtPlacementConfig.dataStoragePool) &&
        Objects.equals(this.gpuDevices, v1LibvirtPlacementConfig.gpuDevices) &&
        Objects.equals(this.hostAddress, v1LibvirtPlacementConfig.hostAddress) &&
        Objects.equals(this.hostIdentity, v1LibvirtPlacementConfig.hostIdentity) &&
        Objects.equals(this.hostUid, v1LibvirtPlacementConfig.hostUid) &&
        Objects.equals(this.networks, v1LibvirtPlacementConfig.networks) &&
        Objects.equals(this.sourceStoragePool, v1LibvirtPlacementConfig.sourceStoragePool) &&
        Objects.equals(this.targetStoragePool, v1LibvirtPlacementConfig.targetStoragePool);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataStoragePool, gpuDevices, hostAddress, hostIdentity, hostUid, networks, sourceStoragePool, targetStoragePool);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1LibvirtPlacementConfig {\n");
    
    sb.append("    dataStoragePool: ").append(toIndentedString(dataStoragePool)).append("\n");
    sb.append("    gpuDevices: ").append(toIndentedString(gpuDevices)).append("\n");
    sb.append("    hostAddress: ").append(toIndentedString(hostAddress)).append("\n");
    sb.append("    hostIdentity: ").append(toIndentedString(hostIdentity)).append("\n");
    sb.append("    hostUid: ").append(toIndentedString(hostUid)).append("\n");
    sb.append("    networks: ").append(toIndentedString(networks)).append("\n");
    sb.append("    sourceStoragePool: ").append(toIndentedString(sourceStoragePool)).append("\n");
    sb.append("    targetStoragePool: ").append(toIndentedString(targetStoragePool)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
