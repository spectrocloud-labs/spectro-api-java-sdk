/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1MgmtDbCollectionIndexInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Database info
 */
@Schema(description = "Database info")


public class V1MgmtDbCollectionInfo {
  @SerializedName("count")
  private Integer count = null;

  @SerializedName("indexes")
  private List<V1MgmtDbCollectionIndexInfo> indexes = null;

  @SerializedName("isCapped")
  private Boolean isCapped = null;

  @SerializedName("isReadOnly")
  private Boolean isReadOnly = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("size")
  private Integer size = null;

  @SerializedName("storageSize")
  private Integer storageSize = null;

  @SerializedName("totalIndexSize")
  private Integer totalIndexSize = null;

  public V1MgmtDbCollectionInfo count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @Schema(description = "")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public V1MgmtDbCollectionInfo indexes(List<V1MgmtDbCollectionIndexInfo> indexes) {
    this.indexes = indexes;
    return this;
  }

  public V1MgmtDbCollectionInfo addIndexesItem(V1MgmtDbCollectionIndexInfo indexesItem) {
    if (this.indexes == null) {
      this.indexes = new ArrayList<V1MgmtDbCollectionIndexInfo>();
    }
    this.indexes.add(indexesItem);
    return this;
  }

   /**
   * Get indexes
   * @return indexes
  **/
  @Schema(description = "")
  public List<V1MgmtDbCollectionIndexInfo> getIndexes() {
    return indexes;
  }

  public void setIndexes(List<V1MgmtDbCollectionIndexInfo> indexes) {
    this.indexes = indexes;
  }

  public V1MgmtDbCollectionInfo isCapped(Boolean isCapped) {
    this.isCapped = isCapped;
    return this;
  }

   /**
   * Get isCapped
   * @return isCapped
  **/
  @Schema(description = "")
  public Boolean isIsCapped() {
    return isCapped;
  }

  public void setIsCapped(Boolean isCapped) {
    this.isCapped = isCapped;
  }

  public V1MgmtDbCollectionInfo isReadOnly(Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
    return this;
  }

   /**
   * Get isReadOnly
   * @return isReadOnly
  **/
  @Schema(description = "")
  public Boolean isIsReadOnly() {
    return isReadOnly;
  }

  public void setIsReadOnly(Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
  }

  public V1MgmtDbCollectionInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1MgmtDbCollectionInfo size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public V1MgmtDbCollectionInfo storageSize(Integer storageSize) {
    this.storageSize = storageSize;
    return this;
  }

   /**
   * Get storageSize
   * @return storageSize
  **/
  @Schema(description = "")
  public Integer getStorageSize() {
    return storageSize;
  }

  public void setStorageSize(Integer storageSize) {
    this.storageSize = storageSize;
  }

  public V1MgmtDbCollectionInfo totalIndexSize(Integer totalIndexSize) {
    this.totalIndexSize = totalIndexSize;
    return this;
  }

   /**
   * Get totalIndexSize
   * @return totalIndexSize
  **/
  @Schema(description = "")
  public Integer getTotalIndexSize() {
    return totalIndexSize;
  }

  public void setTotalIndexSize(Integer totalIndexSize) {
    this.totalIndexSize = totalIndexSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1MgmtDbCollectionInfo v1MgmtDbCollectionInfo = (V1MgmtDbCollectionInfo) o;
    return Objects.equals(this.count, v1MgmtDbCollectionInfo.count) &&
        Objects.equals(this.indexes, v1MgmtDbCollectionInfo.indexes) &&
        Objects.equals(this.isCapped, v1MgmtDbCollectionInfo.isCapped) &&
        Objects.equals(this.isReadOnly, v1MgmtDbCollectionInfo.isReadOnly) &&
        Objects.equals(this.name, v1MgmtDbCollectionInfo.name) &&
        Objects.equals(this.size, v1MgmtDbCollectionInfo.size) &&
        Objects.equals(this.storageSize, v1MgmtDbCollectionInfo.storageSize) &&
        Objects.equals(this.totalIndexSize, v1MgmtDbCollectionInfo.totalIndexSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, indexes, isCapped, isReadOnly, name, size, storageSize, totalIndexSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1MgmtDbCollectionInfo {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    indexes: ").append(toIndentedString(indexes)).append("\n");
    sb.append("    isCapped: ").append(toIndentedString(isCapped)).append("\n");
    sb.append("    isReadOnly: ").append(toIndentedString(isReadOnly)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    storageSize: ").append(toIndentedString(storageSize)).append("\n");
    sb.append("    totalIndexSize: ").append(toIndentedString(totalIndexSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
