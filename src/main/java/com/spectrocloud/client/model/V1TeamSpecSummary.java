/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1UidSummary;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * V1TeamSpecSummary
 */



public class V1TeamSpecSummary {
  @SerializedName("emailId")
  private String emailId = null;

  @SerializedName("projects")
  private List<V1UidSummary> projects = null;

  @SerializedName("roles")
  private List<V1UidSummary> roles = null;

  @SerializedName("users")
  private List<V1UidSummary> users = null;

  public V1TeamSpecSummary emailId(String emailId) {
    this.emailId = emailId;
    return this;
  }

   /**
   * Get emailId
   * @return emailId
  **/
  @Schema(description = "")
  public String getEmailId() {
    return emailId;
  }

  public void setEmailId(String emailId) {
    this.emailId = emailId;
  }

  public V1TeamSpecSummary projects(List<V1UidSummary> projects) {
    this.projects = projects;
    return this;
  }

  public V1TeamSpecSummary addProjectsItem(V1UidSummary projectsItem) {
    if (this.projects == null) {
      this.projects = new ArrayList<V1UidSummary>();
    }
    this.projects.add(projectsItem);
    return this;
  }

   /**
   * Get projects
   * @return projects
  **/
  @Schema(description = "")
  public List<V1UidSummary> getProjects() {
    return projects;
  }

  public void setProjects(List<V1UidSummary> projects) {
    this.projects = projects;
  }

  public V1TeamSpecSummary roles(List<V1UidSummary> roles) {
    this.roles = roles;
    return this;
  }

  public V1TeamSpecSummary addRolesItem(V1UidSummary rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<V1UidSummary>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @Schema(description = "")
  public List<V1UidSummary> getRoles() {
    return roles;
  }

  public void setRoles(List<V1UidSummary> roles) {
    this.roles = roles;
  }

  public V1TeamSpecSummary users(List<V1UidSummary> users) {
    this.users = users;
    return this;
  }

  public V1TeamSpecSummary addUsersItem(V1UidSummary usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<V1UidSummary>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @Schema(description = "")
  public List<V1UidSummary> getUsers() {
    return users;
  }

  public void setUsers(List<V1UidSummary> users) {
    this.users = users;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1TeamSpecSummary v1TeamSpecSummary = (V1TeamSpecSummary) o;
    return Objects.equals(this.emailId, v1TeamSpecSummary.emailId) &&
        Objects.equals(this.projects, v1TeamSpecSummary.projects) &&
        Objects.equals(this.roles, v1TeamSpecSummary.roles) &&
        Objects.equals(this.users, v1TeamSpecSummary.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailId, projects, roles, users);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1TeamSpecSummary {\n");
    
    sb.append("    emailId: ").append(toIndentedString(emailId)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
