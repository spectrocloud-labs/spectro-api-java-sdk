/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1VmLocalObjectReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents a cloud-init config drive user data source. More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html
 */
@Schema(description = "Represents a cloud-init config drive user data source. More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html")


public class V1VmCloudInitConfigDriveSource {
  @SerializedName("networkData")
  private String networkData = null;

  @SerializedName("networkDataBase64")
  private String networkDataBase64 = null;

  @SerializedName("networkDataSecretRef")
  private V1VmLocalObjectReference networkDataSecretRef = null;

  @SerializedName("secretRef")
  private V1VmLocalObjectReference secretRef = null;

  @SerializedName("userData")
  private String userData = null;

  @SerializedName("userDataBase64")
  private String userDataBase64 = null;

  public V1VmCloudInitConfigDriveSource networkData(String networkData) {
    this.networkData = networkData;
    return this;
  }

   /**
   * NetworkData contains config drive inline cloud-init networkdata.
   * @return networkData
  **/
  @Schema(description = "NetworkData contains config drive inline cloud-init networkdata.")
  public String getNetworkData() {
    return networkData;
  }

  public void setNetworkData(String networkData) {
    this.networkData = networkData;
  }

  public V1VmCloudInitConfigDriveSource networkDataBase64(String networkDataBase64) {
    this.networkDataBase64 = networkDataBase64;
    return this;
  }

   /**
   * NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
   * @return networkDataBase64
  **/
  @Schema(description = "NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.")
  public String getNetworkDataBase64() {
    return networkDataBase64;
  }

  public void setNetworkDataBase64(String networkDataBase64) {
    this.networkDataBase64 = networkDataBase64;
  }

  public V1VmCloudInitConfigDriveSource networkDataSecretRef(V1VmLocalObjectReference networkDataSecretRef) {
    this.networkDataSecretRef = networkDataSecretRef;
    return this;
  }

   /**
   * Get networkDataSecretRef
   * @return networkDataSecretRef
  **/
  @Schema(description = "")
  public V1VmLocalObjectReference getNetworkDataSecretRef() {
    return networkDataSecretRef;
  }

  public void setNetworkDataSecretRef(V1VmLocalObjectReference networkDataSecretRef) {
    this.networkDataSecretRef = networkDataSecretRef;
  }

  public V1VmCloudInitConfigDriveSource secretRef(V1VmLocalObjectReference secretRef) {
    this.secretRef = secretRef;
    return this;
  }

   /**
   * Get secretRef
   * @return secretRef
  **/
  @Schema(description = "")
  public V1VmLocalObjectReference getSecretRef() {
    return secretRef;
  }

  public void setSecretRef(V1VmLocalObjectReference secretRef) {
    this.secretRef = secretRef;
  }

  public V1VmCloudInitConfigDriveSource userData(String userData) {
    this.userData = userData;
    return this;
  }

   /**
   * UserData contains config drive inline cloud-init userdata.
   * @return userData
  **/
  @Schema(description = "UserData contains config drive inline cloud-init userdata.")
  public String getUserData() {
    return userData;
  }

  public void setUserData(String userData) {
    this.userData = userData;
  }

  public V1VmCloudInitConfigDriveSource userDataBase64(String userDataBase64) {
    this.userDataBase64 = userDataBase64;
    return this;
  }

   /**
   * UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
   * @return userDataBase64
  **/
  @Schema(description = "UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.")
  public String getUserDataBase64() {
    return userDataBase64;
  }

  public void setUserDataBase64(String userDataBase64) {
    this.userDataBase64 = userDataBase64;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1VmCloudInitConfigDriveSource v1VmCloudInitConfigDriveSource = (V1VmCloudInitConfigDriveSource) o;
    return Objects.equals(this.networkData, v1VmCloudInitConfigDriveSource.networkData) &&
        Objects.equals(this.networkDataBase64, v1VmCloudInitConfigDriveSource.networkDataBase64) &&
        Objects.equals(this.networkDataSecretRef, v1VmCloudInitConfigDriveSource.networkDataSecretRef) &&
        Objects.equals(this.secretRef, v1VmCloudInitConfigDriveSource.secretRef) &&
        Objects.equals(this.userData, v1VmCloudInitConfigDriveSource.userData) &&
        Objects.equals(this.userDataBase64, v1VmCloudInitConfigDriveSource.userDataBase64);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkData, networkDataBase64, networkDataSecretRef, secretRef, userData, userDataBase64);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1VmCloudInitConfigDriveSource {\n");
    
    sb.append("    networkData: ").append(toIndentedString(networkData)).append("\n");
    sb.append("    networkDataBase64: ").append(toIndentedString(networkDataBase64)).append("\n");
    sb.append("    networkDataSecretRef: ").append(toIndentedString(networkDataSecretRef)).append("\n");
    sb.append("    secretRef: ").append(toIndentedString(secretRef)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    userDataBase64: ").append(toIndentedString(userDataBase64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
