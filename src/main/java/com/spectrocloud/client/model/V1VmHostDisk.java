/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents a disk created on the cluster level
 */
@Schema(description = "Represents a disk created on the cluster level")


public class V1VmHostDisk {
  @SerializedName("capacity")
  private String capacity = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("shared")
  private Boolean shared = null;

  @SerializedName("type")
  private String type = null;

  public V1VmHostDisk capacity(String capacity) {
    this.capacity = capacity;
    return this;
  }

   /**
   * Get capacity
   * @return capacity
  **/
  @Schema(description = "")
  public String getCapacity() {
    return capacity;
  }

  public void setCapacity(String capacity) {
    this.capacity = capacity;
  }

  public V1VmHostDisk path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The path to HostDisk image located on the cluster
   * @return path
  **/
  @Schema(required = true, description = "The path to HostDisk image located on the cluster")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public V1VmHostDisk shared(Boolean shared) {
    this.shared = shared;
    return this;
  }

   /**
   * Shared indicate whether the path is shared between nodes
   * @return shared
  **/
  @Schema(description = "Shared indicate whether the path is shared between nodes")
  public Boolean isShared() {
    return shared;
  }

  public void setShared(Boolean shared) {
    this.shared = shared;
  }

  public V1VmHostDisk type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Contains information if disk.img exists or should be created allowed options are &#x27;Disk&#x27; and &#x27;DiskOrCreate&#x27;
   * @return type
  **/
  @Schema(required = true, description = "Contains information if disk.img exists or should be created allowed options are 'Disk' and 'DiskOrCreate'")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1VmHostDisk v1VmHostDisk = (V1VmHostDisk) o;
    return Objects.equals(this.capacity, v1VmHostDisk.capacity) &&
        Objects.equals(this.path, v1VmHostDisk.path) &&
        Objects.equals(this.shared, v1VmHostDisk.shared) &&
        Objects.equals(this.type, v1VmHostDisk.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacity, path, shared, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1VmHostDisk {\n");
    
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
