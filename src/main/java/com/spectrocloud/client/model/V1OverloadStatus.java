/*
 * Palette APIs - 3.4
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.spectrocloud.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spectrocloud.client.model.V1SpectroClusterHealthStatus;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Overload status
 */
@Schema(description = "Overload status")


public class V1OverloadStatus {
  @SerializedName("health")
  private V1SpectroClusterHealthStatus health = null;

  @SerializedName("isActive")
  private Boolean isActive = null;

  @SerializedName("isReady")
  private Boolean isReady = null;

  @SerializedName("kubectlCommands")
  private List<String> kubectlCommands = null;

  @SerializedName("state")
  private String state = null;

  public V1OverloadStatus health(V1SpectroClusterHealthStatus health) {
    this.health = health;
    return this;
  }

   /**
   * Get health
   * @return health
  **/
  @Schema(description = "")
  public V1SpectroClusterHealthStatus getHealth() {
    return health;
  }

  public void setHealth(V1SpectroClusterHealthStatus health) {
    this.health = health;
  }

  public V1OverloadStatus isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @Schema(description = "")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public V1OverloadStatus isReady(Boolean isReady) {
    this.isReady = isReady;
    return this;
  }

   /**
   * Get isReady
   * @return isReady
  **/
  @Schema(description = "")
  public Boolean isIsReady() {
    return isReady;
  }

  public void setIsReady(Boolean isReady) {
    this.isReady = isReady;
  }

  public V1OverloadStatus kubectlCommands(List<String> kubectlCommands) {
    this.kubectlCommands = kubectlCommands;
    return this;
  }

  public V1OverloadStatus addKubectlCommandsItem(String kubectlCommandsItem) {
    if (this.kubectlCommands == null) {
      this.kubectlCommands = new ArrayList<String>();
    }
    this.kubectlCommands.add(kubectlCommandsItem);
    return this;
  }

   /**
   * Get kubectlCommands
   * @return kubectlCommands
  **/
  @Schema(description = "")
  public List<String> getKubectlCommands() {
    return kubectlCommands;
  }

  public void setKubectlCommands(List<String> kubectlCommands) {
    this.kubectlCommands = kubectlCommands;
  }

  public V1OverloadStatus state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1OverloadStatus v1OverloadStatus = (V1OverloadStatus) o;
    return Objects.equals(this.health, v1OverloadStatus.health) &&
        Objects.equals(this.isActive, v1OverloadStatus.isActive) &&
        Objects.equals(this.isReady, v1OverloadStatus.isReady) &&
        Objects.equals(this.kubectlCommands, v1OverloadStatus.kubectlCommands) &&
        Objects.equals(this.state, v1OverloadStatus.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(health, isActive, isReady, kubectlCommands, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1OverloadStatus {\n");
    
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isReady: ").append(toIndentedString(isReady)).append("\n");
    sb.append("    kubectlCommands: ").append(toIndentedString(kubectlCommands)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
